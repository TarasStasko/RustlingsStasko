{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused import: `super::Command`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\quizzes\\quiz2.rs","byte_start":756,"byte_end":770,"line_start":27,"line_end":27,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    use super::Command;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"exercises\\quizzes\\quiz2.rs","byte_start":752,"byte_end":771,"line_start":27,"line_end":27,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    use super::Command;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `super::Command`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\quizzes\\quiz2.rs:27:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use super::Command;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `a` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types3.rs","byte_start":113,"byte_end":114,"line_start":5,"line_end":5,"column_start":8,"column_end":9,"is_primary":true,"text":[{"text":"    if a.len() >= 100 {","highlight_start":8,"highlight_end":9}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `a` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types3.rs:5:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if a.len() >= 100 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 1 argument but 0 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\02_functions\\functions3.rs","byte_start":161,"byte_end":163,"line_start":9,"line_end":9,"column_start":12,"column_end":14,"is_primary":false,"text":[{"text":"    call_me();","highlight_start":12,"highlight_end":14}],"label":"argument #1 of type `u8` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\02_functions\\functions3.rs","byte_start":154,"byte_end":161,"line_start":9,"line_end":9,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    call_me();","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\02_functions\\functions3.rs","byte_start":11,"byte_end":18,"line_start":1,"line_end":1,"column_start":12,"column_end":19,"is_primary":false,"text":[{"text":"fn call_me(num: u8) {","highlight_start":12,"highlight_end":19}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\02_functions\\functions3.rs","byte_start":3,"byte_end":10,"line_start":1,"line_end":1,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn call_me(num: u8) {","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"exercises\\02_functions\\functions3.rs","byte_start":161,"byte_end":163,"line_start":9,"line_end":9,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"    call_me();","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":"(/* u8 */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 1 argument but 0 arguments were supplied\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions3.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    call_me();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14margument #1 of type `u8` is missing\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions3.rs:1:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn call_me(num: u8) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    call_me(\u001b[0m\u001b[0m\u001b[38;5;10m/* u8 */\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find function `transformer` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\quizzes\\quiz2.rs","byte_start":1400,"byte_end":1411,"line_start":51,"line_end":51,"column_start":22,"column_end":33,"is_primary":true,"text":[{"text":"        let output = transformer(input);","highlight_start":22,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find function `transformer` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\quizzes\\quiz2.rs:51:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let output = transformer(input);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cow1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\cow1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected a pattern, found a function call","code":{"code":"E0532","explanation":"Pattern arm did not match expected kind.\n\nErroneous code example:\n\n```compile_fail,E0532\nenum State {\n    Succeeded,\n    Failed(String),\n}\n\nfn print_on_failure(state: &State) {\n    match *state {\n        // error: expected unit struct, unit variant or constant, found tuple\n        //        variant `State::Failed`\n        State::Failed => println!(\"Failed\"),\n        _ => ()\n    }\n}\n```\n\nTo fix this error, ensure the match arm kind is the same as the expression\nmatched.\n\nFixed example:\n\n```\nenum State {\n    Succeeded,\n    Failed(String),\n}\n\nfn print_on_failure(state: &State) {\n    match *state {\n        State::Failed(ref msg) => println!(\"Failed with {}\", msg),\n        _ => ()\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29797,"line_start":875,"line_end":875,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":33}],"label":"not a tuple struct or tuple variant","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\19_smart_pointers\\cow1.rs","byte_start":1246,"byte_end":1253,"line_start":42,"line_end":42,"column_start":33,"column_end":40,"is_primary":false,"text":[{"text":"        assert!(matches!(input, todo!()));","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29733,"byte_end":29750,"line_start":873,"line_end":873,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"function calls are not allowed in patterns: <https://doc.rust-lang.org/book/ch19-00-patterns.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0532]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected a pattern, found a function call\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\cow1.rs:42:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert!(matches!(input, todo!()));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a tuple struct or tuple variant\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: function calls are not allowed in patterns: <https://doc.rust-lang.org/book/ch19-00-patterns.html>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `todo` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cow1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\cow1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected a pattern, found a function call","code":{"code":"E0532","explanation":"Pattern arm did not match expected kind.\n\nErroneous code example:\n\n```compile_fail,E0532\nenum State {\n    Succeeded,\n    Failed(String),\n}\n\nfn print_on_failure(state: &State) {\n    match *state {\n        // error: expected unit struct, unit variant or constant, found tuple\n        //        variant `State::Failed`\n        State::Failed => println!(\"Failed\"),\n        _ => ()\n    }\n}\n```\n\nTo fix this error, ensure the match arm kind is the same as the expression\nmatched.\n\nFixed example:\n\n```\nenum State {\n    Succeeded,\n    Failed(String),\n}\n\nfn print_on_failure(state: &State) {\n    match *state {\n        State::Failed(ref msg) => println!(\"Failed with {}\", msg),\n        _ => ()\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29797,"line_start":875,"line_end":875,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":33}],"label":"not a tuple struct or tuple variant","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\19_smart_pointers\\cow1.rs","byte_start":1788,"byte_end":1795,"line_start":55,"line_end":55,"column_start":33,"column_end":40,"is_primary":false,"text":[{"text":"        assert!(matches!(input, todo!()));","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29733,"byte_end":29750,"line_start":873,"line_end":873,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"function calls are not allowed in patterns: <https://doc.rust-lang.org/book/ch19-00-patterns.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0532]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected a pattern, found a function call\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\cow1.rs:55:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert!(matches!(input, todo!()));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a tuple struct or tuple variant\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: function calls are not allowed in patterns: <https://doc.rust-lang.org/book/ch19-00-patterns.html>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `todo` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cow1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\cow1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected a pattern, found a function call","code":{"code":"E0532","explanation":"Pattern arm did not match expected kind.\n\nErroneous code example:\n\n```compile_fail,E0532\nenum State {\n    Succeeded,\n    Failed(String),\n}\n\nfn print_on_failure(state: &State) {\n    match *state {\n        // error: expected unit struct, unit variant or constant, found tuple\n        //        variant `State::Failed`\n        State::Failed => println!(\"Failed\"),\n        _ => ()\n    }\n}\n```\n\nTo fix this error, ensure the match arm kind is the same as the expression\nmatched.\n\nFixed example:\n\n```\nenum State {\n    Succeeded,\n    Failed(String),\n}\n\nfn print_on_failure(state: &State) {\n    match *state {\n        State::Failed(ref msg) => println!(\"Failed with {}\", msg),\n        _ => ()\n    }\n}\n```\n"},"level":"error","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29797,"line_start":875,"line_end":875,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":33}],"label":"not a tuple struct or tuple variant","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\19_smart_pointers\\cow1.rs","byte_start":2291,"byte_end":2298,"line_start":67,"line_end":67,"column_start":33,"column_end":40,"is_primary":false,"text":[{"text":"        assert!(matches!(input, todo!()));","highlight_start":33,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29733,"byte_end":29750,"line_start":873,"line_end":873,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"function calls are not allowed in patterns: <https://doc.rust-lang.org/book/ch19-00-patterns.html>","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0532]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected a pattern, found a function call\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\cow1.rs:67:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m67\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert!(matches!(input, todo!()));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a tuple struct or tuple variant\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: function calls are not allowed in patterns: <https://doc.rust-lang.org/book/ch19-00-patterns.html>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `todo` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0061`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors6_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\13_error_handling\\errors6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors6_sol-3e7e995d9e99e8ad.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstrings4_sol-4c8458bb38d89148.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\04_primitive_types\\primitive_types1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types1_sol-4d957ecc4bc4deb1.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\quizzes\\quiz1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libquiz1_sol-55030ad05cff1c80.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\18_iterators\\iterators5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libiterators5_sol-6f7624f536c46a71.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\22_clippy\\clippy3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libclippy3-99d421f0ed130542.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\20_threads\\threads2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libthreads2_sol-716c40fc6550204c.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstructs2-bf206067365523bb.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cow1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\cow1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0532`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0532`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected type, found `)`","code":null,"level":"error","spans":[{"file_name":"exercises\\02_functions\\functions2.rs","byte_start":88,"byte_end":89,"line_start":2,"line_end":2,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"fn call_me(num:) {","highlight_start":16,"highlight_end":17}],"label":"expected type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected type, found `)`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions2.rs:2:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn call_me(num:) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected type\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected type, found `)`","code":null,"level":"error","spans":[{"file_name":"exercises\\02_functions\\functions2.rs","byte_start":88,"byte_end":89,"line_start":2,"line_end":2,"column_start":16,"column_end":17,"is_primary":true,"text":[{"text":"fn call_me(num:) {","highlight_start":16,"highlight_end":17}],"label":"expected type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected type, found `)`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions2.rs:2:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn call_me(num:) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected type\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `num` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\02_functions\\functions2.rs","byte_start":108,"byte_end":111,"line_start":3,"line_end":3,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"    for i in 0..num {","highlight_start":17,"highlight_end":20}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `num` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions2.rs:3:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for i in 0..num {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `num` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\02_functions\\functions2.rs","byte_start":108,"byte_end":111,"line_start":3,"line_end":3,"column_start":17,"column_end":20,"is_primary":true,"text":[{"text":"    for i in 0..num {","highlight_start":17,"highlight_end":20}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `num` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions2.rs:3:17\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for i in 0..num {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtraits2-6d43338894744179.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\21_macros\\macros1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmacros1_sol-a0aae09f74165560.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\07_structs\\structs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstructs2_sol-6cb30416084fcb46.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"from_str_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\23_conversions\\from_str.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfrom_str_sol-9f54f35e68723180.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\06_move_semantics\\move_semantics2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmove_semantics2_sol-23120832eaf00ae2.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\quizzes\\quiz3.rs","byte_start":1489,"byte_end":1493,"line_start":55,"line_end":55,"column_start":20,"column_end":24,"is_primary":true,"text":[{"text":"            grade: \"A+\",","highlight_start":20,"highlight_end":24}],"label":"expected `f32`, found `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\quizzes\\quiz3.rs:55:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            grade: \"A+\",\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `f32`, found `&str`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot assign twice to immutable variable `x`","code":{"code":"E0384","explanation":"An immutable variable was reassigned.\n\nErroneous code example:\n\n```compile_fail,E0384\nfn main() {\n    let x = 3;\n    x = 5; // error, reassignment of immutable variable\n}\n```\n\nBy default, variables in Rust are immutable. To fix this error, add the keyword\n`mut` after the keyword `let` when declaring the variable. For example:\n\n```\nfn main() {\n    let mut x = 3;\n    x = 5;\n}\n```\n\nAlternatively, you might consider initializing a new variable: either with a new\nbound name or (by [shadowing]) with the bound name of your existing variable.\nFor example:\n\n[shadowing]: https://doc.rust-lang.org/book/ch03-01-variables-and-mutability.html#shadowing\n\n```\nfn main() {\n    let x = 3;\n    let x = 5;\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables4.rs","byte_start":53,"byte_end":54,"line_start":3,"line_end":3,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"    let x = 3;","highlight_start":9,"highlight_end":10}],"label":"first assignment to `x`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\01_variables\\variables4.rs","byte_start":93,"byte_end":98,"line_start":6,"line_end":6,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    x = 5; // Don't change this line","highlight_start":5,"highlight_end":10}],"label":"cannot assign twice to immutable variable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider making this binding mutable","code":null,"level":"help","spans":[{"file_name":"exercises\\01_variables\\variables4.rs","byte_start":53,"byte_end":53,"line_start":3,"line_end":3,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"    let x = 3;","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"mut ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0384]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot assign twice to immutable variable `x`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables4.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let x = 3;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mfirst assignment to `x`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    x = 5; // Don't change this line\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot assign twice to immutable variable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider making this binding mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let \u001b[0m\u001b[0m\u001b[38;5;10mmut \u001b[0m\u001b[0mx = 3;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types6_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\04_primitive_types\\primitive_types6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types6_sol-e1d90cda11c08b59.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0384`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0384`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `name` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types5.rs","byte_start":195,"byte_end":199,"line_start":7,"line_end":7,"column_start":16,"column_end":20,"is_primary":true,"text":[{"text":"    println!(\"{name} is {age} years old\");","highlight_start":16,"highlight_end":20}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `name` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types5.rs:7:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{name} is {age} years old\");\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `age` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types5.rs","byte_start":205,"byte_end":208,"line_start":7,"line_end":7,"column_start":26,"column_end":29,"is_primary":true,"text":[{"text":"    println!(\"{name} is {age} years old\");","highlight_start":26,"highlight_end":29}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `age` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types5.rs:7:26\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{name} is {age} years old\");\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\01_variables\\variables3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvariables3_sol-a28281982046e443.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\04_primitive_types\\primitive_types3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types3_sol-0e5789637b1b9a2a.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"box1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\19_smart_pointers\\box1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libbox1_sol-672f1cc21a307385.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused import: `super::Command`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\quizzes\\quiz2.rs","byte_start":756,"byte_end":770,"line_start":27,"line_end":27,"column_start":9,"column_end":23,"is_primary":true,"text":[{"text":"    use super::Command;","highlight_start":9,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"exercises\\quizzes\\quiz2.rs","byte_start":752,"byte_end":771,"line_start":27,"line_end":27,"column_start":5,"column_end":24,"is_primary":true,"text":[{"text":"    use super::Command;","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `super::Command`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\quizzes\\quiz2.rs:27:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use super::Command;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find macro `my_macro` in this scope","code":null,"level":"error","spans":[{"file_name":"exercises\\21_macros\\macros2.rs","byte_start":16,"byte_end":24,"line_start":2,"line_end":2,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    my_macro!();","highlight_start":5,"highlight_end":13}],"label":"consider moving the definition of `my_macro` before this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a macro with the same name exists, but it appears later","code":null,"level":"note","spans":[{"file_name":"exercises\\21_macros\\macros2.rs","byte_start":123,"byte_end":131,"line_start":6,"line_end":6,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"macro_rules! my_macro {","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find macro `my_macro` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros2.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    my_macro!();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mconsider moving the definition of `my_macro` before this call\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: a macro with the same name exists, but it appears later\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros2.rs:6:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! my_macro {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `cents_per_gram`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\07_structs\\structs3.rs","byte_start":1068,"byte_end":1082,"line_start":33,"line_end":33,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    fn get_fees(&self, cents_per_gram: u32) {","highlight_start":24,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\07_structs\\structs3.rs","byte_start":1068,"byte_end":1082,"line_start":33,"line_end":33,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    fn get_fees(&self, cents_per_gram: u32) {","highlight_start":24,"highlight_end":38}],"label":null,"suggested_replacement":"_cents_per_gram","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `cents_per_gram`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs3.rs:33:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_fees(&self, cents_per_gram: u32) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_cents_per_gram`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused macro definition: `my_macro`","code":{"code":"unused_macros","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\21_macros\\macros2.rs","byte_start":123,"byte_end":131,"line_start":6,"line_end":6,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"macro_rules! my_macro {","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused macro definition: `my_macro`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros2.rs:6:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! my_macro {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_macros)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `licensing_info`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits3.rs","byte_start":432,"byte_end":462,"line_start":17,"line_end":17,"column_start":1,"column_end":31,"is_primary":true,"text":[{"text":"impl Licensed for SomeSoftware {} // Don't edit this line.","highlight_start":1,"highlight_end":31}],"label":"missing `licensing_info` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\15_traits\\traits3.rs","byte_start":289,"byte_end":324,"line_start":6,"line_end":6,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn licensing_info(&self) -> String;","highlight_start":5,"highlight_end":40}],"label":"`licensing_info` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn licensing_info(&self) -> String { todo!() }`","code":null,"level":"help","spans":[{"file_name":"exercises\\15_traits\\traits3.rs","byte_start":464,"byte_end":464,"line_start":17,"line_end":17,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"impl Licensed for SomeSoftware {} // Don't edit this line.","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":"fn licensing_info(&self) -> String { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: not all trait items implemented, missing: `licensing_info`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits3.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn licensing_info(&self) -> String;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`licensing_info` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Licensed for SomeSoftware {} // Don't edit this line.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `licensing_info` in implementation\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `licensing_info`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits3.rs","byte_start":491,"byte_end":522,"line_start":18,"line_end":18,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"impl Licensed for OtherSoftware {} // Don't edit this line.","highlight_start":1,"highlight_end":32}],"label":"missing `licensing_info` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\15_traits\\traits3.rs","byte_start":289,"byte_end":324,"line_start":6,"line_end":6,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn licensing_info(&self) -> String;","highlight_start":5,"highlight_end":40}],"label":"`licensing_info` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn licensing_info(&self) -> String { todo!() }`","code":null,"level":"help","spans":[{"file_name":"exercises\\15_traits\\traits3.rs","byte_start":524,"byte_end":524,"line_start":18,"line_end":18,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"impl Licensed for OtherSoftware {} // Don't edit this line.","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":"fn licensing_info(&self) -> String { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: not all trait items implemented, missing: `licensing_info`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits3.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn licensing_info(&self) -> String;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`licensing_info` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Licensed for OtherSoftware {} // Don't edit this line.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `licensing_info` in implementation\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rc1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\19_smart_pointers\\rc1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\librc1_sol-0dccb2fc99331fc4.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0046`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0046`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"exercises\\13_error_handling\\errors3.rs","byte_start":710,"byte_end":711,"line_start":23,"line_end":23,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"    let cost = total_cost(pretend_user_input)?;","highlight_start":46,"highlight_end":47}],"label":"cannot use the `?` operator in a function that returns `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\13_error_handling\\errors3.rs","byte_start":710,"byte_end":711,"line_start":23,"line_end":23,"column_start":46,"column_end":47,"is_primary":false,"text":[{"text":"    let cost = total_cost(pretend_user_input)?;","highlight_start":46,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of operator `?`","def_site_span":{"file_name":"exercises\\13_error_handling\\errors3.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\13_error_handling\\errors3.rs","byte_start":561,"byte_end":570,"line_start":18,"line_end":18,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"fn main() {","highlight_start":1,"highlight_end":10}],"label":"this function should return `Result` or `Option` to accept `?`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding return type","code":null,"level":"help","spans":[{"file_name":"exercises\\13_error_handling\\errors3.rs","byte_start":570,"byte_end":570,"line_start":18,"line_end":18,"column_start":10,"column_end":10,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":10,"highlight_end":10}],"label":null,"suggested_replacement":" -> Result<(), Box<dyn std::error::Error>>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\13_error_handling\\errors3.rs:23:46\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis function should return `Result` or `Option` to accept `?`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let cost = total_cost(pretend_user_input)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot use the `?` operator in a function that returns `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding return type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn main()\u001b[0m\u001b[0m\u001b[38;5;10m -> Result<(), Box<dyn std::error::Error>>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant named `Resize` found for enum `Message`","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":274,"byte_end":280,"line_start":20,"line_end":20,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"        Message::Resize {","highlight_start":18,"highlight_end":24}],"label":"variant not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":76,"byte_end":88,"line_start":8,"line_end":8,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant `Resize` not found here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant named `Resize` found for enum `Message`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums2.rs:20:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant `Resize` not found here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Message::Resize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libquiz2-1723f1ac27d2b467.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Resize` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":136,"byte_end":142,"line_start":7,"line_end":7,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"    println!(\"{:?}\", Message::Resize);","highlight_start":31,"highlight_end":37}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":17,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Resize` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Resize` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums1.rs:7:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Resize` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{:?}\", Message::Resize);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Move` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":358,"byte_end":362,"line_start":24,"line_end":24,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"        Message::Move(Point { x: 10, y: 15 }),","highlight_start":18,"highlight_end":22}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":76,"byte_end":88,"line_start":8,"line_end":8,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Move` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Move` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums2.rs:24:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Move` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Message::Move(Point { x: 10, y: 15 }),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Echo` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":405,"byte_end":409,"line_start":25,"line_end":25,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"        Message::Echo(String::from(\"hello world\")),","highlight_start":18,"highlight_end":22}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":76,"byte_end":88,"line_start":8,"line_end":8,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Echo` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Echo` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums2.rs:25:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Echo` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Message::Echo(String::from(\"hello world\")),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `ChangeColor` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":457,"byte_end":468,"line_start":26,"line_end":26,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"        Message::ChangeColor(200, 255, 255),","highlight_start":18,"highlight_end":29}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":76,"byte_end":88,"line_start":8,"line_end":8,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `ChangeColor` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `ChangeColor` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums2.rs:26:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `ChangeColor` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Message::ChangeColor(200, 255, 255),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Quit` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":502,"byte_end":506,"line_start":27,"line_end":27,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"        Message::Quit,","highlight_start":18,"highlight_end":22}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":76,"byte_end":88,"line_start":8,"line_end":8,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Quit` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Quit` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums2.rs:27:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Quit` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Message::Quit,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Move` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":175,"byte_end":179,"line_start":8,"line_end":8,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"    println!(\"{:?}\", Message::Move);","highlight_start":31,"highlight_end":35}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":17,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Move` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Move` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums1.rs:8:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Move` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{:?}\", Message::Move);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Echo` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":212,"byte_end":216,"line_start":9,"line_end":9,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"    println!(\"{:?}\", Message::Echo);","highlight_start":31,"highlight_end":35}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":17,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Echo` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Echo` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums1.rs:9:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Echo` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{:?}\", Message::Echo);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `ChangeColor` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":249,"byte_end":260,"line_start":10,"line_end":10,"column_start":31,"column_end":42,"is_primary":true,"text":[{"text":"    println!(\"{:?}\", Message::ChangeColor);","highlight_start":31,"highlight_end":42}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":17,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `ChangeColor` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `ChangeColor` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums1.rs:10:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `ChangeColor` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{:?}\", Message::ChangeColor);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0599`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Quit` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":293,"byte_end":297,"line_start":11,"line_end":11,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"    println!(\"{:?}\", Message::Quit);","highlight_start":31,"highlight_end":35}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":17,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Quit` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Quit` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums1.rs:11:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Quit` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{:?}\", Message::Quit);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0599`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstructs3-2ded9cb1a8925039.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\02_functions\\functions3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfunctions3_sol-f077bea3c5150b27.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\02_functions\\functions5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfunctions5_sol-dc9715bd100493a7.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `message`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\08_enums\\enums3.rs","byte_start":838,"byte_end":845,"line_start":46,"line_end":46,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"    fn process(&mut self, message: Message) {","highlight_start":27,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\08_enums\\enums3.rs","byte_start":838,"byte_end":845,"line_start":46,"line_end":46,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"    fn process(&mut self, message: Message) {","highlight_start":27,"highlight_end":34}],"label":null,"suggested_replacement":"_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `message`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums3.rs:46:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn process(&mut self, message: Message) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_message`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"intro1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\00_intro\\intro1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libintro1_sol-c187cf298c39f5d1.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libenums3-46864c57583f57e1.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `message`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\08_enums\\enums3.rs","byte_start":838,"byte_end":845,"line_start":46,"line_end":46,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"    fn process(&mut self, message: Message) {","highlight_start":27,"highlight_end":34}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\08_enums\\enums3.rs","byte_start":838,"byte_end":845,"line_start":46,"line_end":46,"column_start":27,"column_end":34,"is_primary":true,"text":[{"text":"    fn process(&mut self, message: Message) {","highlight_start":27,"highlight_end":34}],"label":null,"suggested_replacement":"_message","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `message`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums3.rs:46:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn process(&mut self, message: Message) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_message`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors1-2a11f4da66c85ecb.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"intro2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\00_intro\\intro2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find macro `printline` in this scope","code":null,"level":"error","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4285,"byte_end":4305,"line_start":138,"line_end":138,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! println {","highlight_start":1,"highlight_end":21}],"label":"similarly named macro `println` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\00_intro\\intro2.rs","byte_start":67,"byte_end":76,"line_start":3,"line_end":3,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    printline!(\"Hello world!\");","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a macro with a similar name exists","code":null,"level":"help","spans":[{"file_name":"exercises\\00_intro\\intro2.rs","byte_start":67,"byte_end":76,"line_start":3,"line_end":3,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    printline!(\"Hello world!\");","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"println","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find macro `printline` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\00_intro\\intro2.rs:3:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    printline!(\"Hello world!\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a macro with a similar name exists: `println`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! println {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named macro `println` defined here\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected identifier, found `)`","code":null,"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits5.rs","byte_start":438,"byte_end":439,"line_start":22,"line_end":22,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"fn some_func(item: ???) -> bool {","highlight_start":23,"highlight_end":24}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected identifier, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits5.rs:22:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn some_func(item: ???) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\02_functions\\functions2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfunctions2_sol-8dd130218e003c2f.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":457,"byte_end":463,"line_start":16,"line_end":16,"column_start":17,"column_end":23,"is_primary":false,"text":[{"text":"    placeholder(\"blue\");","highlight_start":17,"highlight_end":23}],"label":"unexpected argument of type `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":445,"byte_end":456,"line_start":16,"line_end":16,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"blue\");","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":457,"byte_end":463,"line_start":16,"line_end":16,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    placeholder(\"blue\");","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"blue\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `&'static str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"blue\"\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused macro definition: `my_macro`","code":{"code":"unused_macros","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\21_macros\\macros1.rs","byte_start":13,"byte_end":21,"line_start":1,"line_end":1,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"macro_rules! my_macro {","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused macro definition: `my_macro`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros1.rs:1:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! my_macro {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_macros)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `your_character` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types2.rs","byte_start":738,"byte_end":752,"line_start":21,"line_end":21,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"    if your_character.is_alphabetic() {","highlight_start":8,"highlight_end":22}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `your_character` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types2.rs:21:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if your_character.is_alphabetic() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `your_character` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types2.rs","byte_start":820,"byte_end":834,"line_start":23,"line_end":23,"column_start":15,"column_end":29,"is_primary":true,"text":[{"text":"    } else if your_character.is_numeric() {","highlight_start":15,"highlight_end":29}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `your_character` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types2.rs:23:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    } else if your_character.is_numeric() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected function, found macro `my_macro`","code":{"code":"E0423","explanation":"An identifier was used like a function name or a value was expected and the\nidentifier exists but it belongs to a different namespace.\n\nErroneous code example:\n\n```compile_fail,E0423\nstruct Foo { a: bool };\n\nlet f = Foo();\n// error: expected function, tuple struct or tuple variant, found `Foo`\n// `Foo` is a struct name, but this expression uses it like a function name\n```\n\nPlease verify you didn't misspell the name of what you actually wanted to use\nhere. Example:\n\n```\nfn Foo() -> u32 { 0 }\n\nlet f = Foo(); // ok!\n```\n\nIt is common to forget the trailing `!` on macro invocations, which would also\nyield this error:\n\n```compile_fail,E0423\nprintln(\"\");\n// error: expected function, tuple struct or tuple variant,\n// found macro `println`\n// did you mean `println!(...)`? (notice the trailing `!`)\n```\n\nAnother case where this error is emitted is when a value is expected, but\nsomething else is found:\n\n```compile_fail,E0423\npub mod a {\n    pub const I: i32 = 1;\n}\n\nfn h1() -> i32 {\n    a.I\n    //~^ ERROR expected value, found module `a`\n    // did you mean `a::I`?\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\21_macros\\macros1.rs","byte_start":136,"byte_end":144,"line_start":9,"line_end":9,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    my_macro();","highlight_start":5,"highlight_end":13}],"label":"not a function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `!` to invoke the macro","code":null,"level":"help","spans":[{"file_name":"exercises\\21_macros\\macros1.rs","byte_start":144,"byte_end":144,"line_start":9,"line_end":9,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"    my_macro();","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"!","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0423]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected function, found macro `my_macro`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros1.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    my_macro();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a function\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `!` to invoke the macro\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    my_macro\u001b[0m\u001b[0m\u001b[38;5;10m!\u001b[0m\u001b[0m();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0423`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0423`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `item` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits5.rs","byte_start":454,"byte_end":458,"line_start":23,"line_end":23,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    item.some_function() && item.other_function()","highlight_start":5,"highlight_end":9}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `item` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits5.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    item.some_function() && item.other_function()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `item` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits5.rs","byte_start":478,"byte_end":482,"line_start":23,"line_end":23,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"    item.some_function() && item.other_function()","highlight_start":29,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `item` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits5.rs:23:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    item.some_function() && item.other_function()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":483,"byte_end":500,"line_start":18,"line_end":18,"column_start":17,"column_end":34,"is_primary":false,"text":[{"text":"    placeholder(\"red\".to_string());","highlight_start":17,"highlight_end":34}],"label":"unexpected argument of type `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":471,"byte_end":482,"line_start":18,"line_end":18,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"red\".to_string());","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":483,"byte_end":500,"line_start":18,"line_end":18,"column_start":17,"column_end":34,"is_primary":true,"text":[{"text":"    placeholder(\"red\".to_string());","highlight_start":17,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"red\".to_string());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"red\".to_string()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":520,"byte_end":538,"line_start":20,"line_end":20,"column_start":17,"column_end":35,"is_primary":false,"text":[{"text":"    placeholder(String::from(\"hi\"));","highlight_start":17,"highlight_end":35}],"label":"unexpected argument of type `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":508,"byte_end":519,"line_start":20,"line_end":20,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(String::from(\"hi\"));","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":520,"byte_end":538,"line_start":20,"line_end":20,"column_start":17,"column_end":35,"is_primary":true,"text":[{"text":"    placeholder(String::from(\"hi\"));","highlight_start":17,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:20:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(String::from(\"hi\"));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9mString::from(\"hi\")\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":558,"byte_end":583,"line_start":22,"line_end":22,"column_start":17,"column_end":42,"is_primary":false,"text":[{"text":"    placeholder(\"rust is fun!\".to_owned());","highlight_start":17,"highlight_end":42}],"label":"unexpected argument of type `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":546,"byte_end":557,"line_start":22,"line_end":22,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"rust is fun!\".to_owned());","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":558,"byte_end":583,"line_start":22,"line_end":22,"column_start":17,"column_end":42,"is_primary":true,"text":[{"text":"    placeholder(\"rust is fun!\".to_owned());","highlight_start":17,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"rust is fun!\".to_owned());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"rust is fun!\".to_owned()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":603,"byte_end":624,"line_start":24,"line_end":24,"column_start":17,"column_end":38,"is_primary":false,"text":[{"text":"    placeholder(\"nice weather\".into());","highlight_start":17,"highlight_end":38}],"label":"unexpected argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":591,"byte_end":602,"line_start":24,"line_end":24,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"nice weather\".into());","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":603,"byte_end":624,"line_start":24,"line_end":24,"column_start":17,"column_end":38,"is_primary":true,"text":[{"text":"    placeholder(\"nice weather\".into());","highlight_start":17,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"nice weather\".into());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"nice weather\".into()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":644,"byte_end":682,"line_start":26,"line_end":26,"column_start":17,"column_end":55,"is_primary":false,"text":[{"text":"    placeholder(format!(\"Interpolation {}\", \"Station\"));","highlight_start":17,"highlight_end":55}],"label":"unexpected argument of type `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":632,"byte_end":643,"line_start":26,"line_end":26,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(format!(\"Interpolation {}\", \"Station\"));","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":644,"byte_end":682,"line_start":26,"line_end":26,"column_start":17,"column_end":55,"is_primary":true,"text":[{"text":"    placeholder(format!(\"Interpolation {}\", \"Station\"));","highlight_start":17,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:26:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(format!(\"Interpolation {}\", \"Station\"));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9mformat!(\"Interpolation {}\", \"Station\")\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":833,"byte_end":859,"line_start":30,"line_end":30,"column_start":17,"column_end":43,"is_primary":false,"text":[{"text":"    placeholder(&String::from(\"abc\")[0..1]);","highlight_start":17,"highlight_end":43}],"label":"unexpected argument of type `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":821,"byte_end":832,"line_start":30,"line_end":30,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(&String::from(\"abc\")[0..1]);","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":833,"byte_end":859,"line_start":30,"line_end":30,"column_start":17,"column_end":43,"is_primary":true,"text":[{"text":"    placeholder(&String::from(\"abc\")[0..1]);","highlight_start":17,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:30:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(&String::from(\"abc\")[0..1]);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `&str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m&String::from(\"abc\")[0..1]\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":879,"byte_end":902,"line_start":32,"line_end":32,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"    placeholder(\"  hello there \".trim());","highlight_start":17,"highlight_end":40}],"label":"unexpected argument of type `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":867,"byte_end":878,"line_start":32,"line_end":32,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"  hello there \".trim());","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":879,"byte_end":902,"line_start":32,"line_end":32,"column_start":17,"column_end":40,"is_primary":true,"text":[{"text":"    placeholder(\"  hello there \".trim());","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:32:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"  hello there \".trim());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `&str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"  hello there \".trim()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":922,"byte_end":960,"line_start":34,"line_end":34,"column_start":17,"column_end":55,"is_primary":false,"text":[{"text":"    placeholder(\"Happy Monday!\".replace(\"Mon\", \"Tues\"));","highlight_start":17,"highlight_end":55}],"label":"unexpected argument of type `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":910,"byte_end":921,"line_start":34,"line_end":34,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"Happy Monday!\".replace(\"Mon\", \"Tues\"));","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":922,"byte_end":960,"line_start":34,"line_end":34,"column_start":17,"column_end":55,"is_primary":true,"text":[{"text":"    placeholder(\"Happy Monday!\".replace(\"Mon\", \"Tues\"));","highlight_start":17,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:34:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"Happy Monday!\".replace(\"Mon\", \"Tues\"));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"Happy Monday!\".replace(\"Mon\", \"Tues\")\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":980,"byte_end":1019,"line_start":36,"line_end":36,"column_start":17,"column_end":56,"is_primary":false,"text":[{"text":"    placeholder(\"mY sHiFt KeY iS sTiCkY\".to_lowercase());","highlight_start":17,"highlight_end":56}],"label":"unexpected argument of type `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":968,"byte_end":979,"line_start":36,"line_end":36,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"mY sHiFt KeY iS sTiCkY\".to_lowercase());","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":980,"byte_end":1019,"line_start":36,"line_end":36,"column_start":17,"column_end":56,"is_primary":true,"text":[{"text":"    placeholder(\"mY sHiFt KeY iS sTiCkY\".to_lowercase());","highlight_start":17,"highlight_end":56}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:36:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"mY sHiFt KeY iS sTiCkY\".to_lowercase());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"mY sHiFt KeY iS sTiCkY\".to_lowercase()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0061`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libenums3-67e65f930f69eae9.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"generics1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\14_generics\\generics1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libgenerics1_sol-01a9fead9bd4ccb4.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\15_traits\\traits2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtraits2_sol-89af6a452e6c4e26.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\13_error_handling\\errors1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors1_sol-29b5bf80c638ba46.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected `;`, found `(`","code":null,"level":"error","spans":[{"file_name":"exercises\\21_macros\\macros4.rs","byte_start":164,"byte_end":164,"line_start":6,"line_end":6,"column_start":6,"column_end":6,"is_primary":false,"text":[{"text":"    }","highlight_start":6,"highlight_end":6}],"label":"expected `;`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\21_macros\\macros4.rs","byte_start":169,"byte_end":170,"line_start":7,"line_end":7,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    ($val:expr) => {","highlight_start":5,"highlight_end":6}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected `;`, found `(`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros4.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected `;`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ($val:expr) => {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munexpected token\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot multiply `Result<i32, ParseIntError>` by `{integer}`","code":{"code":"E0369","explanation":"A binary operation was attempted on a type which doesn't support it.\n\nErroneous code example:\n\n```compile_fail,E0369\nlet x = 12f32; // error: binary operation `<<` cannot be applied to\n               //        type `f32`\n\nx << 2;\n```\n\nTo fix this error, please check that this type implements this binary\noperation. Example:\n\n```\nlet x = 12u32; // the `u32` type does implement it:\n               // https://doc.rust-lang.org/stable/std/ops/trait.Shl.html\n\nx << 2; // ok!\n```\n\nIt is also possible to overload most operators for your own type by\nimplementing traits from `std::ops`.\n\nString concatenation appends the string on the right to the string on the\nleft and may require reallocation. This requires ownership of the string\non the left. If something should be added to a string literal, move the\nliteral to the heap by allocating it with `to_owned()` like in\n`\"Your text\".to_owned()`.\n"},"level":"error","spans":[{"file_name":"exercises\\13_error_handling\\errors2.rs","byte_start":1120,"byte_end":1123,"line_start":26,"line_end":26,"column_start":8,"column_end":11,"is_primary":false,"text":[{"text":"    Ok(qty * cost_per_item + processing_fee)","highlight_start":8,"highlight_end":11}],"label":"Result<i32, ParseIntError>","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\13_error_handling\\errors2.rs","byte_start":1126,"byte_end":1139,"line_start":26,"line_end":26,"column_start":14,"column_end":27,"is_primary":false,"text":[{"text":"    Ok(qty * cost_per_item + processing_fee)","highlight_start":14,"highlight_end":27}],"label":"{integer}","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\13_error_handling\\errors2.rs","byte_start":1124,"byte_end":1125,"line_start":26,"line_end":26,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"    Ok(qty * cost_per_item + processing_fee)","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the foreign item type `Result<i32, ParseIntError>` doesn't implement `Mul<{integer}>`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\result.rs","byte_start":20789,"byte_end":20810,"line_start":548,"line_end":548,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"pub enum Result<T, E> {","highlight_start":1,"highlight_end":22}],"label":"not implement `Mul<{integer}>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0369]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot multiply `Result<i32, ParseIntError>` by `{integer}`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\13_error_handling\\errors2.rs:26:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ok(qty * cost_per_item + processing_fee)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m{integer}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mResult<i32, ParseIntError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the foreign item type `Result<i32, ParseIntError>` doesn't implement `Mul<{integer}>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\result.rs:548:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m548\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Result<T, E> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mnot implement `Mul<{integer}>`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"from_into","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\from_into.rs","byte_start":1326,"byte_end":1330,"line_start":37,"line_end":37,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"    fn from(s: &str) -> Self {}","highlight_start":25,"highlight_end":29}],"label":"expected `Person`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\from_into.rs","byte_start":1309,"byte_end":1313,"line_start":37,"line_end":37,"column_start":8,"column_end":12,"is_primary":false,"text":[{"text":"    fn from(s: &str) -> Self {}","highlight_start":8,"highlight_end":12}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\from_into.rs:37:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from(s: &str) -> Self {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Person`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0369`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0369`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types6_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\04_primitive_types\\primitive_types6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types6_sol-74dcbf2934f2d6af.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\17_tests\\tests1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtests1_sol-e52eb085b5e57ade.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"from_str","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\from_str.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\from_str.rs","byte_start":1619,"byte_end":1642,"line_start":44,"line_end":44,"column_start":29,"column_end":52,"is_primary":true,"text":[{"text":"    fn from_str(s: &str) -> Result<Self, Self::Err> {}","highlight_start":29,"highlight_end":52}],"label":"expected `Result<Person, ParsePersonError>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\from_str.rs","byte_start":1598,"byte_end":1606,"line_start":44,"line_end":44,"column_start":8,"column_end":16,"is_primary":false,"text":[{"text":"    fn from_str(s: &str) -> Result<Self, Self::Err> {}","highlight_start":8,"highlight_end":16}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Result<Person, ParsePersonError>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\from_str.rs:44:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from_str(s: &str) -> Result<Self, Self::Err> {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<Person, ParsePersonError>`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<Person, ParsePersonError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"from_str","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\from_str.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\02_functions\\functions4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfunctions4_sol-5fcdd819415258ac.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"from_into","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\15_traits\\traits3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtraits3_sol-109aa196f8482810.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rc1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\19_smart_pointers\\rc1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\librc1_sol-65266d75ae0f846a.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\09_strings\\strings3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstrings3_sol-525b0b6b7aee457c.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find macro `my_macro` in this scope","code":null,"level":"error","spans":[{"file_name":"exercises\\21_macros\\macros3.rs","byte_start":229,"byte_end":237,"line_start":12,"line_end":12,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    my_macro!();","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"have you added the `#[macro_use]` on the module/import?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find macro `my_macro` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros3.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    my_macro!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: have you added the `#[macro_use]` on the module/import?\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused macro definition: `my_macro`","code":{"code":"unused_macros","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\21_macros\\macros3.rs","byte_start":121,"byte_end":129,"line_start":4,"line_end":4,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    macro_rules! my_macro {","highlight_start":18,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused macro definition: `my_macro`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros3.rs:4:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    macro_rules! my_macro {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_macros)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `fruit`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps2.rs","byte_start":1002,"byte_end":1007,"line_start":31,"line_end":31,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    for fruit in fruit_kinds {","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps2.rs","byte_start":1002,"byte_end":1007,"line_start":31,"line_end":31,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    for fruit in fruit_kinds {","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"_fruit","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `fruit`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps2.rs:31:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for fruit in fruit_kinds {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_fruit`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `basket`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps2.rs","byte_start":810,"byte_end":816,"line_start":22,"line_end":22,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"fn fruit_basket(basket: &mut HashMap<Fruit, u32>) {","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps2.rs","byte_start":810,"byte_end":816,"line_start":22,"line_end":22,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"fn fruit_basket(basket: &mut HashMap<Fruit, u32>) {","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"_basket","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `basket`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps2.rs:22:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn fruit_basket(basket: &mut HashMap<Fruit, u32>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_basket`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot multiply `Result<i32, ParseIntError>` by `{integer}`","code":{"code":"E0369","explanation":"A binary operation was attempted on a type which doesn't support it.\n\nErroneous code example:\n\n```compile_fail,E0369\nlet x = 12f32; // error: binary operation `<<` cannot be applied to\n               //        type `f32`\n\nx << 2;\n```\n\nTo fix this error, please check that this type implements this binary\noperation. Example:\n\n```\nlet x = 12u32; // the `u32` type does implement it:\n               // https://doc.rust-lang.org/stable/std/ops/trait.Shl.html\n\nx << 2; // ok!\n```\n\nIt is also possible to overload most operators for your own type by\nimplementing traits from `std::ops`.\n\nString concatenation appends the string on the right to the string on the\nleft and may require reallocation. This requires ownership of the string\non the left. If something should be added to a string literal, move the\nliteral to the heap by allocating it with `to_owned()` like in\n`\"Your text\".to_owned()`.\n"},"level":"error","spans":[{"file_name":"exercises\\13_error_handling\\errors2.rs","byte_start":1120,"byte_end":1123,"line_start":26,"line_end":26,"column_start":8,"column_end":11,"is_primary":false,"text":[{"text":"    Ok(qty * cost_per_item + processing_fee)","highlight_start":8,"highlight_end":11}],"label":"Result<i32, ParseIntError>","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\13_error_handling\\errors2.rs","byte_start":1126,"byte_end":1139,"line_start":26,"line_end":26,"column_start":14,"column_end":27,"is_primary":false,"text":[{"text":"    Ok(qty * cost_per_item + processing_fee)","highlight_start":14,"highlight_end":27}],"label":"{integer}","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\13_error_handling\\errors2.rs","byte_start":1124,"byte_end":1125,"line_start":26,"line_end":26,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"    Ok(qty * cost_per_item + processing_fee)","highlight_start":12,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the foreign item type `Result<i32, ParseIntError>` doesn't implement `Mul<{integer}>`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\result.rs","byte_start":20789,"byte_end":20810,"line_start":548,"line_end":548,"column_start":1,"column_end":22,"is_primary":true,"text":[{"text":"pub enum Result<T, E> {","highlight_start":1,"highlight_end":22}],"label":"not implement `Mul<{integer}>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0369]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot multiply `Result<i32, ParseIntError>` by `{integer}`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\13_error_handling\\errors2.rs:26:12\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ok(qty * cost_per_item + processing_fee)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m{integer}\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mResult<i32, ParseIntError>\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the foreign item type `Result<i32, ParseIntError>` doesn't implement `Mul<{integer}>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\result.rs:548:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m548\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub enum Result<T, E> {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mnot implement `Mul<{integer}>`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0369`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0369`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"borrow of partially moved value: `optional_point`","code":{"code":"E0382","explanation":"A variable was used after its contents have been moved elsewhere.\n\nErroneous code example:\n\n```compile_fail,E0382\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = MyStruct{ s: 5u32 };\n    let y = x;\n    x.s = 6;\n    println!(\"{}\", x.s);\n}\n```\n\nSince `MyStruct` is a type that is not marked `Copy`, the data gets moved out\nof `x` when we set `y`. This is fundamental to Rust's ownership system: outside\nof workarounds like `Rc`, a value cannot be owned by more than one variable.\n\nSometimes we don't need to move the value. Using a reference, we can let another\nfunction borrow the value without changing its ownership. In the example below,\nwe don't actually have to move our string to `calculate_length`, we can give it\na reference to it with `&` instead.\n\n```\nfn main() {\n    let s1 = String::from(\"hello\");\n\n    let len = calculate_length(&s1);\n\n    println!(\"The length of '{}' is {}.\", s1, len);\n}\n\nfn calculate_length(s: &String) -> usize {\n    s.len()\n}\n```\n\nA mutable reference can be created with `&mut`.\n\nSometimes we don't want a reference, but a duplicate. All types marked `Clone`\ncan be duplicated by calling `.clone()`. Subsequent changes to a clone do not\naffect the original variable.\n\nMost types in the standard library are marked `Clone`. The example below\ndemonstrates using `clone()` on a string. `s1` is first set to \"many\", and then\ncopied to `s2`. Then the first character of `s1` is removed, without affecting\n`s2`. \"any many\" is printed to the console.\n\n```\nfn main() {\n    let mut s1 = String::from(\"many\");\n    let s2 = s1.clone();\n    s1.remove(0);\n    println!(\"{} {}\", s1, s2);\n}\n```\n\nIf we control the definition of a type, we can implement `Clone` on it ourselves\nwith `#[derive(Clone)]`.\n\nSome types have no ownership semantics at all and are trivial to duplicate. An\nexample is `i32` and the other number types. We don't have to call `.clone()` to\nclone them, because they are marked `Copy` in addition to `Clone`. Implicit\ncloning is more convenient in this case. We can mark our own types `Copy` if\nall their members also are marked `Copy`.\n\nIn the example below, we implement a `Point` type. Because it only stores two\nintegers, we opt-out of ownership semantics with `Copy`. Then we can\n`let p2 = p1` without `p1` being moved.\n\n```\n#[derive(Copy, Clone)]\nstruct Point { x: i32, y: i32 }\n\nfn main() {\n    let mut p1 = Point{ x: -1, y: 2 };\n    let p2 = p1;\n    p1.x = 1;\n    println!(\"p1: {}, {}\", p1.x, p1.y);\n    println!(\"p2: {}, {}\", p2.x, p2.y);\n}\n```\n\nAlternatively, if we don't control the struct's definition, or mutable shared\nownership is truly required, we can use `Rc` and `RefCell`:\n\n```\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = Rc::new(RefCell::new(MyStruct{ s: 5u32 }));\n    let y = x.clone();\n    x.borrow_mut().s = 6;\n    println!(\"{}\", x.borrow().s);\n}\n```\n\nWith this approach, x and y share ownership of the data via the `Rc` (reference\ncount type). `RefCell` essentially performs runtime borrow checking: ensuring\nthat at most one writer or multiple readers can access the data at any one time.\n\nIf you wish to learn more about ownership in Rust, start with the\n[Understanding Ownership][understanding-ownership] chapter in the Book.\n\n[understanding-ownership]: https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\n"},"level":"error","spans":[{"file_name":"exercises\\12_options\\options3.rs","byte_start":250,"byte_end":251,"line_start":12,"line_end":12,"column_start":14,"column_end":15,"is_primary":false,"text":[{"text":"        Some(p) => println!(\"Coordinates are {},{}\", p.x, p.y),","highlight_start":14,"highlight_end":15}],"label":"value partially moved here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\12_options\\options3.rs","byte_start":357,"byte_end":371,"line_start":16,"line_end":16,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"    println!(\"{optional_point:?}\"); // Don't change this line.","highlight_start":16,"highlight_end":30}],"label":"value borrowed here after partial move","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\12_options\\options3.rs","byte_start":346,"byte_end":376,"line_start":16,"line_end":16,"column_start":5,"column_end":35,"is_primary":false,"text":[{"text":"    println!(\"{optional_point:?}\"); // Don't change this line.","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"println!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4285,"byte_end":4305,"line_start":138,"line_end":138,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! println {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::format_args_nl!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":35657,"byte_end":35684,"line_start":1017,"line_end":1017,"column_start":5,"column_end":32,"is_primary":false,"text":[{"text":"    macro_rules! format_args_nl {","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"desugaring of format string literal","def_site_span":{"file_name":"exercises\\12_options\\options3.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"partial move occurs because value has type `Point`, which does not implement the `Copy` trait","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"borrow this binding in the pattern to avoid moving the value","code":null,"level":"help","spans":[{"file_name":"exercises\\12_options\\options3.rs","byte_start":250,"byte_end":250,"line_start":12,"line_end":12,"column_start":14,"column_end":14,"is_primary":true,"text":[{"text":"        Some(p) => println!(\"Coordinates are {},{}\", p.x, p.y),","highlight_start":14,"highlight_end":14}],"label":null,"suggested_replacement":"ref ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0382]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: borrow of partially moved value: `optional_point`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options3.rs:16:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Some(p) => println!(\"Coordinates are {},{}\", p.x, p.y),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvalue partially moved here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{optional_point:?}\"); // Don't change this line.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvalue borrowed here after partial move\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: partial move occurs because value has type `Point`, which does not implement the `Copy` trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: borrow this binding in the pattern to avoid moving the value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        Some(\u001b[0m\u001b[0m\u001b[38;5;10mref \u001b[0m\u001b[0mp) => println!(\"Coordinates are {},{}\", p.x, p.y),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\12_options\\options1.rs","byte_start":301,"byte_end":312,"line_start":5,"line_end":5,"column_start":41,"column_end":52,"is_primary":true,"text":[{"text":"fn maybe_ice_cream(hour_of_day: u16) -> Option<u16> {","highlight_start":41,"highlight_end":52}],"label":"expected `Option<u16>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\12_options\\options1.rs","byte_start":264,"byte_end":279,"line_start":5,"line_end":5,"column_start":4,"column_end":19,"is_primary":false,"text":[{"text":"fn maybe_ice_cream(hour_of_day: u16) -> Option<u16> {","highlight_start":4,"highlight_end":19}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Option<u16>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options1.rs:5:41\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn maybe_ice_cream(hour_of_day: u16) -> Option<u16> {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Option<u16>`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mOption<u16>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m          found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0382`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0382`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"missing lifetime specifier","code":{"code":"E0106","explanation":"This error indicates that a lifetime is missing from a type. If it is an error\ninside a function signature, the problem may be with failing to adhere to the\nlifetime elision rules (see below).\n\nErroneous code examples:\n\n```compile_fail,E0106\nstruct Foo1 { x: &bool }\n              // ^ expected lifetime parameter\nstruct Foo2<'a> { x: &'a bool } // correct\n\nstruct Bar1 { x: Foo2 }\n              // ^^^^ expected lifetime parameter\nstruct Bar2<'a> { x: Foo2<'a> } // correct\n\nenum Baz1 { A(u8), B(&bool), }\n                  // ^ expected lifetime parameter\nenum Baz2<'a> { A(u8), B(&'a bool), } // correct\n\ntype MyStr1 = &str;\n           // ^ expected lifetime parameter\ntype MyStr2<'a> = &'a str; // correct\n```\n\nLifetime elision is a special, limited kind of inference for lifetimes in\nfunction signatures which allows you to leave out lifetimes in certain cases.\nFor more background on lifetime elision see [the book][book-le].\n\nThe lifetime elision rules require that any function signature with an elided\noutput lifetime must either have:\n\n - exactly one input lifetime\n - or, multiple input lifetimes, but the function must also be a method with a\n   `&self` or `&mut self` receiver\n\nIn the first case, the output lifetime is inferred to be the same as the unique\ninput lifetime. In the second case, the lifetime is instead inferred to be the\nsame as the lifetime on `&self` or `&mut self`.\n\nHere are some examples of elision errors:\n\n```compile_fail,E0106\n// error, no input lifetimes\nfn foo() -> &str { }\n\n// error, `x` and `y` have distinct lifetimes inferred\nfn bar(x: &str, y: &str) -> &str { }\n\n// error, `y`'s lifetime is inferred to be distinct from `x`'s\nfn baz<'a>(x: &'a str, y: &str) -> &str { }\n```\n\n[book-le]: https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-elision\n"},"level":"error","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":406,"byte_end":407,"line_start":7,"line_end":7,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":33,"highlight_end":34}],"label":"expected named lifetime parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":388,"byte_end":392,"line_start":7,"line_end":7,"column_start":15,"column_end":19,"is_primary":false,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":15,"highlight_end":19}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":397,"byte_end":401,"line_start":7,"line_end":7,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":24,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `x` or `y`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider introducing a named lifetime parameter","code":null,"level":"help","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":384,"byte_end":384,"line_start":7,"line_end":7,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":407,"byte_end":407,"line_start":7,"line_end":7,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":389,"byte_end":389,"line_start":7,"line_end":7,"column_start":16,"column_end":16,"is_primary":true,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":16,"highlight_end":16}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":398,"byte_end":398,"line_start":7,"line_end":7,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0106]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: missing lifetime specifier\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\16_lifetimes\\lifetimes1.rs:7:33\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn longest(x: &str, y: &str) -> &str {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected named lifetime parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `x` or `y`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider introducing a named lifetime parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn longest\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m(x: &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0mstr, y: &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0mstr) -> &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0mstr {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libhashmaps2-ba267efe1bc821e7.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0106`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0106`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 1 argument but 0 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\02_functions\\functions3.rs","byte_start":161,"byte_end":163,"line_start":9,"line_end":9,"column_start":12,"column_end":14,"is_primary":false,"text":[{"text":"    call_me();","highlight_start":12,"highlight_end":14}],"label":"argument #1 of type `u8` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\02_functions\\functions3.rs","byte_start":154,"byte_end":161,"line_start":9,"line_end":9,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    call_me();","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\02_functions\\functions3.rs","byte_start":11,"byte_end":18,"line_start":1,"line_end":1,"column_start":12,"column_end":19,"is_primary":false,"text":[{"text":"fn call_me(num: u8) {","highlight_start":12,"highlight_end":19}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\02_functions\\functions3.rs","byte_start":3,"byte_end":10,"line_start":1,"line_end":1,"column_start":4,"column_end":11,"is_primary":true,"text":[{"text":"fn call_me(num: u8) {","highlight_start":4,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"exercises\\02_functions\\functions3.rs","byte_start":161,"byte_end":163,"line_start":9,"line_end":9,"column_start":12,"column_end":14,"is_primary":true,"text":[{"text":"    call_me();","highlight_start":12,"highlight_end":14}],"label":null,"suggested_replacement":"(/* u8 */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 1 argument but 0 arguments were supplied\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions3.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    call_me();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14margument #1 of type `u8` is missing\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions3.rs:1:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn call_me(num: u8) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    call_me(\u001b[0m\u001b[0m\u001b[38;5;10m/* u8 */\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\07_structs\\structs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstructs2_sol-2e89cdc1368d3db5.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0061`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"try_from_into","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\try_from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\try_from_into.rs","byte_start":952,"byte_end":977,"line_start":31,"line_end":31,"column_start":44,"column_end":69,"is_primary":true,"text":[{"text":"    fn try_from(tuple: (i16, i16, i16)) -> Result<Self, Self::Error> {}","highlight_start":44,"highlight_end":69}],"label":"expected `Result<Color, IntoColorError>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\try_from_into.rs","byte_start":916,"byte_end":924,"line_start":31,"line_end":31,"column_start":8,"column_end":16,"is_primary":false,"text":[{"text":"    fn try_from(tuple: (i16, i16, i16)) -> Result<Self, Self::Error> {}","highlight_start":8,"highlight_end":16}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Result<Color, IntoColorError>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\try_from_into.rs:31:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from(tuple: (i16, i16, i16)) -> Result<Self, Self::Error> {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<Color, IntoColorError>`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<Color, IntoColorError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"try_from_into","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\try_from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\try_from_into.rs","byte_start":1118,"byte_end":1143,"line_start":38,"line_end":38,"column_start":35,"column_end":60,"is_primary":true,"text":[{"text":"    fn try_from(arr: [i16; 3]) -> Result<Self, Self::Error> {}","highlight_start":35,"highlight_end":60}],"label":"expected `Result<Color, IntoColorError>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\try_from_into.rs","byte_start":1091,"byte_end":1099,"line_start":38,"line_end":38,"column_start":8,"column_end":16,"is_primary":false,"text":[{"text":"    fn try_from(arr: [i16; 3]) -> Result<Self, Self::Error> {}","highlight_start":8,"highlight_end":16}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Result<Color, IntoColorError>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\try_from_into.rs:38:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from(arr: [i16; 3]) -> Result<Self, Self::Error> {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<Color, IntoColorError>`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<Color, IntoColorError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"try_from_into","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\try_from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\try_from_into.rs","byte_start":1338,"byte_end":1363,"line_start":46,"line_end":46,"column_start":35,"column_end":60,"is_primary":true,"text":[{"text":"    fn try_from(slice: &[i16]) -> Result<Self, Self::Error> {}","highlight_start":35,"highlight_end":60}],"label":"expected `Result<Color, IntoColorError>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\try_from_into.rs","byte_start":1311,"byte_end":1319,"line_start":46,"line_end":46,"column_start":8,"column_end":16,"is_primary":false,"text":[{"text":"    fn try_from(slice: &[i16]) -> Result<Self, Self::Error> {}","highlight_start":8,"highlight_end":16}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Result<Color, IntoColorError>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\try_from_into.rs:46:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from(slice: &[i16]) -> Result<Self, Self::Error> {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<Color, IntoColorError>`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<Color, IntoColorError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types4-b52b70f552234e14.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\01_variables\\variables5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvariables5_sol-eda9f3d0c5fa1c55.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"try_from_into","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\try_from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected type, found `{`","code":null,"level":"error","spans":[{"file_name":"exercises\\02_functions\\functions4.rs","byte_start":371,"byte_end":372,"line_start":11,"line_end":11,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"fn sale_price(price: i64) -> {","highlight_start":30,"highlight_end":31}],"label":"expected type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected type, found `{`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions4.rs:11:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn sale_price(price: i64) -> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected type\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\16_lifetimes\\lifetimes3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liblifetimes3_sol-b7a98b9b2f950fb9.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\22_clippy\\clippy3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libclippy3_sol-6ef10fdfe4100b39.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators4.rs","byte_start":26,"byte_end":29,"line_start":1,"line_end":1,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"fn factorial(num: u64) -> u64 {","highlight_start":27,"highlight_end":30}],"label":"expected `u64`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\18_iterators\\iterators4.rs","byte_start":3,"byte_end":12,"line_start":1,"line_end":1,"column_start":4,"column_end":13,"is_primary":false,"text":[{"text":"fn factorial(num: u64) -> u64 {","highlight_start":4,"highlight_end":13}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider returning the local binding `num`","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators4.rs","byte_start":31,"byte_end":36,"line_start":1,"line_end":2,"column_start":32,"column_end":5,"is_primary":true,"text":[{"text":"fn factorial(num: u64) -> u64 {","highlight_start":32,"highlight_end":32},{"text":"    // TODO: Complete this function to return the factorial of `num` which is","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"\n    num\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators4.rs:1:27\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn factorial(num: u64) -> u64 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider returning the local binding `num`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m fn factorial(num: u64) -> u64 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mnum\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\20_threads\\threads2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libthreads2_sol-f82c6053a76a2510.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libenums1_sol-50c9d2d0da83042e.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\22_clippy\\clippy2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"for loop over an `Option`. This is more readably written as an `if let` statement","code":{"code":"for_loops_over_fallibles","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":108,"byte_end":114,"line_start":5,"line_end":5,"column_start":14,"column_end":20,"is_primary":true,"text":[{"text":"    for x in option {","highlight_start":14,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(for_loops_over_fallibles)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to check pattern in a loop use `while let`","code":null,"level":"help","spans":[{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":99,"byte_end":103,"line_start":5,"line_end":5,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    for x in option {","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"while let Some(","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":99,"byte_end":140,"line_start":5,"line_end":7,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    for x in option {","highlight_start":5,"highlight_end":22},{"text":"        res += x;","highlight_start":1,"highlight_end":18},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":104,"byte_end":108,"line_start":5,"line_end":5,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    for x in option {","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":") = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider using `if let` to clear intent","code":null,"level":"help","spans":[{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":99,"byte_end":103,"line_start":5,"line_end":5,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    for x in option {","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"if let Some(","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":99,"byte_end":140,"line_start":5,"line_end":7,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    for x in option {","highlight_start":5,"highlight_end":22},{"text":"        res += x;","highlight_start":1,"highlight_end":18},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":104,"byte_end":108,"line_start":5,"line_end":5,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    for x in option {","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":") = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: for loop over an `Option`. This is more readably written as an `if let` statement\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\22_clippy\\clippy2.rs:5:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for x in option {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(for_loops_over_fallibles)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: to check pattern in a loop use `while let`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;9mfor \u001b[0m\u001b[0mx\u001b[0m\u001b[0m\u001b[38;5;9m in \u001b[0m\u001b[0moption {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mwhile let Some(\u001b[0m\u001b[0mx\u001b[0m\u001b[0m\u001b[38;5;10m) = \u001b[0m\u001b[0moption {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `if let` to clear intent\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;9mfor \u001b[0m\u001b[0mx\u001b[0m\u001b[0m\u001b[38;5;9m in \u001b[0m\u001b[0moption {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mif let Some(\u001b[0m\u001b[0mx\u001b[0m\u001b[0m\u001b[38;5;10m) = \u001b[0m\u001b[0moption {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"type annotations needed","code":{"code":"E0283","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0283\nlet x = \"hello\".chars().rev().collect();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nA common example is the `collect` method on `Iterator`. It has a generic type\nparameter with a `FromIterator` bound, which for a `char` iterator is\nimplemented by `Vec` and `String` among others. Consider the following snippet\nthat reverses the characters of a string:\n\nIn the first code example, the compiler cannot infer what the type of `x` should\nbe: `Vec<char>` and `String` are both suitable candidates. To specify which type\nto use, you can use a type annotation on `x`:\n\n```\nlet x: Vec<char> = \"hello\".chars().rev().collect();\n```\n\nIt is not necessary to annotate the full type. Once the ambiguity is resolved,\nthe compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nWe can see a self-contained example below:\n\n```compile_fail,E0283\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = foo.into() * 1u32;\n```\n\nThis error can be solved by adding type annotations that provide the missing\ninformation to the compiler. In this case, the solution is to specify the\ntrait's type parameter:\n\n```\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = Into::<u32>::into(foo) * 1u32;\n```\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables2.rs","byte_start":95,"byte_end":97,"line_start":5,"line_end":5,"column_start":10,"column_end":12,"is_primary":false,"text":[{"text":"    if x == 10 {","highlight_start":10,"highlight_end":12}],"label":"type must be known at this point","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\01_variables\\variables2.rs","byte_start":82,"byte_end":83,"line_start":3,"line_end":3,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    let x;","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"cannot satisfy `_: PartialEq<i32>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`{integer}` implements `PartialEq<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider giving `x` an explicit type","code":null,"level":"help","spans":[{"file_name":"exercises\\01_variables\\variables2.rs","byte_start":83,"byte_end":83,"line_start":3,"line_end":3,"column_start":10,"column_end":10,"is_primary":true,"text":[{"text":"    let x;","highlight_start":10,"highlight_end":10}],"label":null,"suggested_replacement":": /* Type */","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"consider swapping the equality","code":null,"level":"help","spans":[{"file_name":"exercises\\01_variables\\variables2.rs","byte_start":93,"byte_end":94,"line_start":5,"line_end":5,"column_start":8,"column_end":9,"is_primary":true,"text":[{"text":"    if x == 10 {","highlight_start":8,"highlight_end":9}],"label":null,"suggested_replacement":"10","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\01_variables\\variables2.rs","byte_start":98,"byte_end":100,"line_start":5,"line_end":5,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    if x == 10 {","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0283]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type annotations needed\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables2.rs:3:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let x;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if x == 10 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mtype must be known at this point\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: cannot satisfy `_: PartialEq<i32>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `{integer}` implements `PartialEq<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider giving `x` an explicit type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let x\u001b[0m\u001b[0m\u001b[38;5;10m: /* Type */\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider swapping the equality\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    if \u001b[0m\u001b[0m\u001b[38;5;9mx\u001b[0m\u001b[0m == \u001b[0m\u001b[0m\u001b[38;5;9m10\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    if \u001b[0m\u001b[0m\u001b[38;5;10m10\u001b[0m\u001b[0m == \u001b[0m\u001b[0m\u001b[38;5;10mx\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0283`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0283`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\21_macros\\macros4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmacros4_sol-55af53c553e986c9.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\10_modules\\modules3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmodules3_sol-dd898e4de55627f2.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\22_clippy\\clippy2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libclippy2-7db9bebda14983c3.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `fruit` in module `delicious_snacks`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\10_modules\\modules2.rs","byte_start":598,"byte_end":603,"line_start":23,"line_end":23,"column_start":27,"column_end":32,"is_primary":true,"text":[{"text":"        delicious_snacks::fruit,","highlight_start":27,"highlight_end":32}],"label":"not found in `delicious_snacks`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `fruit` in module `delicious_snacks`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\10_modules\\modules2.rs:23:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        delicious_snacks::fruit,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `delicious_snacks`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `veggie` in module `delicious_snacks`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\10_modules\\modules2.rs","byte_start":631,"byte_end":637,"line_start":24,"line_end":24,"column_start":27,"column_end":33,"is_primary":true,"text":[{"text":"        delicious_snacks::veggie,","highlight_start":27,"highlight_end":33}],"label":"not found in `delicious_snacks`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `veggie` in module `delicious_snacks`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\10_modules\\modules2.rs:24:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        delicious_snacks::veggie,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `delicious_snacks`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators2.rs","byte_start":541,"byte_end":552,"line_start":17,"line_end":17,"column_start":47,"column_end":58,"is_primary":true,"text":[{"text":"fn capitalize_words_vector(words: &[&str]) -> Vec<String> {","highlight_start":47,"highlight_end":58}],"label":"expected `Vec<String>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\18_iterators\\iterators2.rs","byte_start":498,"byte_end":521,"line_start":17,"line_end":17,"column_start":4,"column_end":27,"is_primary":false,"text":[{"text":"fn capitalize_words_vector(words: &[&str]) -> Vec<String> {","highlight_start":4,"highlight_end":27}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `Vec<String>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators2.rs:17:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn capitalize_words_vector(words: &[&str]) -> Vec<String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Vec<String>`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mVec<String>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators2.rs","byte_start":768,"byte_end":774,"line_start":24,"line_end":24,"column_start":47,"column_end":53,"is_primary":true,"text":[{"text":"fn capitalize_words_string(words: &[&str]) -> String {","highlight_start":47,"highlight_end":53}],"label":"expected `String`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\18_iterators\\iterators2.rs","byte_start":725,"byte_end":748,"line_start":24,"line_end":24,"column_start":4,"column_end":27,"is_primary":false,"text":[{"text":"fn capitalize_words_string(words: &[&str]) -> String {","highlight_start":4,"highlight_end":27}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators2.rs:24:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn capitalize_words_string(words: &[&str]) -> String {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `String`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `first`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\18_iterators\\iterators2.rs","byte_start":316,"byte_end":321,"line_start":10,"line_end":10,"column_start":14,"column_end":19,"is_primary":true,"text":[{"text":"        Some(first) => todo!(),","highlight_start":14,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators2.rs","byte_start":316,"byte_end":321,"line_start":10,"line_end":10,"column_start":14,"column_end":19,"is_primary":true,"text":[{"text":"        Some(first) => todo!(),","highlight_start":14,"highlight_end":19}],"label":null,"suggested_replacement":"_first","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `first`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators2.rs:10:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Some(first) => todo!(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_first`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors6","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors6-1b2d1f3378475e4c.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\03_if\\if3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libif3_sol-68fa29aa7dd48332.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\06_move_semantics\\move_semantics3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmove_semantics3_sol-ac24cc47830ecf5b.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\01_variables\\variables4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvariables4_sol-264f7f9ed4a2a684.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot apply unary operator `!` to type `()`","code":{"code":"E0600","explanation":"An unary operator was used on a type which doesn't implement it.\n\nErroneous code example:\n\n```compile_fail,E0600\nenum Question {\n    Yes,\n    No,\n}\n\n!Question::Yes; // error: cannot apply unary operator `!` to type `Question`\n```\n\nIn this case, `Question` would need to implement the `std::ops::Not` trait in\norder to be able to use `!` on it. Let's implement it:\n\n```\nuse std::ops::Not;\n\nenum Question {\n    Yes,\n    No,\n}\n\n// We implement the `Not` trait on the enum.\nimpl Not for Question {\n    type Output = bool;\n\n    fn not(self) -> bool {\n        match self {\n            Question::Yes => false, // If the `Answer` is `Yes`, then it\n                                    // returns false.\n            Question::No => true, // And here we do the opposite.\n        }\n    }\n}\n\nassert_eq!(!Question::Yes, false);\nassert_eq!(!Question::No, true);\n```\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs3.rs","byte_start":1749,"byte_end":1784,"line_start":62,"line_end":62,"column_start":9,"column_end":44,"is_primary":true,"text":[{"text":"        assert!(package.is_international());","highlight_start":9,"highlight_end":44}],"label":"cannot apply unary operator `!`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\07_structs\\structs3.rs","byte_start":1749,"byte_end":1784,"line_start":62,"line_end":62,"column_start":9,"column_end":44,"is_primary":false,"text":[{"text":"        assert!(package.is_international());","highlight_start":9,"highlight_end":44}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":56894,"byte_end":56913,"line_start":1571,"line_end":1571,"column_start":5,"column_end":24,"is_primary":false,"text":[{"text":"    macro_rules! assert {","highlight_start":5,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0600]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot apply unary operator `!` to type `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs3.rs:62:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m62\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert!(package.is_international());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot apply unary operator `!`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot apply unary operator `!` to type `()`","code":{"code":"E0600","explanation":"An unary operator was used on a type which doesn't implement it.\n\nErroneous code example:\n\n```compile_fail,E0600\nenum Question {\n    Yes,\n    No,\n}\n\n!Question::Yes; // error: cannot apply unary operator `!` to type `Question`\n```\n\nIn this case, `Question` would need to implement the `std::ops::Not` trait in\norder to be able to use `!` on it. Let's implement it:\n\n```\nuse std::ops::Not;\n\nenum Question {\n    Yes,\n    No,\n}\n\n// We implement the `Not` trait on the enum.\nimpl Not for Question {\n    type Output = bool;\n\n    fn not(self) -> bool {\n        match self {\n            Question::Yes => false, // If the `Answer` is `Yes`, then it\n                                    // returns false.\n            Question::No => true, // And here we do the opposite.\n        }\n    }\n}\n\nassert_eq!(!Question::Yes, false);\nassert_eq!(!Question::No, true);\n```\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs3.rs","byte_start":2041,"byte_end":2068,"line_start":72,"line_end":72,"column_start":17,"column_end":44,"is_primary":true,"text":[{"text":"        assert!(!package.is_international());","highlight_start":17,"highlight_end":44}],"label":"cannot apply unary operator `!`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0600]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot apply unary operator `!` to type `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs3.rs:72:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m72\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert!(!package.is_international());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot apply unary operator `!`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators4.rs","byte_start":26,"byte_end":29,"line_start":1,"line_end":1,"column_start":27,"column_end":30,"is_primary":true,"text":[{"text":"fn factorial(num: u64) -> u64 {","highlight_start":27,"highlight_end":30}],"label":"expected `u64`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\18_iterators\\iterators4.rs","byte_start":3,"byte_end":12,"line_start":1,"line_end":1,"column_start":4,"column_end":13,"is_primary":false,"text":[{"text":"fn factorial(num: u64) -> u64 {","highlight_start":4,"highlight_end":13}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider returning the local binding `num`","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators4.rs","byte_start":31,"byte_end":36,"line_start":1,"line_end":2,"column_start":32,"column_end":5,"is_primary":true,"text":[{"text":"fn factorial(num: u64) -> u64 {","highlight_start":32,"highlight_end":32},{"text":"    // TODO: Complete this function to return the factorial of `num` which is","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"\n    num\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators4.rs:1:27\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn factorial(num: u64) -> u64 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u64`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider returning the local binding `num`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m fn factorial(num: u64) -> u64 {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mnum\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\15_traits\\traits5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtraits5_sol-e77f08e8a75f93d1.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs3.rs","byte_start":2398,"byte_end":2402,"line_start":84,"line_end":84,"column_start":54,"column_end":58,"is_primary":true,"text":[{"text":"        assert_eq!(package.get_fees(cents_per_gram), 4500);","highlight_start":54,"highlight_end":58}],"label":"expected `()`, found integer","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs3.rs:84:54\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m84\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(package.get_fees(cents_per_gram), 4500);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `()`, found integer\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs3.rs","byte_start":2462,"byte_end":2466,"line_start":85,"line_end":85,"column_start":58,"column_end":62,"is_primary":true,"text":[{"text":"        assert_eq!(package.get_fees(cents_per_gram * 2), 9000);","highlight_start":58,"highlight_end":62}],"label":"expected `()`, found integer","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs3.rs:85:58\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m85\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(package.get_fees(cents_per_gram * 2), 9000);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `()`, found integer\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `cents_per_gram`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\07_structs\\structs3.rs","byte_start":1068,"byte_end":1082,"line_start":33,"line_end":33,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    fn get_fees(&self, cents_per_gram: u32) {","highlight_start":24,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\07_structs\\structs3.rs","byte_start":1068,"byte_end":1082,"line_start":33,"line_end":33,"column_start":24,"column_end":38,"is_primary":true,"text":[{"text":"    fn get_fees(&self, cents_per_gram: u32) {","highlight_start":24,"highlight_end":38}],"label":null,"suggested_replacement":"_cents_per_gram","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `cents_per_gram`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs3.rs:33:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn get_fees(&self, cents_per_gram: u32) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_cents_per_gram`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0600.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0308, E0600.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types6","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `second` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types6.rs","byte_start":337,"byte_end":343,"line_start":15,"line_end":15,"column_start":20,"column_end":26,"is_primary":true,"text":[{"text":"        assert_eq!(second, 2, \"This is not the 2nd number in the tuple!\");","highlight_start":20,"highlight_end":26}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `second` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types6.rs:15:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(second, 2, \"This is not the 2nd number in the tuple!\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cow1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\19_smart_pointers\\cow1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libcow1_sol-315538a204658f4c.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":27,"byte_end":31,"line_start":1,"line_end":1,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"fn trim_me(input: &str) -> &str {","highlight_start":28,"highlight_end":32}],"label":"expected `&str`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":3,"byte_end":10,"line_start":1,"line_end":1,"column_start":4,"column_end":11,"is_primary":false,"text":[{"text":"fn trim_me(input: &str) -> &str {","highlight_start":4,"highlight_end":11}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider returning the local binding `input`","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":33,"byte_end":38,"line_start":1,"line_end":2,"column_start":34,"column_end":5,"is_primary":true,"text":[{"text":"fn trim_me(input: &str) -> &str {","highlight_start":34,"highlight_end":34},{"text":"    // TODO: Remove whitespace from both ends of a string.","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"\n    input\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings3.rs:1:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn trim_me(input: &str) -> &str {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&str`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider returning the local binding `input`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m fn trim_me(input: &str) -> &str {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10minput\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types6","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtraits4_sol-d3884604efcf139c.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\03_if\\if1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libif1_sol-8d140a942b3ead3f.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\03_if\\if2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libif2_sol-a203a3813a21c04c.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":126,"byte_end":132,"line_start":5,"line_end":5,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"fn compose_me(input: &str) -> String {","highlight_start":31,"highlight_end":37}],"label":"expected `String`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":99,"byte_end":109,"line_start":5,"line_end":5,"column_start":4,"column_end":14,"is_primary":false,"text":[{"text":"fn compose_me(input: &str) -> String {","highlight_start":4,"highlight_end":14}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings3.rs:5:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn compose_me(input: &str) -> String {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `String`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":246,"byte_end":252,"line_start":9,"line_end":9,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"fn replace_me(input: &str) -> String {","highlight_start":31,"highlight_end":37}],"label":"expected `String`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":219,"byte_end":229,"line_start":9,"line_end":9,"column_start":4,"column_end":14,"is_primary":false,"text":[{"text":"fn replace_me(input: &str) -> String {","highlight_start":4,"highlight_end":14}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings3.rs:9:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn replace_me(input: &str) -> String {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `String`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\18_iterators\\iterators2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libiterators2_sol-71c64045b46980d2.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `green` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs1.rs","byte_start":558,"byte_end":563,"line_start":24,"line_end":24,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"        assert_eq!(green.red, 0);","highlight_start":20,"highlight_end":25}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `green` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs1.rs:24:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(green.red, 0);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `green` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs1.rs","byte_start":592,"byte_end":597,"line_start":25,"line_end":25,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"        assert_eq!(green.green, 255);","highlight_start":20,"highlight_end":25}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `green` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs1.rs:25:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(green.green, 255);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `green` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs1.rs","byte_start":630,"byte_end":635,"line_start":26,"line_end":26,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"        assert_eq!(green.blue, 0);","highlight_start":20,"highlight_end":25}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `green` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs1.rs:26:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(green.blue, 0);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `green` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs1.rs","byte_start":778,"byte_end":783,"line_start":34,"line_end":34,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"        assert_eq!(green.0, 0);","highlight_start":20,"highlight_end":25}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `green` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs1.rs:34:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(green.0, 0);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `green` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs1.rs","byte_start":810,"byte_end":815,"line_start":35,"line_end":35,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"        assert_eq!(green.1, 255);","highlight_start":20,"highlight_end":25}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `green` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs1.rs:35:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(green.1, 255);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `green` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs1.rs","byte_start":844,"byte_end":849,"line_start":36,"line_end":36,"column_start":20,"column_end":25,"is_primary":true,"text":[{"text":"        assert_eq!(green.2, 0);","highlight_start":20,"highlight_end":25}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `green` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs1.rs:36:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(green.2, 0);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `unit_struct` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs1.rs","byte_start":1005,"byte_end":1016,"line_start":43,"line_end":43,"column_start":33,"column_end":44,"is_primary":true,"text":[{"text":"        let message = format!(\"{unit_struct:?}s are fun!\");","highlight_start":33,"highlight_end":44}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `unit_struct` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs1.rs:43:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let message = format!(\"{unit_struct:?}s are fun!\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused import: `super::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\07_structs\\structs1.rs","byte_start":418,"byte_end":426,"line_start":17,"line_end":17,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"exercises\\07_structs\\structs1.rs","byte_start":414,"byte_end":427,"line_start":17,"line_end":17,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `super::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs1.rs:17:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use super::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators5.rs","byte_start":887,"byte_end":892,"line_start":28,"line_end":28,"column_start":72,"column_end":77,"is_primary":true,"text":[{"text":"fn count_iterator(map: &HashMap<String, Progress>, value: Progress) -> usize {","highlight_start":72,"highlight_end":77}],"label":"expected `usize`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\18_iterators\\iterators5.rs","byte_start":819,"byte_end":833,"line_start":28,"line_end":28,"column_start":4,"column_end":18,"is_primary":false,"text":[{"text":"fn count_iterator(map: &HashMap<String, Progress>, value: Progress) -> usize {","highlight_start":4,"highlight_end":18}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators5.rs:28:72\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn count_iterator(map: &HashMap<String, Progress>, value: Progress) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `usize`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators5.rs","byte_start":1514,"byte_end":1519,"line_start":47,"line_end":47,"column_start":92,"column_end":97,"is_primary":true,"text":[{"text":"fn count_collection_iterator(collection: &[HashMap<String, Progress>], value: Progress) -> usize {","highlight_start":92,"highlight_end":97}],"label":"expected `usize`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\18_iterators\\iterators5.rs","byte_start":1426,"byte_end":1451,"line_start":47,"line_end":47,"column_start":4,"column_end":29,"is_primary":false,"text":[{"text":"fn count_collection_iterator(collection: &[HashMap<String, Progress>], value: Progress) -> usize {","highlight_start":4,"highlight_end":29}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators5.rs:47:92\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn count_collection_iterator(collection: &[HashMap<String, Progress>], value: Progress) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------\u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `usize`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\11_hashmaps\\hashmaps1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libhashmaps1_sol-10b8e354ce8f47b0.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\18_iterators\\iterators5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libiterators5_sol-beb7730703db114c.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"function `make_sausage` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\10_modules\\modules1.rs","byte_start":348,"byte_end":360,"line_start":15,"line_end":15,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    sausage_factory::make_sausage();","highlight_start":22,"highlight_end":34}],"label":"private function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the function `make_sausage` is defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\10_modules\\modules1.rs","byte_start":227,"byte_end":244,"line_start":8,"line_end":8,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    fn make_sausage() {","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `make_sausage` is private\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\10_modules\\modules1.rs:15:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    sausage_factory::make_sausage();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the function `make_sausage` is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\10_modules\\modules1.rs:8:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn make_sausage() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0603`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0603`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"missing lifetime specifier","code":{"code":"E0106","explanation":"This error indicates that a lifetime is missing from a type. If it is an error\ninside a function signature, the problem may be with failing to adhere to the\nlifetime elision rules (see below).\n\nErroneous code examples:\n\n```compile_fail,E0106\nstruct Foo1 { x: &bool }\n              // ^ expected lifetime parameter\nstruct Foo2<'a> { x: &'a bool } // correct\n\nstruct Bar1 { x: Foo2 }\n              // ^^^^ expected lifetime parameter\nstruct Bar2<'a> { x: Foo2<'a> } // correct\n\nenum Baz1 { A(u8), B(&bool), }\n                  // ^ expected lifetime parameter\nenum Baz2<'a> { A(u8), B(&'a bool), } // correct\n\ntype MyStr1 = &str;\n           // ^ expected lifetime parameter\ntype MyStr2<'a> = &'a str; // correct\n```\n\nLifetime elision is a special, limited kind of inference for lifetimes in\nfunction signatures which allows you to leave out lifetimes in certain cases.\nFor more background on lifetime elision see [the book][book-le].\n\nThe lifetime elision rules require that any function signature with an elided\noutput lifetime must either have:\n\n - exactly one input lifetime\n - or, multiple input lifetimes, but the function must also be a method with a\n   `&self` or `&mut self` receiver\n\nIn the first case, the output lifetime is inferred to be the same as the unique\ninput lifetime. In the second case, the lifetime is instead inferred to be the\nsame as the lifetime on `&self` or `&mut self`.\n\nHere are some examples of elision errors:\n\n```compile_fail,E0106\n// error, no input lifetimes\nfn foo() -> &str { }\n\n// error, `x` and `y` have distinct lifetimes inferred\nfn bar(x: &str, y: &str) -> &str { }\n\n// error, `y`'s lifetime is inferred to be distinct from `x`'s\nfn baz<'a>(x: &'a str, y: &str) -> &str { }\n```\n\n[book-le]: https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-elision\n"},"level":"error","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes3.rs","byte_start":137,"byte_end":138,"line_start":5,"line_end":5,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    author: &str,","highlight_start":13,"highlight_end":14}],"label":"expected named lifetime parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider introducing a named lifetime parameter","code":null,"level":"help","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes3.rs","byte_start":122,"byte_end":122,"line_start":4,"line_end":4,"column_start":12,"column_end":12,"is_primary":true,"text":[{"text":"struct Book {","highlight_start":12,"highlight_end":12}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes3.rs","byte_start":138,"byte_end":138,"line_start":5,"line_end":5,"column_start":14,"column_end":14,"is_primary":true,"text":[{"text":"    author: &str,","highlight_start":14,"highlight_end":14}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0106]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: missing lifetime specifier\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\16_lifetimes\\lifetimes3.rs:5:13\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    author: &str,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected named lifetime parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider introducing a named lifetime parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mstruct Book\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    author: &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0mstr,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"missing lifetime specifier","code":{"code":"E0106","explanation":"This error indicates that a lifetime is missing from a type. If it is an error\ninside a function signature, the problem may be with failing to adhere to the\nlifetime elision rules (see below).\n\nErroneous code examples:\n\n```compile_fail,E0106\nstruct Foo1 { x: &bool }\n              // ^ expected lifetime parameter\nstruct Foo2<'a> { x: &'a bool } // correct\n\nstruct Bar1 { x: Foo2 }\n              // ^^^^ expected lifetime parameter\nstruct Bar2<'a> { x: Foo2<'a> } // correct\n\nenum Baz1 { A(u8), B(&bool), }\n                  // ^ expected lifetime parameter\nenum Baz2<'a> { A(u8), B(&'a bool), } // correct\n\ntype MyStr1 = &str;\n           // ^ expected lifetime parameter\ntype MyStr2<'a> = &'a str; // correct\n```\n\nLifetime elision is a special, limited kind of inference for lifetimes in\nfunction signatures which allows you to leave out lifetimes in certain cases.\nFor more background on lifetime elision see [the book][book-le].\n\nThe lifetime elision rules require that any function signature with an elided\noutput lifetime must either have:\n\n - exactly one input lifetime\n - or, multiple input lifetimes, but the function must also be a method with a\n   `&self` or `&mut self` receiver\n\nIn the first case, the output lifetime is inferred to be the same as the unique\ninput lifetime. In the second case, the lifetime is instead inferred to be the\nsame as the lifetime on `&self` or `&mut self`.\n\nHere are some examples of elision errors:\n\n```compile_fail,E0106\n// error, no input lifetimes\nfn foo() -> &str { }\n\n// error, `x` and `y` have distinct lifetimes inferred\nfn bar(x: &str, y: &str) -> &str { }\n\n// error, `y`'s lifetime is inferred to be distinct from `x`'s\nfn baz<'a>(x: &'a str, y: &str) -> &str { }\n```\n\n[book-le]: https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-elision\n"},"level":"error","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes3.rs","byte_start":154,"byte_end":155,"line_start":6,"line_end":6,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"    title: &str,","highlight_start":12,"highlight_end":13}],"label":"expected named lifetime parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider introducing a named lifetime parameter","code":null,"level":"help","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes3.rs","byte_start":122,"byte_end":122,"line_start":4,"line_end":4,"column_start":12,"column_end":12,"is_primary":true,"text":[{"text":"struct Book {","highlight_start":12,"highlight_end":12}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes3.rs","byte_start":155,"byte_end":155,"line_start":6,"line_end":6,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"    title: &str,","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0106]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: missing lifetime specifier\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\16_lifetimes\\lifetimes3.rs:6:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    title: &str,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected named lifetime parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider introducing a named lifetime parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mstruct Book\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     author: &str,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    title: &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0mstr,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":326,"byte_end":345,"line_start":13,"line_end":13,"column_start":12,"column_end":31,"is_primary":true,"text":[{"text":"    data = data.to_uppercase();","highlight_start":12,"highlight_end":31}],"label":"expected `&String`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":304,"byte_end":311,"line_start":12,"line_end":12,"column_start":31,"column_end":38,"is_primary":false,"text":[{"text":"fn string_uppercase(mut data: &String) {","highlight_start":31,"highlight_end":38}],"label":"expected due to this parameter type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might have meant to mutate the pointed at value being passed in, instead of changing the reference in the local binding","code":null,"level":"help","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":305,"byte_end":305,"line_start":12,"line_end":12,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"fn string_uppercase(mut data: &String) {","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":"mut ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":294,"byte_end":298,"line_start":12,"line_end":12,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"fn string_uppercase(mut data: &String) {","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":319,"byte_end":319,"line_start":13,"line_end":13,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    data = data.to_uppercase();","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"*","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics5.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn string_uppercase(mut data: &String) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected due to this parameter type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    data = data.to_uppercase();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&String`, found `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might have meant to mutate the pointed at value being passed in, instead of changing the reference in the local binding\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mfn string_uppercase(data: &\u001b[0m\u001b[0m\u001b[38;5;10mmut \u001b[0m\u001b[0mString) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m*\u001b[0m\u001b[0mdata = data.to_uppercase();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0106`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0106`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"borrow of moved value: `data`","code":{"code":"E0382","explanation":"A variable was used after its contents have been moved elsewhere.\n\nErroneous code example:\n\n```compile_fail,E0382\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = MyStruct{ s: 5u32 };\n    let y = x;\n    x.s = 6;\n    println!(\"{}\", x.s);\n}\n```\n\nSince `MyStruct` is a type that is not marked `Copy`, the data gets moved out\nof `x` when we set `y`. This is fundamental to Rust's ownership system: outside\nof workarounds like `Rc`, a value cannot be owned by more than one variable.\n\nSometimes we don't need to move the value. Using a reference, we can let another\nfunction borrow the value without changing its ownership. In the example below,\nwe don't actually have to move our string to `calculate_length`, we can give it\na reference to it with `&` instead.\n\n```\nfn main() {\n    let s1 = String::from(\"hello\");\n\n    let len = calculate_length(&s1);\n\n    println!(\"The length of '{}' is {}.\", s1, len);\n}\n\nfn calculate_length(s: &String) -> usize {\n    s.len()\n}\n```\n\nA mutable reference can be created with `&mut`.\n\nSometimes we don't want a reference, but a duplicate. All types marked `Clone`\ncan be duplicated by calling `.clone()`. Subsequent changes to a clone do not\naffect the original variable.\n\nMost types in the standard library are marked `Clone`. The example below\ndemonstrates using `clone()` on a string. `s1` is first set to \"many\", and then\ncopied to `s2`. Then the first character of `s1` is removed, without affecting\n`s2`. \"any many\" is printed to the console.\n\n```\nfn main() {\n    let mut s1 = String::from(\"many\");\n    let s2 = s1.clone();\n    s1.remove(0);\n    println!(\"{} {}\", s1, s2);\n}\n```\n\nIf we control the definition of a type, we can implement `Clone` on it ourselves\nwith `#[derive(Clone)]`.\n\nSome types have no ownership semantics at all and are trivial to duplicate. An\nexample is `i32` and the other number types. We don't have to call `.clone()` to\nclone them, because they are marked `Copy` in addition to `Clone`. Implicit\ncloning is more convenient in this case. We can mark our own types `Copy` if\nall their members also are marked `Copy`.\n\nIn the example below, we implement a `Point` type. Because it only stores two\nintegers, we opt-out of ownership semantics with `Copy`. Then we can\n`let p2 = p1` without `p1` being moved.\n\n```\n#[derive(Copy, Clone)]\nstruct Point { x: i32, y: i32 }\n\nfn main() {\n    let mut p1 = Point{ x: -1, y: 2 };\n    let p2 = p1;\n    p1.x = 1;\n    println!(\"p1: {}, {}\", p1.x, p1.y);\n    println!(\"p2: {}, {}\", p2.x, p2.y);\n}\n```\n\nAlternatively, if we don't control the struct's definition, or mutable shared\nownership is truly required, we can use `Rc` and `RefCell`:\n\n```\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = Rc::new(RefCell::new(MyStruct{ s: 5u32 }));\n    let y = x.clone();\n    x.borrow_mut().s = 6;\n    println!(\"{}\", x.borrow().s);\n}\n```\n\nWith this approach, x and y share ownership of the data via the `Rc` (reference\ncount type). `RefCell` essentially performs runtime borrow checking: ensuring\nthat at most one writer or multiple readers can access the data at any one time.\n\nIf you wish to learn more about ownership in Rust, start with the\n[Understanding Ownership][understanding-ownership] chapter in the Book.\n\n[understanding-ownership]: https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\n"},"level":"error","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":446,"byte_end":450,"line_start":21,"line_end":21,"column_start":14,"column_end":18,"is_primary":false,"text":[{"text":"    get_char(data);","highlight_start":14,"highlight_end":18}],"label":"value moved here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":475,"byte_end":480,"line_start":23,"line_end":23,"column_start":22,"column_end":27,"is_primary":true,"text":[{"text":"    string_uppercase(&data);","highlight_start":22,"highlight_end":27}],"label":"value borrowed here after move","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":395,"byte_end":399,"line_start":19,"line_end":19,"column_start":9,"column_end":13,"is_primary":false,"text":[{"text":"    let data = \"Rust is great!\".to_string();","highlight_start":9,"highlight_end":13}],"label":"move occurs because `data` has type `String`, which does not implement the `Copy` trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider changing this parameter type in function `get_char` to borrow instead if owning the value isn't necessary","code":null,"level":"note","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":195,"byte_end":201,"line_start":7,"line_end":7,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"fn get_char(data: String) -> char {","highlight_start":19,"highlight_end":25}],"label":"this parameter takes ownership of the value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":180,"byte_end":188,"line_start":7,"line_end":7,"column_start":4,"column_end":12,"is_primary":false,"text":[{"text":"fn get_char(data: String) -> char {","highlight_start":4,"highlight_end":12}],"label":"in this function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider cloning the value if the performance cost is acceptable","code":null,"level":"help","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":450,"byte_end":450,"line_start":21,"line_end":21,"column_start":18,"column_end":18,"is_primary":true,"text":[{"text":"    get_char(data);","highlight_start":18,"highlight_end":18}],"label":null,"suggested_replacement":".clone()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0382]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: borrow of moved value: `data`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics5.rs:23:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let data = \"Rust is great!\".to_string();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmove occurs because `data` has type `String`, which does not implement the `Copy` trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_char(data);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvalue moved here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    string_uppercase(&data);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvalue borrowed here after move\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: consider changing this parameter type in function `get_char` to borrow instead if owning the value isn't necessary\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics5.rs:7:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn get_char(data: String) -> char {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis parameter takes ownership of the value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider cloning the value if the performance cost is acceptable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    get_char(data\u001b[0m\u001b[0m\u001b[38;5;10m.clone()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\11_hashmaps\\hashmaps2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libhashmaps2_sol-f6c67a6367c94a3e.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0382.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0308, E0382.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\05_vecs\\vecs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `v` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\05_vecs\\vecs1.rs","byte_start":243,"byte_end":244,"line_start":8,"line_end":8,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    (a, v)","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a local variable with a similar name exists","code":null,"level":"help","spans":[{"file_name":"exercises\\05_vecs\\vecs1.rs","byte_start":243,"byte_end":244,"line_start":8,"line_end":8,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    (a, v)","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `v` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\05_vecs\\vecs1.rs:8:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    (a, v)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a local variable with a similar name exists: `a`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\05_vecs\\vecs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\03_if\\if2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\03_if\\if2.rs","byte_start":155,"byte_end":156,"line_start":6,"line_end":6,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        1","highlight_start":9,"highlight_end":10}],"label":"expected `&str`, found integer","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\03_if\\if2.rs","byte_start":80,"byte_end":84,"line_start":2,"line_end":2,"column_start":31,"column_end":35,"is_primary":false,"text":[{"text":"fn picky_eater(food: &str) -> &str {","highlight_start":31,"highlight_end":35}],"label":"expected `&str` because of return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\03_if\\if2.rs:6:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn picky_eater(food: &str) -> &str {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected `&str` because of return type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&str`, found integer\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\03_if\\if2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"arc1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\arc1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `child_numbers` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\19_smart_pointers\\arc1.rs","byte_start":1259,"byte_end":1272,"line_start":35,"line_end":35,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"            let sum: u32 = child_numbers.iter().filter(|&&n| n % 8 == offset).sum();","highlight_start":28,"highlight_end":41}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `child_numbers` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\arc1.rs:35:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let sum: u32 = child_numbers.iter().filter(|&&n| n % 8 == offset).sum();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"arc1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\arc1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused import: `sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"error","spans":[{"file_name":"exercises\\19_smart_pointers\\arc1.rs","byte_start":851,"byte_end":860,"line_start":20,"line_end":20,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"use std::{sync::Arc, thread};","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\19_smart_pointers\\arc1.rs","byte_start":824,"byte_end":838,"line_start":19,"line_end":19,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"#![forbid(unused_imports)]","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"exercises\\19_smart_pointers\\arc1.rs","byte_start":851,"byte_end":862,"line_start":20,"line_end":20,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"use std::{sync::Arc, thread};","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"exercises\\19_smart_pointers\\arc1.rs","byte_start":850,"byte_end":851,"line_start":20,"line_end":20,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"use std::{sync::Arc, thread};","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"exercises\\19_smart_pointers\\arc1.rs","byte_start":868,"byte_end":869,"line_start":20,"line_end":20,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"use std::{sync::Arc, thread};","highlight_start":28,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `sync::Arc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\arc1.rs:20:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{sync::Arc, thread};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\arc1.rs:19:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![forbid(unused_imports)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\20_threads\\threads1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libthreads1_sol-53b8870260e91c46.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\10_modules\\modules2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmodules2_sol-5256d07d0a72df67.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\22_clippy\\clippy3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libclippy3_sol-077875ead58d1b65.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"arc1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\arc1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `x` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables1.rs","byte_start":54,"byte_end":55,"line_start":3,"line_end":3,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    x = 5;","highlight_start":5,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might have meant to introduce a new binding","code":null,"level":"help","spans":[{"file_name":"exercises\\01_variables\\variables1.rs","byte_start":54,"byte_end":54,"line_start":3,"line_end":3,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    x = 5;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"let ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `x` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables1.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    x = 5;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might have meant to introduce a new binding\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mlet \u001b[0m\u001b[0mx = 5;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `x` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables1.rs","byte_start":93,"byte_end":94,"line_start":5,"line_end":5,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"    println!(\"x has the value {x}\");","highlight_start":32,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `x` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables1.rs:5:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"x has the value {x}\");\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\22_clippy\\clippy1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libclippy1-2edc9023386b1f48.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators5.rs","byte_start":887,"byte_end":892,"line_start":28,"line_end":28,"column_start":72,"column_end":77,"is_primary":true,"text":[{"text":"fn count_iterator(map: &HashMap<String, Progress>, value: Progress) -> usize {","highlight_start":72,"highlight_end":77}],"label":"expected `usize`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\18_iterators\\iterators5.rs","byte_start":819,"byte_end":833,"line_start":28,"line_end":28,"column_start":4,"column_end":18,"is_primary":false,"text":[{"text":"fn count_iterator(map: &HashMap<String, Progress>, value: Progress) -> usize {","highlight_start":4,"highlight_end":18}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators5.rs:28:72\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn count_iterator(map: &HashMap<String, Progress>, value: Progress) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------\u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `usize`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators5.rs","byte_start":1514,"byte_end":1519,"line_start":47,"line_end":47,"column_start":92,"column_end":97,"is_primary":true,"text":[{"text":"fn count_collection_iterator(collection: &[HashMap<String, Progress>], value: Progress) -> usize {","highlight_start":92,"highlight_end":97}],"label":"expected `usize`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\18_iterators\\iterators5.rs","byte_start":1426,"byte_end":1451,"line_start":47,"line_end":47,"column_start":4,"column_end":29,"is_primary":false,"text":[{"text":"fn count_collection_iterator(collection: &[HashMap<String, Progress>], value: Progress) -> usize {","highlight_start":4,"highlight_end":29}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators5.rs:47:92\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m47\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn count_collection_iterator(collection: &[HashMap<String, Progress>], value: Progress) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------\u001b[0m\u001b[0m                                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `usize`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"`string2` does not live long enough","code":{"code":"E0597","explanation":"This error occurs because a value was dropped while it was still borrowed.\n\nErroneous code example:\n\n```compile_fail,E0597\nstruct Foo<'a> {\n    x: Option<&'a u32>,\n}\n\nlet mut x = Foo { x: None };\n{\n    let y = 0;\n    x.x = Some(&y); // error: `y` does not live long enough\n}\nprintln!(\"{:?}\", x.x);\n```\n\nHere, `y` is dropped at the end of the inner scope, but it is borrowed by\n`x` until the `println`. To fix the previous example, just remove the scope\nso that `y` isn't dropped until after the println\n\n```\nstruct Foo<'a> {\n    x: Option<&'a u32>,\n}\n\nlet mut x = Foo { x: None };\n\nlet y = 0;\nx.x = Some(&y);\n\nprintln!(\"{:?}\", x.x);\n```\n"},"level":"error","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes2.rs","byte_start":376,"byte_end":384,"line_start":17,"line_end":17,"column_start":36,"column_end":44,"is_primary":true,"text":[{"text":"        result = longest(&string1, &string2);","highlight_start":36,"highlight_end":44}],"label":"borrowed value does not live long enough","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes2.rs","byte_start":391,"byte_end":392,"line_start":18,"line_end":18,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    }","highlight_start":5,"highlight_end":6}],"label":"`string2` dropped here while still borrowed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes2.rs","byte_start":310,"byte_end":317,"line_start":16,"line_end":16,"column_start":13,"column_end":20,"is_primary":false,"text":[{"text":"        let string2 = String::from(\"xyz\");","highlight_start":13,"highlight_end":20}],"label":"binding `string2` declared here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes2.rs","byte_start":431,"byte_end":437,"line_start":19,"line_end":19,"column_start":39,"column_end":45,"is_primary":false,"text":[{"text":"    println!(\"The longest string is '{result}'\");","highlight_start":39,"highlight_end":45}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\16_lifetimes\\lifetimes2.rs","byte_start":397,"byte_end":441,"line_start":19,"line_end":19,"column_start":5,"column_end":49,"is_primary":false,"text":[{"text":"    println!(\"The longest string is '{result}'\");","highlight_start":5,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"println!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4285,"byte_end":4305,"line_start":138,"line_end":138,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! println {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::format_args_nl!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":35657,"byte_end":35684,"line_start":1017,"line_end":1017,"column_start":5,"column_end":32,"is_primary":false,"text":[{"text":"    macro_rules! format_args_nl {","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"desugaring of format string literal","def_site_span":{"file_name":"exercises\\16_lifetimes\\lifetimes2.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0597]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `string2` does not live long enough\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\16_lifetimes\\lifetimes2.rs:17:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let string2 = String::from(\"xyz\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mbinding `string2` declared here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        result = longest(&string1, &string2);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mborrowed value does not live long enough\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`string2` dropped here while still borrowed\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"The longest string is '{result}'\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mborrow later used here\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0597`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0597`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"function `make_sausage` is private","code":{"code":"E0603","explanation":"A private item was used outside its scope.\n\nErroneous code example:\n\n```compile_fail,E0603\nmod foo {\n    const PRIVATE: u32 = 0x_a_bad_1dea_u32; // This const is private, so we\n                                            // can't use it outside of the\n                                            // `foo` module.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // error: constant `PRIVATE`\n                                                  //        is private\n```\n\nIn order to fix this error, you need to make the item public by using the `pub`\nkeyword. Example:\n\n```\nmod foo {\n    pub const PRIVATE: u32 = 0x_a_bad_1dea_u32; // We set it public by using the\n                                                // `pub` keyword.\n}\n\nprintln!(\"const value: {}\", foo::PRIVATE); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\10_modules\\modules1.rs","byte_start":348,"byte_end":360,"line_start":15,"line_end":15,"column_start":22,"column_end":34,"is_primary":true,"text":[{"text":"    sausage_factory::make_sausage();","highlight_start":22,"highlight_end":34}],"label":"private function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the function `make_sausage` is defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\10_modules\\modules1.rs","byte_start":227,"byte_end":244,"line_start":8,"line_end":8,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"    fn make_sausage() {","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0603]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function `make_sausage` is private\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\10_modules\\modules1.rs:15:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    sausage_factory::make_sausage();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mprivate function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the function `make_sausage` is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\10_modules\\modules1.rs:8:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn make_sausage() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0603`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0603`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `a` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types3.rs","byte_start":113,"byte_end":114,"line_start":5,"line_end":5,"column_start":8,"column_end":9,"is_primary":true,"text":[{"text":"    if a.len() >= 100 {","highlight_start":8,"highlight_end":9}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `a` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types3.rs:5:8\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if a.len() >= 100 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings1.rs","byte_start":117,"byte_end":123,"line_start":3,"line_end":3,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    \"blue\"","highlight_start":5,"highlight_end":11}],"label":"expected `String`, found `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings1.rs","byte_start":104,"byte_end":110,"line_start":2,"line_end":2,"column_start":32,"column_end":38,"is_primary":false,"text":[{"text":"fn current_favorite_color() -> String {","highlight_start":32,"highlight_end":38}],"label":"expected `String` because of return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings1.rs","byte_start":123,"byte_end":123,"line_start":3,"line_end":3,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"    \"blue\"","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings1.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn current_favorite_color() -> String {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected `String` because of return type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"blue\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `String`, found `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try using a conversion method\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \"blue\"\u001b[0m\u001b[0m\u001b[38;5;10m.to_string()\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"used binding `x` isn't initialized","code":{"code":"E0381","explanation":"It is not allowed to use or capture an uninitialized variable.\n\nErroneous code example:\n\n```compile_fail,E0381\nfn main() {\n    let x: i32;\n    let y = x; // error, use of possibly-uninitialized variable\n}\n```\n\nTo fix this, ensure that any declared variables are initialized before being\nused. Example:\n\n```\nfn main() {\n    let x: i32 = 0;\n    let y = x; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables3.rs","byte_start":113,"byte_end":114,"line_start":5,"line_end":5,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"    println!(\"Number {x}\");","highlight_start":23,"highlight_end":24}],"label":"`x` used here but it isn't initialized","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\01_variables\\variables3.rs","byte_start":95,"byte_end":117,"line_start":5,"line_end":5,"column_start":5,"column_end":27,"is_primary":false,"text":[{"text":"    println!(\"Number {x}\");","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"println!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4285,"byte_end":4305,"line_start":138,"line_end":138,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! println {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::format_args_nl!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":35657,"byte_end":35684,"line_start":1017,"line_end":1017,"column_start":5,"column_end":32,"is_primary":false,"text":[{"text":"    macro_rules! format_args_nl {","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"desugaring of format string literal","def_site_span":{"file_name":"exercises\\01_variables\\variables3.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\01_variables\\variables3.rs","byte_start":82,"byte_end":83,"line_start":3,"line_end":3,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"    let x: i32;","highlight_start":9,"highlight_end":10}],"label":"binding declared here but left uninitialized","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider assigning a value","code":null,"level":"help","spans":[{"file_name":"exercises\\01_variables\\variables3.rs","byte_start":88,"byte_end":88,"line_start":3,"line_end":3,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"    let x: i32;","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":" = 42","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0381]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: used binding `x` isn't initialized\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables3.rs:5:23\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let x: i32;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mbinding declared here but left uninitialized\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"Number {x}\");\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`x` used here but it isn't initialized\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider assigning a value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let x: i32\u001b[0m\u001b[0m\u001b[38;5;10m = 42\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0381`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0381`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"macro requires a boolean expression as an argument","code":null,"level":"error","spans":[{"file_name":"exercises\\17_tests\\tests1.rs","byte_start":429,"byte_end":438,"line_start":20,"line_end":20,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        assert!();","highlight_start":9,"highlight_end":18}],"label":"boolean expression required","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: macro requires a boolean expression as an argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\17_tests\\tests1.rs:20:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mboolean expression required\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"macro requires a boolean expression as an argument","code":null,"level":"error","spans":[{"file_name":"exercises\\17_tests\\tests1.rs","byte_start":448,"byte_end":457,"line_start":21,"line_end":21,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        assert!();","highlight_start":9,"highlight_end":18}],"label":"boolean expression required","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: macro requires a boolean expression as an argument\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\17_tests\\tests1.rs:21:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mboolean expression required\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"from_str","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\from_str.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\from_str.rs","byte_start":1619,"byte_end":1642,"line_start":44,"line_end":44,"column_start":29,"column_end":52,"is_primary":true,"text":[{"text":"    fn from_str(s: &str) -> Result<Self, Self::Err> {}","highlight_start":29,"highlight_end":52}],"label":"expected `Result<Person, ParsePersonError>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\from_str.rs","byte_start":1598,"byte_end":1606,"line_start":44,"line_end":44,"column_start":8,"column_end":16,"is_primary":false,"text":[{"text":"    fn from_str(s: &str) -> Result<Self, Self::Err> {}","highlight_start":8,"highlight_end":16}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Result<Person, ParsePersonError>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\from_str.rs:44:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from_str(s: &str) -> Result<Self, Self::Err> {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<Person, ParsePersonError>`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<Person, ParsePersonError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"intro2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\00_intro\\intro2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libintro2_sol-3f0b982eba229fae.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"from_str_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\23_conversions\\from_str.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfrom_str_sol-f1878291797a5379.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"from_str","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\from_str.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\03_if\\if1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libif1_sol-78200f0df6c5bff2.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cow1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\cow1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libcow1-c9dc5aaa048fc27a.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"used binding `x` isn't initialized","code":{"code":"E0381","explanation":"It is not allowed to use or capture an uninitialized variable.\n\nErroneous code example:\n\n```compile_fail,E0381\nfn main() {\n    let x: i32;\n    let y = x; // error, use of possibly-uninitialized variable\n}\n```\n\nTo fix this, ensure that any declared variables are initialized before being\nused. Example:\n\n```\nfn main() {\n    let x: i32 = 0;\n    let y = x; // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables3.rs","byte_start":113,"byte_end":114,"line_start":5,"line_end":5,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"    println!(\"Number {x}\");","highlight_start":23,"highlight_end":24}],"label":"`x` used here but it isn't initialized","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\01_variables\\variables3.rs","byte_start":95,"byte_end":117,"line_start":5,"line_end":5,"column_start":5,"column_end":27,"is_primary":false,"text":[{"text":"    println!(\"Number {x}\");","highlight_start":5,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"println!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4285,"byte_end":4305,"line_start":138,"line_end":138,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! println {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::format_args_nl!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":35657,"byte_end":35684,"line_start":1017,"line_end":1017,"column_start":5,"column_end":32,"is_primary":false,"text":[{"text":"    macro_rules! format_args_nl {","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"desugaring of format string literal","def_site_span":{"file_name":"exercises\\01_variables\\variables3.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\01_variables\\variables3.rs","byte_start":82,"byte_end":83,"line_start":3,"line_end":3,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"    let x: i32;","highlight_start":9,"highlight_end":10}],"label":"binding declared here but left uninitialized","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider assigning a value","code":null,"level":"help","spans":[{"file_name":"exercises\\01_variables\\variables3.rs","byte_start":88,"byte_end":88,"line_start":3,"line_end":3,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"    let x: i32;","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":" = 42","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0381]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: used binding `x` isn't initialized\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables3.rs:5:23\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let x: i32;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mbinding declared here but left uninitialized\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"Number {x}\");\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m`x` used here but it isn't initialized\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider assigning a value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let x: i32\u001b[0m\u001b[0m\u001b[38;5;10m = 42\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0381`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0381`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `basket` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps1.rs","byte_start":543,"byte_end":549,"line_start":14,"line_end":14,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    basket.insert(String::from(\"banana\"), 2);","highlight_start":5,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `basket` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps1.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    basket.insert(String::from(\"banana\"), 2);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `basket` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps1.rs","byte_start":636,"byte_end":642,"line_start":18,"line_end":18,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    basket","highlight_start":5,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `basket` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps1.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    basket\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused import: `super::*`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\quizzes\\quiz1.rs","byte_start":596,"byte_end":604,"line_start":22,"line_end":22,"column_start":9,"column_end":17,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":9,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"exercises\\quizzes\\quiz1.rs","byte_start":592,"byte_end":605,"line_start":22,"line_end":22,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"    use super::*;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `super::*`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\quizzes\\quiz1.rs:22:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    use super::*;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\06_move_semantics\\move_semantics1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmove_semantics1_sol-00ede53ad2f53a7d.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\04_primitive_types\\primitive_types4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types4_sol-c635de7066118c26.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\13_error_handling\\errors2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors2_sol-243b82ae0b491304.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find function `calculate_price_of_apples` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\quizzes\\quiz1.rs","byte_start":661,"byte_end":686,"line_start":26,"line_end":26,"column_start":20,"column_end":45,"is_primary":true,"text":[{"text":"        assert_eq!(calculate_price_of_apples(35), 70);","highlight_start":20,"highlight_end":45}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find function `calculate_price_of_apples` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\quizzes\\quiz1.rs:26:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(calculate_price_of_apples(35), 70);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libhashmaps3_sol-cc692c3e676b320d.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find function `calculate_price_of_apples` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\quizzes\\quiz1.rs","byte_start":716,"byte_end":741,"line_start":27,"line_end":27,"column_start":20,"column_end":45,"is_primary":true,"text":[{"text":"        assert_eq!(calculate_price_of_apples(40), 80);","highlight_start":20,"highlight_end":45}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find function `calculate_price_of_apples` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\quizzes\\quiz1.rs:27:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(calculate_price_of_apples(40), 80);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find function `calculate_price_of_apples` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\quizzes\\quiz1.rs","byte_start":771,"byte_end":796,"line_start":28,"line_end":28,"column_start":20,"column_end":45,"is_primary":true,"text":[{"text":"        assert_eq!(calculate_price_of_apples(41), 41);","highlight_start":20,"highlight_end":45}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find function `calculate_price_of_apples` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\quizzes\\quiz1.rs:28:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(calculate_price_of_apples(41), 41);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"as_ref_mut_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\23_conversions\\as_ref_mut.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libas_ref_mut_sol-cb8674aaf3de48bc.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find function `calculate_price_of_apples` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\quizzes\\quiz1.rs","byte_start":826,"byte_end":851,"line_start":29,"line_end":29,"column_start":20,"column_end":45,"is_primary":true,"text":[{"text":"        assert_eq!(calculate_price_of_apples(65), 65);","highlight_start":20,"highlight_end":45}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find function `calculate_price_of_apples` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\quizzes\\quiz1.rs:29:20\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(calculate_price_of_apples(65), 65);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\01_variables\\variables5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvariables5_sol-0cf99ec9803bbc9a.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\06_move_semantics\\move_semantics5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmove_semantics5_sol-892a26909970d82d.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":457,"byte_end":463,"line_start":16,"line_end":16,"column_start":17,"column_end":23,"is_primary":false,"text":[{"text":"    placeholder(\"blue\");","highlight_start":17,"highlight_end":23}],"label":"unexpected argument of type `&'static str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":445,"byte_end":456,"line_start":16,"line_end":16,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"blue\");","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":457,"byte_end":463,"line_start":16,"line_end":16,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"    placeholder(\"blue\");","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:16:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"blue\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `&'static str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"blue\"\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libquiz3-e77283c18e3c78e4.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":483,"byte_end":500,"line_start":18,"line_end":18,"column_start":17,"column_end":34,"is_primary":false,"text":[{"text":"    placeholder(\"red\".to_string());","highlight_start":17,"highlight_end":34}],"label":"unexpected argument of type `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":471,"byte_end":482,"line_start":18,"line_end":18,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"red\".to_string());","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":483,"byte_end":500,"line_start":18,"line_end":18,"column_start":17,"column_end":34,"is_primary":true,"text":[{"text":"    placeholder(\"red\".to_string());","highlight_start":17,"highlight_end":34}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"red\".to_string());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"red\".to_string()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":520,"byte_end":538,"line_start":20,"line_end":20,"column_start":17,"column_end":35,"is_primary":false,"text":[{"text":"    placeholder(String::from(\"hi\"));","highlight_start":17,"highlight_end":35}],"label":"unexpected argument of type `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":508,"byte_end":519,"line_start":20,"line_end":20,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(String::from(\"hi\"));","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":520,"byte_end":538,"line_start":20,"line_end":20,"column_start":17,"column_end":35,"is_primary":true,"text":[{"text":"    placeholder(String::from(\"hi\"));","highlight_start":17,"highlight_end":35}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:20:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(String::from(\"hi\"));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9mString::from(\"hi\")\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":558,"byte_end":583,"line_start":22,"line_end":22,"column_start":17,"column_end":42,"is_primary":false,"text":[{"text":"    placeholder(\"rust is fun!\".to_owned());","highlight_start":17,"highlight_end":42}],"label":"unexpected argument of type `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":546,"byte_end":557,"line_start":22,"line_end":22,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"rust is fun!\".to_owned());","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":558,"byte_end":583,"line_start":22,"line_end":22,"column_start":17,"column_end":42,"is_primary":true,"text":[{"text":"    placeholder(\"rust is fun!\".to_owned());","highlight_start":17,"highlight_end":42}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:22:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"rust is fun!\".to_owned());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"rust is fun!\".to_owned()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29820,"line_start":875,"line_end":875,"column_start":9,"column_end":56,"is_primary":true,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":56}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\20_threads\\threads2.rs","byte_start":969,"byte_end":1003,"line_start":33,"line_end":33,"column_start":5,"column_end":39,"is_primary":false,"text":[{"text":"    println!(\"Jobs done: {}\", todo!());","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"println!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4285,"byte_end":4305,"line_start":138,"line_end":138,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! println {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::format_args_nl!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":35657,"byte_end":35684,"line_start":1017,"line_end":1017,"column_start":5,"column_end":32,"is_primary":false,"text":[{"text":"    macro_rules! format_args_nl {","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"desugaring of format string literal","def_site_span":{"file_name":"exercises\\20_threads\\threads2.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29820,"line_start":875,"line_end":875,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":56}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\20_threads\\threads2.rs","byte_start":995,"byte_end":1002,"line_start":33,"line_end":33,"column_start":31,"column_end":38,"is_primary":false,"text":[{"text":"    println!(\"Jobs done: {}\", todo!());","highlight_start":31,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29733,"byte_end":29750,"line_start":873,"line_end":873,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\20_threads\\threads2.rs:33:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"Jobs done: {}\", todo!());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14many code following this expression is unreachable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":603,"byte_end":624,"line_start":24,"line_end":24,"column_start":17,"column_end":38,"is_primary":false,"text":[{"text":"    placeholder(\"nice weather\".into());","highlight_start":17,"highlight_end":38}],"label":"unexpected argument","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":591,"byte_end":602,"line_start":24,"line_end":24,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"nice weather\".into());","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":603,"byte_end":624,"line_start":24,"line_end":24,"column_start":17,"column_end":38,"is_primary":true,"text":[{"text":"    placeholder(\"nice weather\".into());","highlight_start":17,"highlight_end":38}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:24:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"nice weather\".into());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"nice weather\".into()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":644,"byte_end":682,"line_start":26,"line_end":26,"column_start":17,"column_end":55,"is_primary":false,"text":[{"text":"    placeholder(format!(\"Interpolation {}\", \"Station\"));","highlight_start":17,"highlight_end":55}],"label":"unexpected argument of type `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":632,"byte_end":643,"line_start":26,"line_end":26,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(format!(\"Interpolation {}\", \"Station\"));","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":644,"byte_end":682,"line_start":26,"line_end":26,"column_start":17,"column_end":55,"is_primary":true,"text":[{"text":"    placeholder(format!(\"Interpolation {}\", \"Station\"));","highlight_start":17,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:26:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(format!(\"Interpolation {}\", \"Station\"));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9mformat!(\"Interpolation {}\", \"Station\")\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":833,"byte_end":859,"line_start":30,"line_end":30,"column_start":17,"column_end":43,"is_primary":false,"text":[{"text":"    placeholder(&String::from(\"abc\")[0..1]);","highlight_start":17,"highlight_end":43}],"label":"unexpected argument of type `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":821,"byte_end":832,"line_start":30,"line_end":30,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(&String::from(\"abc\")[0..1]);","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":833,"byte_end":859,"line_start":30,"line_end":30,"column_start":17,"column_end":43,"is_primary":true,"text":[{"text":"    placeholder(&String::from(\"abc\")[0..1]);","highlight_start":17,"highlight_end":43}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:30:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(&String::from(\"abc\")[0..1]);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `&str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m&String::from(\"abc\")[0..1]\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m30\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":879,"byte_end":902,"line_start":32,"line_end":32,"column_start":17,"column_end":40,"is_primary":false,"text":[{"text":"    placeholder(\"  hello there \".trim());","highlight_start":17,"highlight_end":40}],"label":"unexpected argument of type `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":867,"byte_end":878,"line_start":32,"line_end":32,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"  hello there \".trim());","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":879,"byte_end":902,"line_start":32,"line_end":32,"column_start":17,"column_end":40,"is_primary":true,"text":[{"text":"    placeholder(\"  hello there \".trim());","highlight_start":17,"highlight_end":40}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:32:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"  hello there \".trim());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `&str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"  hello there \".trim()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":922,"byte_end":960,"line_start":34,"line_end":34,"column_start":17,"column_end":55,"is_primary":false,"text":[{"text":"    placeholder(\"Happy Monday!\".replace(\"Mon\", \"Tues\"));","highlight_start":17,"highlight_end":55}],"label":"unexpected argument of type `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":910,"byte_end":921,"line_start":34,"line_end":34,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"Happy Monday!\".replace(\"Mon\", \"Tues\"));","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":922,"byte_end":960,"line_start":34,"line_end":34,"column_start":17,"column_end":55,"is_primary":true,"text":[{"text":"    placeholder(\"Happy Monday!\".replace(\"Mon\", \"Tues\"));","highlight_start":17,"highlight_end":55}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:34:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"Happy Monday!\".replace(\"Mon\", \"Tues\"));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"Happy Monday!\".replace(\"Mon\", \"Tues\")\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m34\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"this function takes 0 arguments but 1 argument was supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":980,"byte_end":1019,"line_start":36,"line_end":36,"column_start":17,"column_end":56,"is_primary":false,"text":[{"text":"    placeholder(\"mY sHiFt KeY iS sTiCkY\".to_lowercase());","highlight_start":17,"highlight_end":56}],"label":"unexpected argument of type `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":968,"byte_end":979,"line_start":36,"line_end":36,"column_start":5,"column_end":16,"is_primary":true,"text":[{"text":"    placeholder(\"mY sHiFt KeY iS sTiCkY\".to_lowercase());","highlight_start":5,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":90,"byte_end":101,"line_start":2,"line_end":2,"column_start":4,"column_end":15,"is_primary":true,"text":[{"text":"fn placeholder() {}","highlight_start":4,"highlight_end":15}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the extra argument","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings4.rs","byte_start":980,"byte_end":1019,"line_start":36,"line_end":36,"column_start":17,"column_end":56,"is_primary":true,"text":[{"text":"    placeholder(\"mY sHiFt KeY iS sTiCkY\".to_lowercase());","highlight_start":17,"highlight_end":56}],"label":null,"suggested_replacement":"","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 0 arguments but 1 argument was supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:36:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    placeholder(\"mY sHiFt KeY iS sTiCkY\".to_lowercase());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14munexpected argument of type `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings4.rs:2:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn placeholder() {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove the extra argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    placeholder(\u001b[0m\u001b[0m\u001b[38;5;9m\"mY sHiFt KeY iS sTiCkY\".to_lowercase()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    placeholder();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"generics2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\14_generics\\generics2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libgenerics2-7b83205bccc3fc14.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0061`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot assign to data in an `Arc`","code":{"code":"E0594","explanation":"A non-mutable value was assigned a value.\n\nErroneous code example:\n\n```compile_fail,E0594\nstruct SolarSystem {\n    earth: i32,\n}\n\nlet ss = SolarSystem { earth: 3 };\nss.earth = 2; // error!\n```\n\nTo fix this error, declare `ss` as mutable by using the `mut` keyword:\n\n```\nstruct SolarSystem {\n    earth: i32,\n}\n\nlet mut ss = SolarSystem { earth: 3 }; // declaring `ss` as mutable\nss.earth = 2; // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\20_threads\\threads2.rs","byte_start":723,"byte_end":751,"line_start":22,"line_end":22,"column_start":13,"column_end":41,"is_primary":true,"text":[{"text":"            status_shared.jobs_done += 1;","highlight_start":13,"highlight_end":41}],"label":"cannot assign","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait `DerefMut` is required to modify through a dereference, but it is not implemented for `Arc<JobStatus>`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0594]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot assign to data in an `Arc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\20_threads\\threads2.rs:22:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            status_shared.jobs_done += 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot assign\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: trait `DerefMut` is required to modify through a dereference, but it is not implemented for `Arc<JobStatus>`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0594`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0594`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"generics1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\14_generics\\generics1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"type annotations needed for `Vec<_>`","code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = Vec::new();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nIn the example above, type `Vec` has a type parameter `T`. When calling\n`Vec::new`, barring any other later usage of the variable `x` that allows the\ncompiler to infer what type `T` is, the compiler needs to be told what it is.\n\nThe type can be specified on the variable:\n\n```\nlet x: Vec<i32> = Vec::new();\n```\n\nThe type can also be specified in the path of the expression:\n\n```\nlet x = Vec::<i32>::new();\n```\n\nIn cases with more complex types, it is not necessary to annotate the full\ntype. Once the ambiguity is resolved, the compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","spans":[{"file_name":"exercises\\14_generics\\generics1.rs","byte_start":450,"byte_end":460,"line_start":9,"line_end":9,"column_start":23,"column_end":33,"is_primary":false,"text":[{"text":"    let mut numbers = Vec::new();","highlight_start":23,"highlight_end":33}],"label":"type must be known at this point","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\14_generics\\generics1.rs","byte_start":436,"byte_end":447,"line_start":9,"line_end":9,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let mut numbers = Vec::new();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider giving `numbers` an explicit type, where the type for type parameter `T` is specified","code":null,"level":"help","spans":[{"file_name":"exercises\\14_generics\\generics1.rs","byte_start":447,"byte_end":447,"line_start":9,"line_end":9,"column_start":20,"column_end":20,"is_primary":true,"text":[{"text":"    let mut numbers = Vec::new();","highlight_start":20,"highlight_end":20}],"label":null,"suggested_replacement":": Vec<T>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0282]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type annotations needed for `Vec<_>`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\14_generics\\generics1.rs:9:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut numbers = Vec::new();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mtype must be known at this point\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider giving `numbers` an explicit type, where the type for type parameter `T` is specified\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut numbers\u001b[0m\u001b[0m\u001b[38;5;10m: Vec<T>\u001b[0m\u001b[0m = Vec::new();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\18_iterators\\iterators1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libiterators1_sol-e153827bdd249669.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtests3-51e3151f71dac2e9.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"try_from_into_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\23_conversions\\try_from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtry_from_into_sol-5b59b54931537d6e.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\04_primitive_types\\primitive_types2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types2_sol-3ffa6b1d58a5eb63.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"generics1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\14_generics\\generics1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0282`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0282`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\17_tests\\tests3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtests3_sol-ba915f113d433ee4.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\22_clippy\\clippy2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libclippy2_sol-dadb9c7ea299a073.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\quizzes\\quiz1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libquiz1-ea58b865e9aa2592.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\05_vecs\\vecs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvecs1_sol-170b8dafdc97d0e0.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtests1-8d5e017675eabf5a.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\20_threads\\threads1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libthreads1_sol-c133d025b2249f5e.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\02_functions\\functions2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfunctions2_sol-da00b0a9487cfef7.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\13_error_handling\\errors4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors4_sol-4c711f6532bf92aa.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot borrow `vec` as mutable, as it is not declared as mutable","code":{"code":"E0596","explanation":"This error occurs because you tried to mutably borrow a non-mutable variable.\n\nErroneous code example:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics1.rs","byte_start":115,"byte_end":118,"line_start":5,"line_end":5,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    vec.push(88);","highlight_start":5,"highlight_end":8}],"label":"cannot borrow as mutable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider changing this to be mutable","code":null,"level":"help","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics1.rs","byte_start":99,"byte_end":99,"line_start":3,"line_end":3,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"    let vec = vec;","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"mut ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0596]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot borrow `vec` as mutable, as it is not declared as mutable\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics1.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    vec.push(88);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot borrow as mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider changing this to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let \u001b[0m\u001b[0m\u001b[38;5;10mmut \u001b[0m\u001b[0mvec = vec;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0596`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0596`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\16_lifetimes\\lifetimes1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liblifetimes1_sol-1db4e4e7d1cf1b8e.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"generics2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\14_generics\\generics2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libgenerics2_sol-3a3cac3fb1d9d952.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\13_error_handling\\errors2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors2_sol-1e138ce41a841e03.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"box1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\box1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"recursive type `List` has infinite size","code":{"code":"E0072","explanation":"A recursive type has infinite size because it doesn't have an indirection.\n\nErroneous code example:\n\n```compile_fail,E0072\nstruct ListNode {\n    head: u8,\n    tail: Option<ListNode>, // error: no indirection here so impossible to\n                            //        compute the type's size\n}\n```\n\nWhen defining a recursive struct or enum, any use of the type being defined\nfrom inside the definition must occur behind a pointer (like `Box`, `&` or\n`Rc`). This is because structs and enums must have a well-defined size, and\nwithout the pointer, the size of the type would need to be unbounded.\n\nIn the example, the type cannot have a well-defined size, because it needs to be\narbitrarily large (since we would be able to nest `ListNode`s to any depth).\nSpecifically,\n\n```plain\nsize of `ListNode` = 1 byte for `head`\n                   + 1 byte for the discriminant of the `Option`\n                   + size of `ListNode`\n```\n\nOne way to fix this is by wrapping `ListNode` in a `Box`, like so:\n\n```\nstruct ListNode {\n    head: u8,\n    tail: Option<Box<ListNode>>,\n}\n```\n\nThis works because `Box` is a pointer, so its size is well-known.\n"},"level":"error","spans":[{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":765,"byte_end":769,"line_start":15,"line_end":15,"column_start":15,"column_end":19,"is_primary":false,"text":[{"text":"    Cons(i32, List),","highlight_start":15,"highlight_end":19}],"label":"recursive without indirection","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":739,"byte_end":748,"line_start":14,"line_end":14,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"enum List {","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"insert some indirection (e.g., a `Box`, `Rc`, or `&`) to break the cycle","code":null,"level":"help","spans":[{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":765,"byte_end":765,"line_start":15,"line_end":15,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"    Cons(i32, List),","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":"Box<","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":769,"byte_end":769,"line_start":15,"line_end":15,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    Cons(i32, List),","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":">","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0072]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: recursive type `List` has infinite size\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\box1.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum List {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cons(i32, List),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrecursive without indirection\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: insert some indirection (e.g., a `Box`, `Rc`, or `&`) to break the cycle\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    Cons(i32, \u001b[0m\u001b[0m\u001b[38;5;10mBox<\u001b[0m\u001b[0mList\u001b[0m\u001b[0m\u001b[38;5;10m>\u001b[0m\u001b[0m),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `x` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables1.rs","byte_start":54,"byte_end":55,"line_start":3,"line_end":3,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    x = 5;","highlight_start":5,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might have meant to introduce a new binding","code":null,"level":"help","spans":[{"file_name":"exercises\\01_variables\\variables1.rs","byte_start":54,"byte_end":54,"line_start":3,"line_end":3,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    x = 5;","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"let ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `x` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables1.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    x = 5;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might have meant to introduce a new binding\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mlet \u001b[0m\u001b[0mx = 5;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `x` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables1.rs","byte_start":93,"byte_end":94,"line_start":5,"line_end":5,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"    println!(\"x has the value {x}\");","highlight_start":32,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `x` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables1.rs:5:32\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"x has the value {x}\");\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"box1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\box1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cycle detected when computing drop-check constraints for `List`","code":{"code":"E0391","explanation":"A type dependency cycle has been encountered.\n\nErroneous code example:\n\n```compile_fail,E0391\ntrait FirstTrait : SecondTrait {\n\n}\n\ntrait SecondTrait : FirstTrait {\n\n}\n```\n\nThe previous example contains a circular dependency between two traits:\n`FirstTrait` depends on `SecondTrait` which itself depends on `FirstTrait`.\n\nSee https://rustc-dev-guide.rust-lang.org/overview.html#queries and\nhttps://rustc-dev-guide.rust-lang.org/query.html for more information.\n"},"level":"error","spans":[{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":739,"byte_end":748,"line_start":14,"line_end":14,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"enum List {","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"...which immediately requires computing drop-check constraints for `List` again","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"cycle used when computing dropck types for `List`","code":null,"level":"note","spans":[{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"see https://rustc-dev-guide.rust-lang.org/overview.html#queries and https://rustc-dev-guide.rust-lang.org/query.html for more information","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0391]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cycle detected when computing drop-check constraints for `List`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\box1.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum List {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: ...which immediately requires computing drop-check constraints for `List` again\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: cycle used when computing dropck types for `List`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see https://rustc-dev-guide.rust-lang.org/overview.html#queries and https://rustc-dev-guide.rust-lang.org/query.html for more information\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"box1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\box1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cycle detected when computing when `List` needs drop","code":{"code":"E0391","explanation":"A type dependency cycle has been encountered.\n\nErroneous code example:\n\n```compile_fail,E0391\ntrait FirstTrait : SecondTrait {\n\n}\n\ntrait SecondTrait : FirstTrait {\n\n}\n```\n\nThe previous example contains a circular dependency between two traits:\n`FirstTrait` depends on `SecondTrait` which itself depends on `FirstTrait`.\n\nSee https://rustc-dev-guide.rust-lang.org/overview.html#queries and\nhttps://rustc-dev-guide.rust-lang.org/query.html for more information.\n"},"level":"error","spans":[{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":739,"byte_end":748,"line_start":14,"line_end":14,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"enum List {","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"...which immediately requires computing when `List` needs drop again","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"cycle used when computing whether `List` needs drop","code":null,"level":"note","spans":[{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"see https://rustc-dev-guide.rust-lang.org/overview.html#queries and https://rustc-dev-guide.rust-lang.org/query.html for more information","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0391]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cycle detected when computing when `List` needs drop\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\box1.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum List {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: ...which immediately requires computing when `List` needs drop again\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: cycle used when computing whether `List` needs drop\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see https://rustc-dev-guide.rust-lang.org/overview.html#queries and https://rustc-dev-guide.rust-lang.org/query.html for more information\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\03_if\\if1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\03_if\\if1.rs","byte_start":29,"byte_end":32,"line_start":1,"line_end":1,"column_start":30,"column_end":33,"is_primary":true,"text":[{"text":"fn bigger(a: i32, b: i32) -> i32 {","highlight_start":30,"highlight_end":33}],"label":"expected `i32`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\03_if\\if1.rs","byte_start":3,"byte_end":9,"line_start":1,"line_end":1,"column_start":4,"column_end":10,"is_primary":false,"text":[{"text":"fn bigger(a: i32, b: i32) -> i32 {","highlight_start":4,"highlight_end":10}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider returning one of these bindings","code":null,"level":"note","spans":[{"file_name":"exercises\\03_if\\if1.rs","byte_start":10,"byte_end":11,"line_start":1,"line_end":1,"column_start":11,"column_end":12,"is_primary":true,"text":[{"text":"fn bigger(a: i32, b: i32) -> i32 {","highlight_start":11,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\03_if\\if1.rs","byte_start":18,"byte_end":19,"line_start":1,"line_end":1,"column_start":19,"column_end":20,"is_primary":true,"text":[{"text":"fn bigger(a: i32, b: i32) -> i32 {","highlight_start":19,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\03_if\\if1.rs:1:30\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn bigger(a: i32, b: i32) -> i32 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `i32`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: consider returning one of these bindings\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\03_if\\if1.rs:1:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn bigger(a: i32, b: i32) -> i32 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"box1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\box1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0072, E0391.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0072, E0391.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"box1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\box1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0072`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0072`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\03_if\\if1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\02_functions\\functions4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfunctions4_sol-5a76b8ae907a54a5.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `nice_slice` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types4.rs","byte_start":317,"byte_end":327,"line_start":14,"line_end":14,"column_start":31,"column_end":41,"is_primary":true,"text":[{"text":"        assert_eq!([2, 3, 4], nice_slice);","highlight_start":31,"highlight_end":41}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `nice_slice` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types4.rs:14:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!([2, 3, 4], nice_slice);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find macro `my_macro` in this scope","code":null,"level":"error","spans":[{"file_name":"exercises\\21_macros\\macros3.rs","byte_start":229,"byte_end":237,"line_start":12,"line_end":12,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    my_macro!();","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"have you added the `#[macro_use]` on the module/import?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find macro `my_macro` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros3.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    my_macro!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: have you added the `#[macro_use]` on the module/import?\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\12_options\\options1.rs","byte_start":301,"byte_end":312,"line_start":5,"line_end":5,"column_start":41,"column_end":52,"is_primary":true,"text":[{"text":"fn maybe_ice_cream(hour_of_day: u16) -> Option<u16> {","highlight_start":41,"highlight_end":52}],"label":"expected `Option<u16>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\12_options\\options1.rs","byte_start":264,"byte_end":279,"line_start":5,"line_end":5,"column_start":4,"column_end":19,"is_primary":false,"text":[{"text":"fn maybe_ice_cream(hour_of_day: u16) -> Option<u16> {","highlight_start":4,"highlight_end":19}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Option<u16>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options1.rs:5:41\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn maybe_ice_cream(hour_of_day: u16) -> Option<u16> {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Option<u16>`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mOption<u16>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m          found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused macro definition: `my_macro`","code":{"code":"unused_macros","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\21_macros\\macros3.rs","byte_start":121,"byte_end":129,"line_start":4,"line_end":4,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"    macro_rules! my_macro {","highlight_start":18,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused macro definition: `my_macro`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros3.rs:4:18\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    macro_rules! my_macro {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_macros)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\12_options\\options1.rs","byte_start":665,"byte_end":666,"line_start":23,"line_end":23,"column_start":32,"column_end":33,"is_primary":true,"text":[{"text":"        assert_eq!(ice_creams, 5); // Don't change this line.","highlight_start":32,"highlight_end":33}],"label":"expected `Option<u16>`, found integer","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `Option<u16>`\n   found type `{integer}`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"try wrapping the expression in `Some`","code":null,"level":"help","spans":[{"file_name":"exercises\\12_options\\options1.rs","byte_start":665,"byte_end":665,"line_start":23,"line_end":23,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"        assert_eq!(ice_creams, 5); // Don't change this line.","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":"Some(","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\12_options\\options1.rs","byte_start":666,"byte_end":666,"line_start":23,"line_end":23,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"        assert_eq!(ice_creams, 5); // Don't change this line.","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":")","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options1.rs:23:32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(ice_creams, 5); // Don't change this line.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Option<u16>`, found integer\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mOption<u16>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m              found type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m{integer}\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try wrapping the expression in `Some`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        assert_eq!(ice_creams, \u001b[0m\u001b[0m\u001b[38;5;10mSome(\u001b[0m\u001b[0m5\u001b[0m\u001b[0m\u001b[38;5;10m)\u001b[0m\u001b[0m); // Don't change this line.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[38;5;10m+++++\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find macro `my_macro` in this scope","code":null,"level":"error","spans":[{"file_name":"exercises\\21_macros\\macros2.rs","byte_start":16,"byte_end":24,"line_start":2,"line_end":2,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    my_macro!();","highlight_start":5,"highlight_end":13}],"label":"consider moving the definition of `my_macro` before this call","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a macro with the same name exists, but it appears later","code":null,"level":"note","spans":[{"file_name":"exercises\\21_macros\\macros2.rs","byte_start":123,"byte_end":131,"line_start":6,"line_end":6,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"macro_rules! my_macro {","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find macro `my_macro` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros2.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    my_macro!();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mconsider moving the definition of `my_macro` before this call\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: a macro with the same name exists, but it appears later\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros2.rs:6:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! my_macro {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"missing lifetime specifier","code":{"code":"E0106","explanation":"This error indicates that a lifetime is missing from a type. If it is an error\ninside a function signature, the problem may be with failing to adhere to the\nlifetime elision rules (see below).\n\nErroneous code examples:\n\n```compile_fail,E0106\nstruct Foo1 { x: &bool }\n              // ^ expected lifetime parameter\nstruct Foo2<'a> { x: &'a bool } // correct\n\nstruct Bar1 { x: Foo2 }\n              // ^^^^ expected lifetime parameter\nstruct Bar2<'a> { x: Foo2<'a> } // correct\n\nenum Baz1 { A(u8), B(&bool), }\n                  // ^ expected lifetime parameter\nenum Baz2<'a> { A(u8), B(&'a bool), } // correct\n\ntype MyStr1 = &str;\n           // ^ expected lifetime parameter\ntype MyStr2<'a> = &'a str; // correct\n```\n\nLifetime elision is a special, limited kind of inference for lifetimes in\nfunction signatures which allows you to leave out lifetimes in certain cases.\nFor more background on lifetime elision see [the book][book-le].\n\nThe lifetime elision rules require that any function signature with an elided\noutput lifetime must either have:\n\n - exactly one input lifetime\n - or, multiple input lifetimes, but the function must also be a method with a\n   `&self` or `&mut self` receiver\n\nIn the first case, the output lifetime is inferred to be the same as the unique\ninput lifetime. In the second case, the lifetime is instead inferred to be the\nsame as the lifetime on `&self` or `&mut self`.\n\nHere are some examples of elision errors:\n\n```compile_fail,E0106\n// error, no input lifetimes\nfn foo() -> &str { }\n\n// error, `x` and `y` have distinct lifetimes inferred\nfn bar(x: &str, y: &str) -> &str { }\n\n// error, `y`'s lifetime is inferred to be distinct from `x`'s\nfn baz<'a>(x: &'a str, y: &str) -> &str { }\n```\n\n[book-le]: https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-elision\n"},"level":"error","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes3.rs","byte_start":137,"byte_end":138,"line_start":5,"line_end":5,"column_start":13,"column_end":14,"is_primary":true,"text":[{"text":"    author: &str,","highlight_start":13,"highlight_end":14}],"label":"expected named lifetime parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider introducing a named lifetime parameter","code":null,"level":"help","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes3.rs","byte_start":122,"byte_end":122,"line_start":4,"line_end":4,"column_start":12,"column_end":12,"is_primary":true,"text":[{"text":"struct Book {","highlight_start":12,"highlight_end":12}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes3.rs","byte_start":138,"byte_end":138,"line_start":5,"line_end":5,"column_start":14,"column_end":14,"is_primary":true,"text":[{"text":"    author: &str,","highlight_start":14,"highlight_end":14}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0106]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: missing lifetime specifier\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\16_lifetimes\\lifetimes3.rs:5:13\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    author: &str,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected named lifetime parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider introducing a named lifetime parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mstruct Book\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    author: &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0mstr,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"missing lifetime specifier","code":{"code":"E0106","explanation":"This error indicates that a lifetime is missing from a type. If it is an error\ninside a function signature, the problem may be with failing to adhere to the\nlifetime elision rules (see below).\n\nErroneous code examples:\n\n```compile_fail,E0106\nstruct Foo1 { x: &bool }\n              // ^ expected lifetime parameter\nstruct Foo2<'a> { x: &'a bool } // correct\n\nstruct Bar1 { x: Foo2 }\n              // ^^^^ expected lifetime parameter\nstruct Bar2<'a> { x: Foo2<'a> } // correct\n\nenum Baz1 { A(u8), B(&bool), }\n                  // ^ expected lifetime parameter\nenum Baz2<'a> { A(u8), B(&'a bool), } // correct\n\ntype MyStr1 = &str;\n           // ^ expected lifetime parameter\ntype MyStr2<'a> = &'a str; // correct\n```\n\nLifetime elision is a special, limited kind of inference for lifetimes in\nfunction signatures which allows you to leave out lifetimes in certain cases.\nFor more background on lifetime elision see [the book][book-le].\n\nThe lifetime elision rules require that any function signature with an elided\noutput lifetime must either have:\n\n - exactly one input lifetime\n - or, multiple input lifetimes, but the function must also be a method with a\n   `&self` or `&mut self` receiver\n\nIn the first case, the output lifetime is inferred to be the same as the unique\ninput lifetime. In the second case, the lifetime is instead inferred to be the\nsame as the lifetime on `&self` or `&mut self`.\n\nHere are some examples of elision errors:\n\n```compile_fail,E0106\n// error, no input lifetimes\nfn foo() -> &str { }\n\n// error, `x` and `y` have distinct lifetimes inferred\nfn bar(x: &str, y: &str) -> &str { }\n\n// error, `y`'s lifetime is inferred to be distinct from `x`'s\nfn baz<'a>(x: &'a str, y: &str) -> &str { }\n```\n\n[book-le]: https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-elision\n"},"level":"error","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes3.rs","byte_start":154,"byte_end":155,"line_start":6,"line_end":6,"column_start":12,"column_end":13,"is_primary":true,"text":[{"text":"    title: &str,","highlight_start":12,"highlight_end":13}],"label":"expected named lifetime parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider introducing a named lifetime parameter","code":null,"level":"help","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes3.rs","byte_start":122,"byte_end":122,"line_start":4,"line_end":4,"column_start":12,"column_end":12,"is_primary":true,"text":[{"text":"struct Book {","highlight_start":12,"highlight_end":12}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes3.rs","byte_start":155,"byte_end":155,"line_start":6,"line_end":6,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"    title: &str,","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0106]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: missing lifetime specifier\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\16_lifetimes\\lifetimes3.rs:6:12\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    title: &str,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected named lifetime parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider introducing a named lifetime parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mstruct Book\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     author: &str,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    title: &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0mstr,\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused macro definition: `my_macro`","code":{"code":"unused_macros","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\21_macros\\macros2.rs","byte_start":123,"byte_end":131,"line_start":6,"line_end":6,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"macro_rules! my_macro {","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused macro definition: `my_macro`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros2.rs:6:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! my_macro {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_macros)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0106`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0106`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\07_structs\\structs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstructs1_sol-14ed2e83e27285a6.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables6_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\01_variables\\variables6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvariables6_sol-3e3872551c4db5cb.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\08_enums\\enums3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libenums3_sol-f89d8b7844ed8a51.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":27,"byte_end":31,"line_start":1,"line_end":1,"column_start":28,"column_end":32,"is_primary":true,"text":[{"text":"fn trim_me(input: &str) -> &str {","highlight_start":28,"highlight_end":32}],"label":"expected `&str`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":3,"byte_end":10,"line_start":1,"line_end":1,"column_start":4,"column_end":11,"is_primary":false,"text":[{"text":"fn trim_me(input: &str) -> &str {","highlight_start":4,"highlight_end":11}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider returning the local binding `input`","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":33,"byte_end":38,"line_start":1,"line_end":2,"column_start":34,"column_end":5,"is_primary":true,"text":[{"text":"fn trim_me(input: &str) -> &str {","highlight_start":34,"highlight_end":34},{"text":"    // TODO: Remove whitespace from both ends of a string.","highlight_start":1,"highlight_end":5}],"label":null,"suggested_replacement":"\n    input\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings3.rs:1:28\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn trim_me(input: &str) -> &str {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&str`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider returning the local binding `input`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m fn trim_me(input: &str) -> &str {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10minput\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":126,"byte_end":132,"line_start":5,"line_end":5,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"fn compose_me(input: &str) -> String {","highlight_start":31,"highlight_end":37}],"label":"expected `String`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":99,"byte_end":109,"line_start":5,"line_end":5,"column_start":4,"column_end":14,"is_primary":false,"text":[{"text":"fn compose_me(input: &str) -> String {","highlight_start":4,"highlight_end":14}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings3.rs:5:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn compose_me(input: &str) -> String {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `String`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":246,"byte_end":252,"line_start":9,"line_end":9,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"fn replace_me(input: &str) -> String {","highlight_start":31,"highlight_end":37}],"label":"expected `String`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings3.rs","byte_start":219,"byte_end":229,"line_start":9,"line_end":9,"column_start":4,"column_end":14,"is_primary":false,"text":[{"text":"fn replace_me(input: &str) -> String {","highlight_start":4,"highlight_end":14}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings3.rs:9:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn replace_me(input: &str) -> String {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `String`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings2.rs","byte_start":299,"byte_end":303,"line_start":9,"line_end":9,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"    if is_a_color_word(word) {","highlight_start":24,"highlight_end":28}],"label":"expected `&str`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings2.rs","byte_start":283,"byte_end":298,"line_start":9,"line_end":9,"column_start":8,"column_end":23,"is_primary":false,"text":[{"text":"    if is_a_color_word(word) {","highlight_start":8,"highlight_end":23}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings2.rs","byte_start":106,"byte_end":119,"line_start":2,"line_end":2,"column_start":20,"column_end":33,"is_primary":false,"text":[{"text":"fn is_a_color_word(attempt: &str) -> bool {","highlight_start":20,"highlight_end":33}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings2.rs","byte_start":90,"byte_end":105,"line_start":2,"line_end":2,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn is_a_color_word(attempt: &str) -> bool {","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings2.rs","byte_start":299,"byte_end":299,"line_start":9,"line_end":9,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"    if is_a_color_word(word) {","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings2.rs:9:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if is_a_color_word(word) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&str`, found `String`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14marguments to this function are incorrect\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings2.rs:2:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn is_a_color_word(attempt: &str) -> bool {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider borrowing here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    if is_a_color_word(\u001b[0m\u001b[0m\u001b[38;5;10m&\u001b[0m\u001b[0mword) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libiterators3_sol-869baade9b4aba2e.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `append_bar`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits1.rs","byte_start":163,"byte_end":188,"line_start":7,"line_end":7,"column_start":1,"column_end":26,"is_primary":true,"text":[{"text":"impl AppendBar for String {","highlight_start":1,"highlight_end":26}],"label":"missing `append_bar` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\15_traits\\traits1.rs","byte_start":131,"byte_end":159,"line_start":4,"line_end":4,"column_start":5,"column_end":33,"is_primary":false,"text":[{"text":"    fn append_bar(self) -> Self;","highlight_start":5,"highlight_end":33}],"label":"`append_bar` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn append_bar(self) -> Self { todo!() }`","code":null,"level":"help","spans":[{"file_name":"exercises\\15_traits\\traits1.rs","byte_start":249,"byte_end":249,"line_start":9,"line_end":9,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn append_bar(self) -> Self { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: not all trait items implemented, missing: `append_bar`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits1.rs:7:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn append_bar(self) -> Self;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`append_bar` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl AppendBar for String {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `append_bar` in implementation\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\07_structs\\structs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstructs1_sol-31755543068c0b3b.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0046`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0046`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find function `call_me` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\02_functions\\functions1.rs","byte_start":105,"byte_end":112,"line_start":4,"line_end":4,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    call_me(); // Don't change this line","highlight_start":5,"highlight_end":12}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find function `call_me` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions1.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    call_me(); // Don't change this line\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant named `Resize` found for enum `Message`","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":274,"byte_end":280,"line_start":20,"line_end":20,"column_start":18,"column_end":24,"is_primary":true,"text":[{"text":"        Message::Resize {","highlight_start":18,"highlight_end":24}],"label":"variant not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":76,"byte_end":88,"line_start":8,"line_end":8,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant `Resize` not found here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant named `Resize` found for enum `Message`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums2.rs:20:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant `Resize` not found here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Message::Resize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29820,"line_start":875,"line_end":875,"column_start":9,"column_end":56,"is_primary":true,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":56}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\20_threads\\threads2.rs","byte_start":969,"byte_end":1003,"line_start":33,"line_end":33,"column_start":5,"column_end":39,"is_primary":false,"text":[{"text":"    println!(\"Jobs done: {}\", todo!());","highlight_start":5,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"println!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4285,"byte_end":4305,"line_start":138,"line_end":138,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! println {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::format_args_nl!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":35657,"byte_end":35684,"line_start":1017,"line_end":1017,"column_start":5,"column_end":32,"is_primary":false,"text":[{"text":"    macro_rules! format_args_nl {","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"desugaring of format string literal","def_site_span":{"file_name":"exercises\\20_threads\\threads2.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29820,"line_start":875,"line_end":875,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":56}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\20_threads\\threads2.rs","byte_start":995,"byte_end":1002,"line_start":33,"line_end":33,"column_start":31,"column_end":38,"is_primary":false,"text":[{"text":"    println!(\"Jobs done: {}\", todo!());","highlight_start":31,"highlight_end":38}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29733,"byte_end":29750,"line_start":873,"line_end":873,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\20_threads\\threads2.rs:33:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"Jobs done: {}\", todo!());\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14many code following this expression is unreachable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot assign to data in an `Arc`","code":{"code":"E0594","explanation":"A non-mutable value was assigned a value.\n\nErroneous code example:\n\n```compile_fail,E0594\nstruct SolarSystem {\n    earth: i32,\n}\n\nlet ss = SolarSystem { earth: 3 };\nss.earth = 2; // error!\n```\n\nTo fix this error, declare `ss` as mutable by using the `mut` keyword:\n\n```\nstruct SolarSystem {\n    earth: i32,\n}\n\nlet mut ss = SolarSystem { earth: 3 }; // declaring `ss` as mutable\nss.earth = 2; // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\20_threads\\threads2.rs","byte_start":723,"byte_end":751,"line_start":22,"line_end":22,"column_start":13,"column_end":41,"is_primary":true,"text":[{"text":"            status_shared.jobs_done += 1;","highlight_start":13,"highlight_end":41}],"label":"cannot assign","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"trait `DerefMut` is required to modify through a dereference, but it is not implemented for `Arc<JobStatus>`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0594]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot assign to data in an `Arc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\20_threads\\threads2.rs:22:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            status_shared.jobs_done += 1;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot assign\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: trait `DerefMut` is required to modify through a dereference, but it is not implemented for `Arc<JobStatus>`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables5.rs","byte_start":218,"byte_end":219,"line_start":6,"line_end":6,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"    number = 3;","highlight_start":14,"highlight_end":15}],"label":"expected `&str`, found integer","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\01_variables\\variables5.rs","byte_start":29,"byte_end":40,"line_start":2,"line_end":2,"column_start":18,"column_end":29,"is_primary":false,"text":[{"text":"    let number = \"T-H-R-E-E\"; // Don't change this line","highlight_start":18,"highlight_end":29}],"label":"expected due to this value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables5.rs:6:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let number = \"T-H-R-E-E\"; // Don't change this line\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected due to this value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    number = 3;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&str`, found integer\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Move` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":358,"byte_end":362,"line_start":24,"line_end":24,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"        Message::Move(Point { x: 10, y: 15 }),","highlight_start":18,"highlight_end":22}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":76,"byte_end":88,"line_start":8,"line_end":8,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Move` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Move` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums2.rs:24:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Move` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Message::Move(Point { x: 10, y: 15 }),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Echo` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":405,"byte_end":409,"line_start":25,"line_end":25,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"        Message::Echo(String::from(\"hello world\")),","highlight_start":18,"highlight_end":22}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":76,"byte_end":88,"line_start":8,"line_end":8,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Echo` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Echo` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums2.rs:25:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Echo` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Message::Echo(String::from(\"hello world\")),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0594`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0594`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `ChangeColor` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":457,"byte_end":468,"line_start":26,"line_end":26,"column_start":18,"column_end":29,"is_primary":true,"text":[{"text":"        Message::ChangeColor(200, 255, 255),","highlight_start":18,"highlight_end":29}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":76,"byte_end":88,"line_start":8,"line_end":8,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `ChangeColor` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `ChangeColor` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums2.rs:26:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `ChangeColor` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Message::ChangeColor(200, 255, 255),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot add `{integer}` to `&str`","code":{"code":"E0369","explanation":"A binary operation was attempted on a type which doesn't support it.\n\nErroneous code example:\n\n```compile_fail,E0369\nlet x = 12f32; // error: binary operation `<<` cannot be applied to\n               //        type `f32`\n\nx << 2;\n```\n\nTo fix this error, please check that this type implements this binary\noperation. Example:\n\n```\nlet x = 12u32; // the `u32` type does implement it:\n               // https://doc.rust-lang.org/stable/std/ops/trait.Shl.html\n\nx << 2; // ok!\n```\n\nIt is also possible to overload most operators for your own type by\nimplementing traits from `std::ops`.\n\nString concatenation appends the string on the right to the string on the\nleft and may require reallocation. This requires ownership of the string\non the left. If something should be added to a string literal, move the\nliteral to the heap by allocating it with `to_owned()` like in\n`\"Your text\".to_owned()`.\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables5.rs","byte_start":260,"byte_end":266,"line_start":7,"line_end":7,"column_start":40,"column_end":46,"is_primary":false,"text":[{"text":"    println!(\"Number plus two is: {}\", number + 2);","highlight_start":40,"highlight_end":46}],"label":"&str","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\01_variables\\variables5.rs","byte_start":269,"byte_end":270,"line_start":7,"line_end":7,"column_start":49,"column_end":50,"is_primary":false,"text":[{"text":"    println!(\"Number plus two is: {}\", number + 2);","highlight_start":49,"highlight_end":50}],"label":"{integer}","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\01_variables\\variables5.rs","byte_start":267,"byte_end":268,"line_start":7,"line_end":7,"column_start":47,"column_end":48,"is_primary":true,"text":[{"text":"    println!(\"Number plus two is: {}\", number + 2);","highlight_start":47,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0369]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot add `{integer}` to `&str`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables5.rs:7:47\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"Number plus two is: {}\", number + 2);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m{integer}\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m&str\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0369.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0308, E0369.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Quit` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":502,"byte_end":506,"line_start":27,"line_end":27,"column_start":18,"column_end":22,"is_primary":true,"text":[{"text":"        Message::Quit,","highlight_start":18,"highlight_end":22}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums2.rs","byte_start":76,"byte_end":88,"line_start":8,"line_end":8,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Quit` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Quit` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums2.rs:27:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Quit` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Message::Quit,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\22_clippy\\clippy2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libclippy2_sol-d222a7e075f73682.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\08_enums\\enums3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libenums3_sol-715cf6d47e50c124.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\04_primitive_types\\primitive_types2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types2_sol-ded28a61e42e5fad.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\quizzes\\quiz3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libquiz3_sol-a83cb377d662e024.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0599`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings2.rs","byte_start":299,"byte_end":303,"line_start":9,"line_end":9,"column_start":24,"column_end":28,"is_primary":true,"text":[{"text":"    if is_a_color_word(word) {","highlight_start":24,"highlight_end":28}],"label":"expected `&str`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings2.rs","byte_start":283,"byte_end":298,"line_start":9,"line_end":9,"column_start":8,"column_end":23,"is_primary":false,"text":[{"text":"    if is_a_color_word(word) {","highlight_start":8,"highlight_end":23}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\09_strings\\strings2.rs","byte_start":106,"byte_end":119,"line_start":2,"line_end":2,"column_start":20,"column_end":33,"is_primary":false,"text":[{"text":"fn is_a_color_word(attempt: &str) -> bool {","highlight_start":20,"highlight_end":33}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings2.rs","byte_start":90,"byte_end":105,"line_start":2,"line_end":2,"column_start":4,"column_end":19,"is_primary":true,"text":[{"text":"fn is_a_color_word(attempt: &str) -> bool {","highlight_start":4,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider borrowing here","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings2.rs","byte_start":299,"byte_end":299,"line_start":9,"line_end":9,"column_start":24,"column_end":24,"is_primary":true,"text":[{"text":"    if is_a_color_word(word) {","highlight_start":24,"highlight_end":24}],"label":null,"suggested_replacement":"&","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings2.rs:9:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if is_a_color_word(word) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&str`, found `String`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14marguments to this function are incorrect\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings2.rs:2:4\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn is_a_color_word(attempt: &str) -> bool {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider borrowing here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    if is_a_color_word(\u001b[0m\u001b[0m\u001b[38;5;10m&\u001b[0m\u001b[0mword) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\02_functions\\functions1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfunctions1_sol-57b4d4ae1cfa4c3a.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\05_vecs\\vecs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvecs2_sol-ac7ac32823d080b0.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"box1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\box1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"recursive type `List` has infinite size","code":{"code":"E0072","explanation":"A recursive type has infinite size because it doesn't have an indirection.\n\nErroneous code example:\n\n```compile_fail,E0072\nstruct ListNode {\n    head: u8,\n    tail: Option<ListNode>, // error: no indirection here so impossible to\n                            //        compute the type's size\n}\n```\n\nWhen defining a recursive struct or enum, any use of the type being defined\nfrom inside the definition must occur behind a pointer (like `Box`, `&` or\n`Rc`). This is because structs and enums must have a well-defined size, and\nwithout the pointer, the size of the type would need to be unbounded.\n\nIn the example, the type cannot have a well-defined size, because it needs to be\narbitrarily large (since we would be able to nest `ListNode`s to any depth).\nSpecifically,\n\n```plain\nsize of `ListNode` = 1 byte for `head`\n                   + 1 byte for the discriminant of the `Option`\n                   + size of `ListNode`\n```\n\nOne way to fix this is by wrapping `ListNode` in a `Box`, like so:\n\n```\nstruct ListNode {\n    head: u8,\n    tail: Option<Box<ListNode>>,\n}\n```\n\nThis works because `Box` is a pointer, so its size is well-known.\n"},"level":"error","spans":[{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":765,"byte_end":769,"line_start":15,"line_end":15,"column_start":15,"column_end":19,"is_primary":false,"text":[{"text":"    Cons(i32, List),","highlight_start":15,"highlight_end":19}],"label":"recursive without indirection","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":739,"byte_end":748,"line_start":14,"line_end":14,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"enum List {","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"insert some indirection (e.g., a `Box`, `Rc`, or `&`) to break the cycle","code":null,"level":"help","spans":[{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":765,"byte_end":765,"line_start":15,"line_end":15,"column_start":15,"column_end":15,"is_primary":true,"text":[{"text":"    Cons(i32, List),","highlight_start":15,"highlight_end":15}],"label":null,"suggested_replacement":"Box<","suggestion_applicability":"HasPlaceholders","expansion":null},{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":769,"byte_end":769,"line_start":15,"line_end":15,"column_start":19,"column_end":19,"is_primary":true,"text":[{"text":"    Cons(i32, List),","highlight_start":19,"highlight_end":19}],"label":null,"suggested_replacement":">","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0072]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: recursive type `List` has infinite size\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\box1.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum List {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Cons(i32, List),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mrecursive without indirection\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: insert some indirection (e.g., a `Box`, `Rc`, or `&`) to break the cycle\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    Cons(i32, \u001b[0m\u001b[0m\u001b[38;5;10mBox<\u001b[0m\u001b[0mList\u001b[0m\u001b[0m\u001b[38;5;10m>\u001b[0m\u001b[0m),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected `;`, found `(`","code":null,"level":"error","spans":[{"file_name":"exercises\\21_macros\\macros4.rs","byte_start":164,"byte_end":164,"line_start":6,"line_end":6,"column_start":6,"column_end":6,"is_primary":false,"text":[{"text":"    }","highlight_start":6,"highlight_end":6}],"label":"expected `;`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\21_macros\\macros4.rs","byte_start":169,"byte_end":170,"line_start":7,"line_end":7,"column_start":5,"column_end":6,"is_primary":true,"text":[{"text":"    ($val:expr) => {","highlight_start":5,"highlight_end":6}],"label":"unexpected token","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected `;`, found `(`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros4.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected `;`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ($val:expr) => {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munexpected token\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"box1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\box1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cycle detected when computing drop-check constraints for `List`","code":{"code":"E0391","explanation":"A type dependency cycle has been encountered.\n\nErroneous code example:\n\n```compile_fail,E0391\ntrait FirstTrait : SecondTrait {\n\n}\n\ntrait SecondTrait : FirstTrait {\n\n}\n```\n\nThe previous example contains a circular dependency between two traits:\n`FirstTrait` depends on `SecondTrait` which itself depends on `FirstTrait`.\n\nSee https://rustc-dev-guide.rust-lang.org/overview.html#queries and\nhttps://rustc-dev-guide.rust-lang.org/query.html for more information.\n"},"level":"error","spans":[{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":739,"byte_end":748,"line_start":14,"line_end":14,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"enum List {","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"...which immediately requires computing drop-check constraints for `List` again","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"cycle used when computing dropck types for `List`","code":null,"level":"note","spans":[{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"see https://rustc-dev-guide.rust-lang.org/overview.html#queries and https://rustc-dev-guide.rust-lang.org/query.html for more information","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0391]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cycle detected when computing drop-check constraints for `List`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\box1.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum List {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: ...which immediately requires computing drop-check constraints for `List` again\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: cycle used when computing dropck types for `List`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see https://rustc-dev-guide.rust-lang.org/overview.html#queries and https://rustc-dev-guide.rust-lang.org/query.html for more information\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"box1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\box1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cycle detected when computing when `List` needs drop","code":{"code":"E0391","explanation":"A type dependency cycle has been encountered.\n\nErroneous code example:\n\n```compile_fail,E0391\ntrait FirstTrait : SecondTrait {\n\n}\n\ntrait SecondTrait : FirstTrait {\n\n}\n```\n\nThe previous example contains a circular dependency between two traits:\n`FirstTrait` depends on `SecondTrait` which itself depends on `FirstTrait`.\n\nSee https://rustc-dev-guide.rust-lang.org/overview.html#queries and\nhttps://rustc-dev-guide.rust-lang.org/query.html for more information.\n"},"level":"error","spans":[{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":739,"byte_end":748,"line_start":14,"line_end":14,"column_start":1,"column_end":10,"is_primary":true,"text":[{"text":"enum List {","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"...which immediately requires computing when `List` needs drop again","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"cycle used when computing whether `List` needs drop","code":null,"level":"note","spans":[{"file_name":"exercises\\19_smart_pointers\\box1.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":true,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"see https://rustc-dev-guide.rust-lang.org/overview.html#queries and https://rustc-dev-guide.rust-lang.org/query.html for more information","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0391]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cycle detected when computing when `List` needs drop\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\box1.rs:14:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum List {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: ...which immediately requires computing when `List` needs drop again\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: cycle used when computing whether `List` needs drop\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: see https://rustc-dev-guide.rust-lang.org/overview.html#queries and https://rustc-dev-guide.rust-lang.org/query.html for more information\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\02_functions\\functions3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfunctions3_sol-90d57fc83a0a3180.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"box1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\box1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0072, E0391.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0072, E0391.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"box1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\box1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0072`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0072`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\05_vecs\\vecs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvecs2_sol-7103184247fe6d20.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no field `name` on type `fn() {tests::your_order}`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs2.rs","byte_start":763,"byte_end":767,"line_start":39,"line_end":39,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"        assert_eq!(your_order.name, \"Hacker in Rust\");","highlight_start":31,"highlight_end":35}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `name` on type `fn() {tests::your_order}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs2.rs:39:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m39\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(your_order.name, \"Hacker in Rust\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no field `year` on type `fn() {tests::your_order}`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs2.rs","byte_start":818,"byte_end":822,"line_start":40,"line_end":40,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"        assert_eq!(your_order.year, order_template.year);","highlight_start":31,"highlight_end":35}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `year` on type `fn() {tests::your_order}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs2.rs:40:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(your_order.year, order_template.year);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no field `made_by_phone` on type `fn() {tests::your_order}`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs2.rs","byte_start":876,"byte_end":889,"line_start":41,"line_end":41,"column_start":31,"column_end":44,"is_primary":true,"text":[{"text":"        assert_eq!(your_order.made_by_phone, order_template.made_by_phone);","highlight_start":31,"highlight_end":44}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `made_by_phone` on type `fn() {tests::your_order}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs2.rs:41:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m41\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(your_order.made_by_phone, order_template.made_by_phone);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no field `made_by_mobile` on type `fn() {tests::your_order}`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs2.rs","byte_start":952,"byte_end":966,"line_start":42,"line_end":42,"column_start":31,"column_end":45,"is_primary":true,"text":[{"text":"        assert_eq!(your_order.made_by_mobile, order_template.made_by_mobile);","highlight_start":31,"highlight_end":45}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `made_by_mobile` on type `fn() {tests::your_order}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs2.rs:42:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(your_order.made_by_mobile, order_template.made_by_mobile);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no field `made_by_email` on type `fn() {tests::your_order}`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs2.rs","byte_start":1030,"byte_end":1043,"line_start":43,"line_end":43,"column_start":31,"column_end":44,"is_primary":true,"text":[{"text":"        assert_eq!(your_order.made_by_email, order_template.made_by_email);","highlight_start":31,"highlight_end":44}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `made_by_email` on type `fn() {tests::your_order}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs2.rs:43:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(your_order.made_by_email, order_template.made_by_email);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no field `item_number` on type `fn() {tests::your_order}`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs2.rs","byte_start":1106,"byte_end":1117,"line_start":44,"line_end":44,"column_start":31,"column_end":42,"is_primary":true,"text":[{"text":"        assert_eq!(your_order.item_number, order_template.item_number);","highlight_start":31,"highlight_end":42}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `item_number` on type `fn() {tests::your_order}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs2.rs:44:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(your_order.item_number, order_template.item_number);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no field `count` on type `fn() {tests::your_order}`","code":{"code":"E0609","explanation":"Attempted to access a nonexistent field in a struct.\n\nErroneous code example:\n\n```compile_fail,E0609\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.foo); // error: no field `foo` on type `StructWithFields`\n```\n\nTo fix this error, check that you didn't misspell the field's name or that the\nfield actually exists. Example:\n\n```\nstruct StructWithFields {\n    x: u32,\n}\n\nlet s = StructWithFields { x: 0 };\nprintln!(\"{}\", s.x); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\07_structs\\structs2.rs","byte_start":1178,"byte_end":1183,"line_start":45,"line_end":45,"column_start":31,"column_end":36,"is_primary":true,"text":[{"text":"        assert_eq!(your_order.count, 1);","highlight_start":31,"highlight_end":36}],"label":"unknown field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0609]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no field `count` on type `fn() {tests::your_order}`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\07_structs\\structs2.rs:45:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(your_order.count, 1);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9munknown field\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `a`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":367,"byte_end":368,"line_start":13,"line_end":13,"column_start":11,"column_end":12,"is_primary":true,"text":[{"text":"fn divide(a: i64, b: i64) -> Result<i64, DivisionError> {","highlight_start":11,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":367,"byte_end":368,"line_start":13,"line_end":13,"column_start":11,"column_end":12,"is_primary":true,"text":[{"text":"fn divide(a: i64, b: i64) -> Result<i64, DivisionError> {","highlight_start":11,"highlight_end":12}],"label":null,"suggested_replacement":"_a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `a`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators3.rs:13:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn divide(a: i64, b: i64) -> Result<i64, DivisionError> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_a`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `b`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":375,"byte_end":376,"line_start":13,"line_end":13,"column_start":19,"column_end":20,"is_primary":true,"text":[{"text":"fn divide(a: i64, b: i64) -> Result<i64, DivisionError> {","highlight_start":19,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":375,"byte_end":376,"line_start":13,"line_end":13,"column_start":19,"column_end":20,"is_primary":true,"text":[{"text":"fn divide(a: i64, b: i64) -> Result<i64, DivisionError> {","highlight_start":19,"highlight_end":20}],"label":null,"suggested_replacement":"_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `b`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators3.rs:13:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn divide(a: i64, b: i64) -> Result<i64, DivisionError> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_b`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `division_results`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":614,"byte_end":630,"line_start":21,"line_end":21,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let division_results = numbers.into_iter().map(|n| divide(n, 27));","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":614,"byte_end":630,"line_start":21,"line_end":21,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let division_results = numbers.into_iter().map(|n| divide(n, 27));","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"_division_results","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `division_results`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators3.rs:21:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let division_results = numbers.into_iter().map(|n| divide(n, 27));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_division_results`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `division_results`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":874,"byte_end":890,"line_start":28,"line_end":28,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let division_results = numbers.into_iter().map(|n| divide(n, 27));","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":874,"byte_end":890,"line_start":28,"line_end":28,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let division_results = numbers.into_iter().map(|n| divide(n, 27));","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"_division_results","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `division_results`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators3.rs:28:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let division_results = numbers.into_iter().map(|n| divide(n, 27));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_division_results`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0609`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0609`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\17_tests\\tests3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtests3_sol-17de06a7f8919605.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\06_move_semantics\\move_semantics1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmove_semantics1_sol-6aee51e8a740bf2d.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"cow1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\19_smart_pointers\\cow1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libcow1_sol-a330a511f1499a3b.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libiterators3-601a1ff3b4d81ba4.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot borrow `vec` as mutable, as it is not declared as mutable","code":{"code":"E0596","explanation":"This error occurs because you tried to mutably borrow a non-mutable variable.\n\nErroneous code example:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics3.rs","byte_start":122,"byte_end":125,"line_start":3,"line_end":3,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    vec.push(88);","highlight_start":5,"highlight_end":8}],"label":"cannot borrow as mutable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider changing this to be mutable","code":null,"level":"help","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics3.rs","byte_start":89,"byte_end":89,"line_start":2,"line_end":2,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"fn fill_vec(vec: Vec<i32>) -> Vec<i32> {","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"mut ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0596]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot borrow `vec` as mutable, as it is not declared as mutable\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics3.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    vec.push(88);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot borrow as mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider changing this to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn fill_vec(\u001b[0m\u001b[0m\u001b[38;5;10mmut \u001b[0m\u001b[0mvec: Vec<i32>) -> Vec<i32> {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0596`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0596`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `SystemTime`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"exercises\\10_modules\\modules3.rs","byte_start":323,"byte_end":333,"line_start":9,"line_end":9,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"    match SystemTime::now().duration_since(UNIX_EPOCH) {","highlight_start":11,"highlight_end":21}],"label":"use of undeclared type `SystemTime`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"exercises\\10_modules\\modules3.rs","byte_start":301,"byte_end":301,"line_start":8,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::time::SystemTime;\n\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `SystemTime`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\10_modules\\modules3.rs:9:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match SystemTime::now().duration_since(UNIX_EPOCH) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `SystemTime`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::time::SystemTime;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `UNIX_EPOCH` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\10_modules\\modules3.rs","byte_start":356,"byte_end":366,"line_start":9,"line_end":9,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"    match SystemTime::now().duration_since(UNIX_EPOCH) {","highlight_start":44,"highlight_end":54}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant","code":null,"level":"help","spans":[{"file_name":"exercises\\10_modules\\modules3.rs","byte_start":301,"byte_end":301,"line_start":8,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::time::UNIX_EPOCH;\n\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `UNIX_EPOCH` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\10_modules\\modules3.rs:9:44\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match SystemTime::now().duration_since(UNIX_EPOCH) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::time::UNIX_EPOCH;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0425, E0433.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0425, E0433.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\12_options\\options3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liboptions3_sol-ca391ba15294ef22.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\07_structs\\structs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstructs1-28b25dede5e0080b.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\01_variables\\variables2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvariables2_sol-ea8555dc9feb2db0.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot borrow `vec` as mutable, as it is not declared as mutable","code":{"code":"E0596","explanation":"This error occurs because you tried to mutably borrow a non-mutable variable.\n\nErroneous code example:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics1.rs","byte_start":115,"byte_end":118,"line_start":5,"line_end":5,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    vec.push(88);","highlight_start":5,"highlight_end":8}],"label":"cannot borrow as mutable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider changing this to be mutable","code":null,"level":"help","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics1.rs","byte_start":99,"byte_end":99,"line_start":3,"line_end":3,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"    let vec = vec;","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"mut ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0596]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot borrow `vec` as mutable, as it is not declared as mutable\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics1.rs:5:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    vec.push(88);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot borrow as mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider changing this to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let \u001b[0m\u001b[0m\u001b[38;5;10mmut \u001b[0m\u001b[0mvec = vec;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0596`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0596`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\17_tests\\tests2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtests2_sol-0f19861217399fa7.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"intro1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\00_intro\\intro1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libintro1-f71ace10e17727a3.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmove_semantics2-4f9d6e5e35cc79a4.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\22_clippy\\clippy1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libclippy1-a8ab6a41879321eb.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\21_macros\\macros3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmacros3_sol-b6129029b6ed963c.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\04_primitive_types\\primitive_types5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types5_sol-b0398754e8256236.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"missing lifetime specifier","code":{"code":"E0106","explanation":"This error indicates that a lifetime is missing from a type. If it is an error\ninside a function signature, the problem may be with failing to adhere to the\nlifetime elision rules (see below).\n\nErroneous code examples:\n\n```compile_fail,E0106\nstruct Foo1 { x: &bool }\n              // ^ expected lifetime parameter\nstruct Foo2<'a> { x: &'a bool } // correct\n\nstruct Bar1 { x: Foo2 }\n              // ^^^^ expected lifetime parameter\nstruct Bar2<'a> { x: Foo2<'a> } // correct\n\nenum Baz1 { A(u8), B(&bool), }\n                  // ^ expected lifetime parameter\nenum Baz2<'a> { A(u8), B(&'a bool), } // correct\n\ntype MyStr1 = &str;\n           // ^ expected lifetime parameter\ntype MyStr2<'a> = &'a str; // correct\n```\n\nLifetime elision is a special, limited kind of inference for lifetimes in\nfunction signatures which allows you to leave out lifetimes in certain cases.\nFor more background on lifetime elision see [the book][book-le].\n\nThe lifetime elision rules require that any function signature with an elided\noutput lifetime must either have:\n\n - exactly one input lifetime\n - or, multiple input lifetimes, but the function must also be a method with a\n   `&self` or `&mut self` receiver\n\nIn the first case, the output lifetime is inferred to be the same as the unique\ninput lifetime. In the second case, the lifetime is instead inferred to be the\nsame as the lifetime on `&self` or `&mut self`.\n\nHere are some examples of elision errors:\n\n```compile_fail,E0106\n// error, no input lifetimes\nfn foo() -> &str { }\n\n// error, `x` and `y` have distinct lifetimes inferred\nfn bar(x: &str, y: &str) -> &str { }\n\n// error, `y`'s lifetime is inferred to be distinct from `x`'s\nfn baz<'a>(x: &'a str, y: &str) -> &str { }\n```\n\n[book-le]: https://doc.rust-lang.org/book/ch10-03-lifetime-syntax.html#lifetime-elision\n"},"level":"error","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":406,"byte_end":407,"line_start":7,"line_end":7,"column_start":33,"column_end":34,"is_primary":true,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":33,"highlight_end":34}],"label":"expected named lifetime parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":388,"byte_end":392,"line_start":7,"line_end":7,"column_start":15,"column_end":19,"is_primary":false,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":15,"highlight_end":19}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":397,"byte_end":401,"line_start":7,"line_end":7,"column_start":24,"column_end":28,"is_primary":false,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":24,"highlight_end":28}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `x` or `y`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"consider introducing a named lifetime parameter","code":null,"level":"help","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":384,"byte_end":384,"line_start":7,"line_end":7,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":"<'a>","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":407,"byte_end":407,"line_start":7,"line_end":7,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":389,"byte_end":389,"line_start":7,"line_end":7,"column_start":16,"column_end":16,"is_primary":true,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":16,"highlight_end":16}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes1.rs","byte_start":398,"byte_end":398,"line_start":7,"line_end":7,"column_start":25,"column_end":25,"is_primary":true,"text":[{"text":"fn longest(x: &str, y: &str) -> &str {","highlight_start":25,"highlight_end":25}],"label":null,"suggested_replacement":"'a ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0106]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: missing lifetime specifier\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\16_lifetimes\\lifetimes1.rs:7:33\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn longest(x: &str, y: &str) -> &str {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected named lifetime parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: this function's return type contains a borrowed value, but the signature does not say whether it is borrowed from `x` or `y`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider introducing a named lifetime parameter\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn longest\u001b[0m\u001b[0m\u001b[38;5;10m<'a>\u001b[0m\u001b[0m(x: &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0mstr, y: &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0mstr) -> &\u001b[0m\u001b[0m\u001b[38;5;10m'a \u001b[0m\u001b[0mstr {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m++++\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[38;5;10m++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"use of moved value: `tx`","code":{"code":"E0382","explanation":"A variable was used after its contents have been moved elsewhere.\n\nErroneous code example:\n\n```compile_fail,E0382\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = MyStruct{ s: 5u32 };\n    let y = x;\n    x.s = 6;\n    println!(\"{}\", x.s);\n}\n```\n\nSince `MyStruct` is a type that is not marked `Copy`, the data gets moved out\nof `x` when we set `y`. This is fundamental to Rust's ownership system: outside\nof workarounds like `Rc`, a value cannot be owned by more than one variable.\n\nSometimes we don't need to move the value. Using a reference, we can let another\nfunction borrow the value without changing its ownership. In the example below,\nwe don't actually have to move our string to `calculate_length`, we can give it\na reference to it with `&` instead.\n\n```\nfn main() {\n    let s1 = String::from(\"hello\");\n\n    let len = calculate_length(&s1);\n\n    println!(\"The length of '{}' is {}.\", s1, len);\n}\n\nfn calculate_length(s: &String) -> usize {\n    s.len()\n}\n```\n\nA mutable reference can be created with `&mut`.\n\nSometimes we don't want a reference, but a duplicate. All types marked `Clone`\ncan be duplicated by calling `.clone()`. Subsequent changes to a clone do not\naffect the original variable.\n\nMost types in the standard library are marked `Clone`. The example below\ndemonstrates using `clone()` on a string. `s1` is first set to \"many\", and then\ncopied to `s2`. Then the first character of `s1` is removed, without affecting\n`s2`. \"any many\" is printed to the console.\n\n```\nfn main() {\n    let mut s1 = String::from(\"many\");\n    let s2 = s1.clone();\n    s1.remove(0);\n    println!(\"{} {}\", s1, s2);\n}\n```\n\nIf we control the definition of a type, we can implement `Clone` on it ourselves\nwith `#[derive(Clone)]`.\n\nSome types have no ownership semantics at all and are trivial to duplicate. An\nexample is `i32` and the other number types. We don't have to call `.clone()` to\nclone them, because they are marked `Copy` in addition to `Clone`. Implicit\ncloning is more convenient in this case. We can mark our own types `Copy` if\nall their members also are marked `Copy`.\n\nIn the example below, we implement a `Point` type. Because it only stores two\nintegers, we opt-out of ownership semantics with `Copy`. Then we can\n`let p2 = p1` without `p1` being moved.\n\n```\n#[derive(Copy, Clone)]\nstruct Point { x: i32, y: i32 }\n\nfn main() {\n    let mut p1 = Point{ x: -1, y: 2 };\n    let p2 = p1;\n    p1.x = 1;\n    println!(\"p1: {}, {}\", p1.x, p1.y);\n    println!(\"p2: {}, {}\", p2.x, p2.y);\n}\n```\n\nAlternatively, if we don't control the struct's definition, or mutable shared\nownership is truly required, we can use `Rc` and `RefCell`:\n\n```\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = Rc::new(RefCell::new(MyStruct{ s: 5u32 }));\n    let y = x.clone();\n    x.borrow_mut().s = 6;\n    println!(\"{}\", x.borrow().s);\n}\n```\n\nWith this approach, x and y share ownership of the data via the `Rc` (reference\ncount type). `RefCell` essentially performs runtime borrow checking: ensuring\nthat at most one writer or multiple readers can access the data at any one time.\n\nIf you wish to learn more about ownership in Rust, start with the\n[Understanding Ownership][understanding-ownership] chapter in the Book.\n\n[understanding-ownership]: https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\n"},"level":"error","spans":[{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":505,"byte_end":528,"line_start":21,"line_end":21,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        for val in q.first_half {","highlight_start":9,"highlight_end":32}],"label":"inside of this loop","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":505,"byte_end":671,"line_start":21,"line_end":25,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        for val in q.first_half {","highlight_start":9,"highlight_end":34},{"text":"            println!(\"Sending {val:?}\");","highlight_start":1,"highlight_end":41},{"text":"            tx.send(val).unwrap();","highlight_start":1,"highlight_end":35},{"text":"            thread::sleep(Duration::from_millis(250));","highlight_start":1,"highlight_end":55},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":487,"byte_end":494,"line_start":20,"line_end":20,"column_start":19,"column_end":26,"is_primary":false,"text":[{"text":"    thread::spawn(move || {","highlight_start":19,"highlight_end":26}],"label":"value moved into closure here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":584,"byte_end":586,"line_start":23,"line_end":23,"column_start":13,"column_end":15,"is_primary":false,"text":[{"text":"            tx.send(val).unwrap();","highlight_start":13,"highlight_end":15}],"label":"variable moved due to use in closure","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":797,"byte_end":799,"line_start":31,"line_end":31,"column_start":13,"column_end":15,"is_primary":false,"text":[{"text":"            tx.send(val).unwrap();","highlight_start":13,"highlight_end":15}],"label":"use occurs due to use in closure","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":699,"byte_end":706,"line_start":28,"line_end":28,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"    thread::spawn(move || {","highlight_start":19,"highlight_end":26}],"label":"value used here after move","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":302,"byte_end":304,"line_start":17,"line_end":17,"column_start":22,"column_end":24,"is_primary":false,"text":[{"text":"fn send_tx(q: Queue, tx: mpsc::Sender<u32>) {","highlight_start":22,"highlight_end":24}],"label":"move occurs because `tx` has type `std::sync::mpsc::Sender<u32>`, which does not implement the `Copy` trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider moving the expression out of the loop so it is only moved once","code":null,"level":"help","spans":[{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":505,"byte_end":505,"line_start":21,"line_end":21,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        for val in q.first_half {","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let mut value = tx.send(val);\n        ","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":505,"byte_end":671,"line_start":21,"line_end":25,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        for val in q.first_half {","highlight_start":9,"highlight_end":34},{"text":"            println!(\"Sending {val:?}\");","highlight_start":1,"highlight_end":41},{"text":"            tx.send(val).unwrap();","highlight_start":1,"highlight_end":35},{"text":"            thread::sleep(Duration::from_millis(250));","highlight_start":1,"highlight_end":55},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":584,"byte_end":596,"line_start":23,"line_end":23,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            tx.send(val).unwrap();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"value","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider cloning the value before moving it into the closure","code":null,"level":"help","spans":[{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":473,"byte_end":473,"line_start":20,"line_end":20,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    thread::spawn(move || {","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"let value = tx.clone();\n    ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":584,"byte_end":586,"line_start":23,"line_end":23,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"            tx.send(val).unwrap();","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"value","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0382]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: use of moved value: `tx`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\20_threads\\threads3.rs:28:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn send_tx(q: Queue, tx: mpsc::Sender<u32>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmove occurs because `tx` has type `std::sync::mpsc::Sender<u32>`, which does not implement the `Copy` trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    thread::spawn(move || {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvalue moved into closure here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for val in q.first_half {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14minside of this loop\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            println!(\"Sending {val:?}\");\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tx.send(val).unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariable moved due to use in closure\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    thread::spawn(move || {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvalue used here after move\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tx.send(val).unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14muse occurs due to use in closure\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider moving the expression out of the loop so it is only moved once\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mlet mut value = tx.send(val);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~         \u001b[0m\u001b[0mfor val in q.first_half {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             println!(\"Sending {val:?}\");\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10mvalue\u001b[0m\u001b[0m.unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider cloning the value before moving it into the closure\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mlet value = tx.clone();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~     \u001b[0m\u001b[0mthread::spawn(move || {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         for val in q.first_half {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             println!(\"Sending {val:?}\");\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10mvalue\u001b[0m\u001b[0m.send(val).unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0382`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0382`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0106`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0106`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\13_error_handling\\errors1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors1_sol-888d51bc9f5b0a84.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtests2-621730c2ddc4e523.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\10_modules\\modules1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmodules1_sol-4aae3a878cd6d135.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected end of macro invocation","code":null,"level":"error","spans":[{"file_name":"exercises\\17_tests\\tests2.rs","byte_start":361,"byte_end":373,"line_start":18,"line_end":18,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        assert_eq!();","highlight_start":9,"highlight_end":21}],"label":"missing tokens in macro arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"while trying to match meta-variable `$left:expr`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1324,"byte_end":1334,"line_start":43,"line_end":43,"column_start":6,"column_end":16,"is_primary":true,"text":[{"text":"    ($left:expr, $right:expr $(,)?) => {","highlight_start":6,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected end of macro invocation\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\17_tests\\tests2.rs:18:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing tokens in macro arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: while trying to match meta-variable `$left:expr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs:43:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ($left:expr, $right:expr $(,)?) => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected end of macro invocation","code":null,"level":"error","spans":[{"file_name":"exercises\\17_tests\\tests2.rs","byte_start":383,"byte_end":395,"line_start":19,"line_end":19,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        assert_eq!();","highlight_start":9,"highlight_end":21}],"label":"missing tokens in macro arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"while trying to match meta-variable `$left:expr`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1324,"byte_end":1334,"line_start":43,"line_end":43,"column_start":6,"column_end":16,"is_primary":true,"text":[{"text":"    ($left:expr, $right:expr $(,)?) => {","highlight_start":6,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected end of macro invocation\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\17_tests\\tests2.rs:19:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing tokens in macro arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: while trying to match meta-variable `$left:expr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs:43:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ($left:expr, $right:expr $(,)?) => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected end of macro invocation","code":null,"level":"error","spans":[{"file_name":"exercises\\17_tests\\tests2.rs","byte_start":405,"byte_end":417,"line_start":20,"line_end":20,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        assert_eq!();","highlight_start":9,"highlight_end":21}],"label":"missing tokens in macro arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"while trying to match meta-variable `$left:expr`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1324,"byte_end":1334,"line_start":43,"line_end":43,"column_start":6,"column_end":16,"is_primary":true,"text":[{"text":"    ($left:expr, $right:expr $(,)?) => {","highlight_start":6,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected end of macro invocation\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\17_tests\\tests2.rs:20:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing tokens in macro arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: while trying to match meta-variable `$left:expr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs:43:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ($left:expr, $right:expr $(,)?) => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unexpected end of macro invocation","code":null,"level":"error","spans":[{"file_name":"exercises\\17_tests\\tests2.rs","byte_start":427,"byte_end":439,"line_start":21,"line_end":21,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"        assert_eq!();","highlight_start":9,"highlight_end":21}],"label":"missing tokens in macro arguments","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"while trying to match meta-variable `$left:expr`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1324,"byte_end":1334,"line_start":43,"line_end":43,"column_start":6,"column_end":16,"is_primary":true,"text":[{"text":"    ($left:expr, $right:expr $(,)?) => {","highlight_start":6,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unexpected end of macro invocation\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\17_tests\\tests2.rs:21:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing tokens in macro arguments\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: while trying to match meta-variable `$left:expr`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs:43:6\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m43\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    ($left:expr, $right:expr $(,)?) => {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `is_evening` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types1.rs","byte_start":328,"byte_end":338,"line_start":12,"line_end":12,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"    if is_evening {","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a local variable with a similar name exists","code":null,"level":"help","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types1.rs","byte_start":328,"byte_end":338,"line_start":12,"line_end":12,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"    if is_evening {","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":"is_morning","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `is_evening` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types1.rs:12:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if is_evening {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a local variable with a similar name exists: `is_morning`\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\22_clippy\\clippy3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libclippy3-0e50956545c11a55.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\09_strings\\strings3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstrings3_sol-860e4db48cc40dde.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\18_iterators\\iterators4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libiterators4_sol-7572fd16f0b38f05.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\04_primitive_types\\primitive_types3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types3_sol-6e3cc85f6ce31497.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\21_macros\\macros2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmacros2_sol-91115cd0d15e5912.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\05_vecs\\vecs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"a value of type `Vec<i32>` cannot be built from an iterator over elements of type `()`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":896,"byte_end":903,"line_start":29,"line_end":29,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"        .collect()","highlight_start":10,"highlight_end":17}],"label":"value of type `Vec<i32>` cannot be built from `std::iter::Iterator<Item=()>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `FromIterator<()>` is not implemented for `Vec<i32>`\nbut trait `FromIterator<i32>` is implemented for it","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `i32`, found `()`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the method call chain might not have had the expected associated types","code":null,"level":"note","spans":[{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":810,"byte_end":815,"line_start":24,"line_end":24,"column_start":5,"column_end":10,"is_primary":false,"text":[{"text":"    input","highlight_start":5,"highlight_end":10}],"label":"this expression has type `&[i32]`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":841,"byte_end":886,"line_start":26,"line_end":28,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        .map(|element| {","highlight_start":10,"highlight_end":25},{"text":"            // ???","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"`Iterator::Item` changed to `()` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":825,"byte_end":831,"line_start":25,"line_end":25,"column_start":10,"column_end":16,"is_primary":false,"text":[{"text":"        .iter()","highlight_start":10,"highlight_end":16}],"label":"`Iterator::Item` is `&i32` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `collect`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\iter\\traits\\iterator.rs","byte_start":67934,"byte_end":67958,"line_start":2014,"line_end":2014,"column_start":19,"column_end":43,"is_primary":true,"text":[{"text":"    fn collect<B: FromIterator<Self::Item>>(self) -> B","highlight_start":19,"highlight_end":43}],"label":"required by this bound in `Iterator::collect`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: a value of type `Vec<i32>` cannot be built from an iterator over elements of type `()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\05_vecs\\vecs2.rs:29:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .collect()\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvalue of type `Vec<i32>` cannot be built from `std::iter::Iterator<Item=()>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the trait `FromIterator<\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis not\u001b[0m\u001b[0m implemented for `Vec<i32>`\u001b[0m\n\u001b[0m             but trait `FromIterator<\u001b[0m\u001b[0m\u001b[1m\u001b[35mi32\u001b[0m\u001b[0m>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for it\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `\u001b[0m\u001b[0m\u001b[1m\u001b[35mi32\u001b[0m\u001b[0m`, found `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method call chain might not have had the expected associated types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\05_vecs\\vecs2.rs:26:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    input\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis expression has type `&[i32]`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        .iter()\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`Iterator::Item` is `&i32` here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        .map(|element| {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m __________^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            // ???\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|__________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m`Iterator::Item` changed to `()` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `collect`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\iter\\traits\\iterator.rs:2014:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2014\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn collect<B: FromIterator<Self::Item>>(self) -> B\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Iterator::collect`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\05_vecs\\vecs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `element`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":83,"byte_end":90,"line_start":4,"line_end":4,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    for element in input {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":83,"byte_end":90,"line_start":4,"line_end":4,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    for element in input {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"_element","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `element`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\05_vecs\\vecs2.rs:4:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for element in input {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_element`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\05_vecs\\vecs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":49,"byte_end":59,"line_start":2,"line_end":2,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let mut output = Vec::new();","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":49,"byte_end":53,"line_start":2,"line_end":2,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut output = Vec::new();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\05_vecs\\vecs2.rs:2:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut output = Vec::new();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\05_vecs\\vecs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\03_if\\if2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libif2_sol-9d36da0b08134aa8.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables6","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"missing type for `const` item","code":null,"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables6.rs","byte_start":70,"byte_end":70,"line_start":2,"line_end":2,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"const NUMBER = 3;","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"provide a type for the constant","code":null,"level":"help","spans":[{"file_name":"exercises\\01_variables\\variables6.rs","byte_start":70,"byte_end":70,"line_start":2,"line_end":2,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"const NUMBER = 3;","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":": i32","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: missing type for `const` item\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables6.rs:2:13\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst NUMBER = 3;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: provide a type for the constant: `: i32`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\03_if\\if1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\03_if\\if1.rs","byte_start":29,"byte_end":32,"line_start":1,"line_end":1,"column_start":30,"column_end":33,"is_primary":true,"text":[{"text":"fn bigger(a: i32, b: i32) -> i32 {","highlight_start":30,"highlight_end":33}],"label":"expected `i32`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\03_if\\if1.rs","byte_start":3,"byte_end":9,"line_start":1,"line_end":1,"column_start":4,"column_end":10,"is_primary":false,"text":[{"text":"fn bigger(a: i32, b: i32) -> i32 {","highlight_start":4,"highlight_end":10}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider returning one of these bindings","code":null,"level":"note","spans":[{"file_name":"exercises\\03_if\\if1.rs","byte_start":10,"byte_end":11,"line_start":1,"line_end":1,"column_start":11,"column_end":12,"is_primary":true,"text":[{"text":"fn bigger(a: i32, b: i32) -> i32 {","highlight_start":11,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\03_if\\if1.rs","byte_start":18,"byte_end":19,"line_start":1,"line_end":1,"column_start":19,"column_end":20,"is_primary":true,"text":[{"text":"fn bigger(a: i32, b: i32) -> i32 {","highlight_start":19,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\03_if\\if1.rs:1:30\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn bigger(a: i32, b: i32) -> i32 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `i32`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: consider returning one of these bindings\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\03_if\\if1.rs:1:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn bigger(a: i32, b: i32) -> i32 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\03_if\\if1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\18_iterators\\iterators1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libiterators1_sol-c87ebc1fe6d135cd.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\01_variables\\variables1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvariables1_sol-ca0f157380540f1e.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\01_variables\\variables3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvariables3_sol-ba26bce8709c3971.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\11_hashmaps\\hashmaps1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libhashmaps1_sol-52e57dbbd471b979.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"intro1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\00_intro\\intro1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libintro1_sol-2fcfba37d32284f3.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1903,"byte_end":1904,"line_start":53,"line_end":53,"column_start":44,"column_end":45,"is_primary":true,"text":[{"text":"    let x: i64 = pretend_user_input.parse()?;","highlight_start":44,"highlight_end":45}],"label":"cannot use the `?` operator in a function that returns `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1903,"byte_end":1904,"line_start":53,"line_end":53,"column_start":44,"column_end":45,"is_primary":false,"text":[{"text":"    let x: i64 = pretend_user_input.parse()?;","highlight_start":44,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of operator `?`","def_site_span":{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1813,"byte_end":1822,"line_start":51,"line_end":51,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"fn main() {","highlight_start":1,"highlight_end":10}],"label":"this function should return `Result` or `Option` to accept `?`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding return type","code":null,"level":"help","spans":[{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1822,"byte_end":1822,"line_start":51,"line_end":51,"column_start":10,"column_end":10,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":10,"highlight_end":10}],"label":null,"suggested_replacement":" -> Result<(), Box<dyn std::error::Error>>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\13_error_handling\\errors5.rs:53:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis function should return `Result` or `Option` to accept `?`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let pretend_user_input = \"42\";\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let x: i64 = pretend_user_input.parse()?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot use the `?` operator in a function that returns `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding return type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn main()\u001b[0m\u001b[0m\u001b[38;5;10m -> Result<(), Box<dyn std::error::Error>>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1964,"byte_end":1965,"line_start":54,"line_end":54,"column_start":59,"column_end":60,"is_primary":true,"text":[{"text":"    println!(\"output={:?}\", PositiveNonzeroInteger::new(x)?);","highlight_start":59,"highlight_end":60}],"label":"cannot use the `?` operator in a function that returns `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1964,"byte_end":1965,"line_start":54,"line_end":54,"column_start":59,"column_end":60,"is_primary":false,"text":[{"text":"    println!(\"output={:?}\", PositiveNonzeroInteger::new(x)?);","highlight_start":59,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of operator `?`","def_site_span":{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1813,"byte_end":1822,"line_start":51,"line_end":51,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"fn main() {","highlight_start":1,"highlight_end":10}],"label":"this function should return `Result` or `Option` to accept `?`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding return type","code":null,"level":"help","spans":[{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1822,"byte_end":1822,"line_start":51,"line_end":51,"column_start":10,"column_end":10,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":10,"highlight_end":10}],"label":null,"suggested_replacement":" -> Result<(), Box<dyn std::error::Error>>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\13_error_handling\\errors5.rs:54:59\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis function should return `Result` or `Option` to accept `?`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"output={:?}\", PositiveNonzeroInteger::new(x)?);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot use the `?` operator in a function that returns `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding return type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn main()\u001b[0m\u001b[0m\u001b[38;5;10m -> Result<(), Box<dyn std::error::Error>>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\02_functions\\functions1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfunctions1_sol-c4de44bea62c45f3.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\21_macros\\macros4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmacros4_sol-0ed657b7428df940.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot borrow `x` as mutable more than once at a time","code":{"code":"E0499","explanation":"A variable was borrowed as mutable more than once.\n\nErroneous code example:\n\n```compile_fail,E0499\nlet mut i = 0;\nlet mut x = &mut i;\nlet mut a = &mut i;\nx;\n// error: cannot borrow `i` as mutable more than once at a time\n```\n\nPlease note that in Rust, you can either have many immutable references, or one\nmutable reference. For more details you may want to read the\n[References & Borrowing][references-and-borrowing] section of the Book.\n\n[references-and-borrowing]: https://doc.rust-lang.org/book/ch04-02-references-and-borrowing.html\n\nExample:\n\n```\nlet mut i = 0;\nlet mut x = &mut i; // ok!\n\n// or:\nlet mut i = 0;\nlet a = &i; // ok!\nlet b = &i; // still ok!\nlet c = &i; // still ok!\nb;\na;\n```\n"},"level":"error","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics4.rs","byte_start":294,"byte_end":300,"line_start":12,"line_end":12,"column_start":17,"column_end":23,"is_primary":false,"text":[{"text":"        let y = &mut x;","highlight_start":17,"highlight_end":23}],"label":"first mutable borrow occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics4.rs","byte_start":318,"byte_end":324,"line_start":13,"line_end":13,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"        let z = &mut x;","highlight_start":17,"highlight_end":23}],"label":"second mutable borrow occurs here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics4.rs","byte_start":334,"byte_end":335,"line_start":14,"line_end":14,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        y.push(42);","highlight_start":9,"highlight_end":10}],"label":"first borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0499]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot borrow `x` as mutable more than once at a time\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics4.rs:13:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let y = &mut x;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mfirst mutable borrow occurs here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let z = &mut x;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9msecond mutable borrow occurs here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        y.push(42);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mfirst borrow later used here\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1972,"byte_end":1978,"line_start":55,"line_end":55,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Ok(())","highlight_start":5,"highlight_end":11}],"label":"expected `()`, found `Result<(), _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1822,"byte_end":1822,"line_start":51,"line_end":51,"column_start":10,"column_end":10,"is_primary":false,"text":[{"text":"fn main() {","highlight_start":10,"highlight_end":10}],"label":"expected `()` because of default return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected unit type `()`\n        found enum `Result<(), _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\13_error_handling\\errors5.rs:55:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected `()` because of default return type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ok(())\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `()`, found `Result<(), _>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                   found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<(), _>\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0499`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0499`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\03_if\\if3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"`if` and `else` have incompatible types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\03_if\\if3.rs","byte_start":267,"byte_end":276,"line_start":10,"line_end":10,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        \"Unknown\"","highlight_start":9,"highlight_end":18}],"label":"expected integer, found `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\03_if\\if3.rs","byte_start":244,"byte_end":245,"line_start":8,"line_end":8,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        3","highlight_start":9,"highlight_end":10}],"label":"expected because of this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\03_if\\if3.rs","byte_start":213,"byte_end":282,"line_start":7,"line_end":11,"column_start":12,"column_end":6,"is_primary":false,"text":[{"text":"    } else if animal == \"snake\" {","highlight_start":12,"highlight_end":34},{"text":"        3","highlight_start":1,"highlight_end":10},{"text":"    } else {","highlight_start":1,"highlight_end":13},{"text":"        \"Unknown\"","highlight_start":1,"highlight_end":18},{"text":"    };","highlight_start":1,"highlight_end":6}],"label":"`if` and `else` have incompatible types","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `if` and `else` have incompatible types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\03_if\\if3.rs:10:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    } else if animal == \"snake\" {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m ____________-\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected because of this\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    } else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"Unknown\"\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected integer, found `&str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`if` and `else` have incompatible types\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\03_if\\if3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0308.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0277, E0308.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"exercises\\13_error_handling\\errors3.rs","byte_start":710,"byte_end":711,"line_start":23,"line_end":23,"column_start":46,"column_end":47,"is_primary":true,"text":[{"text":"    let cost = total_cost(pretend_user_input)?;","highlight_start":46,"highlight_end":47}],"label":"cannot use the `?` operator in a function that returns `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\13_error_handling\\errors3.rs","byte_start":710,"byte_end":711,"line_start":23,"line_end":23,"column_start":46,"column_end":47,"is_primary":false,"text":[{"text":"    let cost = total_cost(pretend_user_input)?;","highlight_start":46,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of operator `?`","def_site_span":{"file_name":"exercises\\13_error_handling\\errors3.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\13_error_handling\\errors3.rs","byte_start":561,"byte_end":570,"line_start":18,"line_end":18,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"fn main() {","highlight_start":1,"highlight_end":10}],"label":"this function should return `Result` or `Option` to accept `?`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding return type","code":null,"level":"help","spans":[{"file_name":"exercises\\13_error_handling\\errors3.rs","byte_start":570,"byte_end":570,"line_start":18,"line_end":18,"column_start":10,"column_end":10,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":10,"highlight_end":10}],"label":null,"suggested_replacement":" -> Result<(), Box<dyn std::error::Error>>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\13_error_handling\\errors3.rs:23:46\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis function should return `Result` or `Option` to accept `?`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let cost = total_cost(pretend_user_input)?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot use the `?` operator in a function that returns `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding return type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn main()\u001b[0m\u001b[0m\u001b[38;5;10m -> Result<(), Box<dyn std::error::Error>>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"generics2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\14_generics\\generics2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\14_generics\\generics2.rs","byte_start":633,"byte_end":638,"line_start":29,"line_end":29,"column_start":33,"column_end":38,"is_primary":true,"text":[{"text":"        assert_eq!(Wrapper::new(\"Foo\").value, \"Foo\");","highlight_start":33,"highlight_end":38}],"label":"expected `u32`, found `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\14_generics\\generics2.rs","byte_start":620,"byte_end":632,"line_start":29,"line_end":29,"column_start":20,"column_end":32,"is_primary":false,"text":[{"text":"        assert_eq!(Wrapper::new(\"Foo\").value, \"Foo\");","highlight_start":20,"highlight_end":32}],"label":"arguments to this function are incorrect","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"associated function defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\14_generics\\generics2.rs","byte_start":299,"byte_end":309,"line_start":9,"line_end":9,"column_start":12,"column_end":22,"is_primary":false,"text":[{"text":"    fn new(value: u32) -> Self {","highlight_start":12,"highlight_end":22}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\14_generics\\generics2.rs","byte_start":295,"byte_end":298,"line_start":9,"line_end":9,"column_start":8,"column_end":11,"is_primary":true,"text":[{"text":"    fn new(value: u32) -> Self {","highlight_start":8,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\14_generics\\generics2.rs:29:33\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(Wrapper::new(\"Foo\").value, \"Foo\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u32`, found `&str`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14marguments to this function are incorrect\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: associated function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\14_generics\\generics2.rs:9:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn new(value: u32) -> Self {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"generics2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\14_generics\\generics2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\14_generics\\generics2.rs","byte_start":647,"byte_end":652,"line_start":29,"line_end":29,"column_start":47,"column_end":52,"is_primary":true,"text":[{"text":"        assert_eq!(Wrapper::new(\"Foo\").value, \"Foo\");","highlight_start":47,"highlight_end":52}],"label":"expected `u32`, found `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\14_generics\\generics2.rs:29:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(Wrapper::new(\"Foo\").value, \"Foo\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `u32`, found `&str`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"using_as","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\using_as.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot divide `f64` by `usize`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\using_as.rs","byte_start":314,"byte_end":315,"line_start":8,"line_end":8,"column_start":11,"column_end":12,"is_primary":true,"text":[{"text":"    total / values.len()","highlight_start":11,"highlight_end":12}],"label":"no implementation for `f64 / usize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Div<usize>` is not implemented for `f64`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following other types implement trait `Div<Rhs>`:\n  `&f64` implements `Div<f64>`\n  `&f64` implements `Div`\n  `f64` implements `Div<&f64>`\n  `f64` implements `Div`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot divide `f64` by `usize`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\using_as.rs:8:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    total / values.len()\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno implementation for `f64 / usize`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the trait `Div<usize>` is not implemented for `f64`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `Div<Rhs>`:\u001b[0m\n\u001b[0m            `&f64` implements `Div<f64>`\u001b[0m\n\u001b[0m            `&f64` implements `Div`\u001b[0m\n\u001b[0m            `f64` implements `Div<&f64>`\u001b[0m\n\u001b[0m            `f64` implements `Div`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"generics2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\14_generics\\generics2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"using_as","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\using_as.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libenums2_sol-96cf321275ef9bf7.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"type annotations needed","code":{"code":"E0283","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0283\nlet x = \"hello\".chars().rev().collect();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nA common example is the `collect` method on `Iterator`. It has a generic type\nparameter with a `FromIterator` bound, which for a `char` iterator is\nimplemented by `Vec` and `String` among others. Consider the following snippet\nthat reverses the characters of a string:\n\nIn the first code example, the compiler cannot infer what the type of `x` should\nbe: `Vec<char>` and `String` are both suitable candidates. To specify which type\nto use, you can use a type annotation on `x`:\n\n```\nlet x: Vec<char> = \"hello\".chars().rev().collect();\n```\n\nIt is not necessary to annotate the full type. Once the ambiguity is resolved,\nthe compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nWe can see a self-contained example below:\n\n```compile_fail,E0283\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = foo.into() * 1u32;\n```\n\nThis error can be solved by adding type annotations that provide the missing\ninformation to the compiler. In this case, the solution is to specify the\ntrait's type parameter:\n\n```\nstruct Foo;\n\nimpl Into<u32> for Foo {\n    fn into(self) -> u32 { 1 }\n}\n\nlet foo = Foo;\nlet bar: u32 = Into::<u32>::into(foo) * 1u32;\n```\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables2.rs","byte_start":95,"byte_end":97,"line_start":5,"line_end":5,"column_start":10,"column_end":12,"is_primary":false,"text":[{"text":"    if x == 10 {","highlight_start":10,"highlight_end":12}],"label":"type must be known at this point","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\01_variables\\variables2.rs","byte_start":82,"byte_end":83,"line_start":3,"line_end":3,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    let x;","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"cannot satisfy `_: PartialEq<i32>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"`{integer}` implements `PartialEq<_>`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"consider giving `x` an explicit type","code":null,"level":"help","spans":[{"file_name":"exercises\\01_variables\\variables2.rs","byte_start":83,"byte_end":83,"line_start":3,"line_end":3,"column_start":10,"column_end":10,"is_primary":true,"text":[{"text":"    let x;","highlight_start":10,"highlight_end":10}],"label":null,"suggested_replacement":": /* Type */","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null},{"message":"consider swapping the equality","code":null,"level":"help","spans":[{"file_name":"exercises\\01_variables\\variables2.rs","byte_start":93,"byte_end":94,"line_start":5,"line_end":5,"column_start":8,"column_end":9,"is_primary":true,"text":[{"text":"    if x == 10 {","highlight_start":8,"highlight_end":9}],"label":null,"suggested_replacement":"10","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\01_variables\\variables2.rs","byte_start":98,"byte_end":100,"line_start":5,"line_end":5,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"    if x == 10 {","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"x","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0283]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type annotations needed\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables2.rs:3:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let x;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if x == 10 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mtype must be known at this point\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: cannot satisfy `_: PartialEq<i32>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `{integer}` implements `PartialEq<_>`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider giving `x` an explicit type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let x\u001b[0m\u001b[0m\u001b[38;5;10m: /* Type */\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider swapping the equality\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    if \u001b[0m\u001b[0m\u001b[38;5;9mx\u001b[0m\u001b[0m == \u001b[0m\u001b[0m\u001b[38;5;9m10\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    if \u001b[0m\u001b[0m\u001b[38;5;10m10\u001b[0m\u001b[0m == \u001b[0m\u001b[0m\u001b[38;5;10mx\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0283`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0283`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\03_if\\if3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"`if` and `else` have incompatible types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\03_if\\if3.rs","byte_start":267,"byte_end":276,"line_start":10,"line_end":10,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"        \"Unknown\"","highlight_start":9,"highlight_end":18}],"label":"expected integer, found `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\03_if\\if3.rs","byte_start":244,"byte_end":245,"line_start":8,"line_end":8,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        3","highlight_start":9,"highlight_end":10}],"label":"expected because of this","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\03_if\\if3.rs","byte_start":213,"byte_end":282,"line_start":7,"line_end":11,"column_start":12,"column_end":6,"is_primary":false,"text":[{"text":"    } else if animal == \"snake\" {","highlight_start":12,"highlight_end":34},{"text":"        3","highlight_start":1,"highlight_end":10},{"text":"    } else {","highlight_start":1,"highlight_end":13},{"text":"        \"Unknown\"","highlight_start":1,"highlight_end":18},{"text":"    };","highlight_start":1,"highlight_end":6}],"label":"`if` and `else` have incompatible types","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `if` and `else` have incompatible types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\03_if\\if3.rs:10:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    } else if animal == \"snake\" {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m ____________-\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        3\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected because of this\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    } else {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        \"Unknown\"\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected integer, found `&str`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    };\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_____-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`if` and `else` have incompatible types\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unreachable statement","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1368,"byte_end":1940,"line_start":44,"line_end":54,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        match (&$left, &$right) {","highlight_start":9,"highlight_end":34},{"text":"            (left_val, right_val) => {","highlight_start":1,"highlight_end":39},{"text":"                if !(*left_val == *right_val) {","highlight_start":1,"highlight_end":48},{"text":"                    let kind = $crate::panicking::AssertKind::Eq;","highlight_start":1,"highlight_end":66},{"text":"                    // The reborrows below are intentional. Without them, the stack slot for the","highlight_start":1,"highlight_end":97},{"text":"                    // borrow is initialized even before the values are compared, leading to a","highlight_start":1,"highlight_end":95},{"text":"                    // noticeable slow down.","highlight_start":1,"highlight_end":45},{"text":"                    $crate::panicking::assert_failed(kind, &*left_val, &*right_val, $crate::option::Option::None);","highlight_start":1,"highlight_end":115},{"text":"                }","highlight_start":1,"highlight_end":18},{"text":"            }","highlight_start":1,"highlight_end":14},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":"unreachable statement","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\18_iterators\\iterators1.rs","byte_start":547,"byte_end":602,"line_start":18,"line_end":18,"column_start":9,"column_end":64,"is_primary":false,"text":[{"text":"        assert_eq!(fav_fruits_iterator.next(), Some(&\"banana\"));","highlight_start":9,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29820,"line_start":875,"line_end":875,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":56}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\18_iterators\\iterators1.rs","byte_start":529,"byte_end":536,"line_start":16,"line_end":16,"column_start":39,"column_end":46,"is_primary":false,"text":[{"text":"        let mut fav_fruits_iterator = todo!();","highlight_start":39,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29733,"byte_end":29750,"line_start":873,"line_end":873,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable statement\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators1.rs:18:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut fav_fruits_iterator = todo!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14many code following this expression is unreachable\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(fav_fruits_iterator.next(), Some(&\"banana\"));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable statement\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `append_bar` found for struct `Vec<String>` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits2.rs","byte_start":374,"byte_end":384,"line_start":18,"line_end":18,"column_start":49,"column_end":59,"is_primary":true,"text":[{"text":"        let mut foo = vec![String::from(\"Foo\")].append_bar();","highlight_start":49,"highlight_end":59}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the trait is implemented and in scope","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"`AppendBar` defines an item `append_bar`, perhaps you need to implement it","code":null,"level":"note","spans":[{"file_name":"exercises\\15_traits\\traits2.rs","byte_start":0,"byte_end":15,"line_start":1,"line_end":1,"column_start":1,"column_end":16,"is_primary":true,"text":[{"text":"trait AppendBar {","highlight_start":1,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"there is a method `append` with a similar name, but with different arguments","code":null,"level":"help","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\alloc\\src\\vec\\mod.rs","byte_start":102243,"byte_end":102285,"line_start":2719,"line_end":2719,"column_start":5,"column_end":47,"is_primary":true,"text":[{"text":"    pub fn append(&mut self, other: &mut Self) {","highlight_start":5,"highlight_end":47}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `append_bar` found for struct `Vec<String>` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits2.rs:18:49\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut foo = vec![String::from(\"Foo\")].append_bar();\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: items from traits can only be used if the trait is implemented and in scope\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: `AppendBar` defines an item `append_bar`, perhaps you need to implement it\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits2.rs:1:1\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mtrait AppendBar {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a method `append` with a similar name, but with different arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\alloc\\src\\vec\\mod.rs:2719:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2719\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub fn append(&mut self, other: &mut Self) {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"type annotations needed","code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = Vec::new();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nIn the example above, type `Vec` has a type parameter `T`. When calling\n`Vec::new`, barring any other later usage of the variable `x` that allows the\ncompiler to infer what type `T` is, the compiler needs to be told what it is.\n\nThe type can be specified on the variable:\n\n```\nlet x: Vec<i32> = Vec::new();\n```\n\nThe type can also be specified in the path of the expression:\n\n```\nlet x = Vec::<i32>::new();\n```\n\nIn cases with more complex types, it is not necessary to annotate the full\ntype. Once the ambiguity is resolved, the compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators1.rs","byte_start":558,"byte_end":577,"line_start":18,"line_end":18,"column_start":20,"column_end":39,"is_primary":false,"text":[{"text":"        assert_eq!(fav_fruits_iterator.next(), Some(&\"banana\"));","highlight_start":20,"highlight_end":39}],"label":"type must be known at this point","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\18_iterators\\iterators1.rs","byte_start":503,"byte_end":526,"line_start":16,"line_end":16,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"        let mut fav_fruits_iterator = todo!();","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider giving `fav_fruits_iterator` an explicit type","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators1.rs","byte_start":526,"byte_end":526,"line_start":16,"line_end":16,"column_start":36,"column_end":36,"is_primary":true,"text":[{"text":"        let mut fav_fruits_iterator = todo!();","highlight_start":36,"highlight_end":36}],"label":null,"suggested_replacement":": /* Type */","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0282]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type annotations needed\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators1.rs:16:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let mut fav_fruits_iterator = todo!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(fav_fruits_iterator.next(), Some(&\"banana\"));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mtype must be known at this point\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider giving `fav_fruits_iterator` an explicit type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let mut fav_fruits_iterator\u001b[0m\u001b[0m\u001b[38;5;10m: /* Type */\u001b[0m\u001b[0m = todo!();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1383,"byte_end":1390,"line_start":44,"line_end":44,"column_start":24,"column_end":31,"is_primary":true,"text":[{"text":"        match (&$left, &$right) {","highlight_start":24,"highlight_end":31}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\18_iterators\\iterators1.rs","byte_start":612,"byte_end":659,"line_start":19,"line_end":19,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        assert_eq!(fav_fruits_iterator.next(), todo!()); // TODO: Replace `todo!()`","highlight_start":9,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29820,"line_start":875,"line_end":875,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":56}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\18_iterators\\iterators1.rs","byte_start":651,"byte_end":658,"line_start":19,"line_end":19,"column_start":48,"column_end":55,"is_primary":false,"text":[{"text":"        assert_eq!(fav_fruits_iterator.next(), todo!()); // TODO: Replace `todo!()`","highlight_start":48,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29733,"byte_end":29750,"line_start":873,"line_end":873,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators1.rs:19:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(fav_fruits_iterator.next(), todo!()); // TODO: Replace `todo!()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14many code following this expression is unreachable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1383,"byte_end":1390,"line_start":44,"line_end":44,"column_start":24,"column_end":31,"is_primary":true,"text":[{"text":"        match (&$left, &$right) {","highlight_start":24,"highlight_end":31}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\18_iterators\\iterators1.rs","byte_start":762,"byte_end":809,"line_start":21,"line_end":21,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        assert_eq!(fav_fruits_iterator.next(), todo!()); // TODO: Replace `todo!()`","highlight_start":9,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29820,"line_start":875,"line_end":875,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":56}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\18_iterators\\iterators1.rs","byte_start":801,"byte_end":808,"line_start":21,"line_end":21,"column_start":48,"column_end":55,"is_primary":false,"text":[{"text":"        assert_eq!(fav_fruits_iterator.next(), todo!()); // TODO: Replace `todo!()`","highlight_start":48,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29733,"byte_end":29750,"line_start":873,"line_end":873,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators1.rs:21:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(fav_fruits_iterator.next(), todo!()); // TODO: Replace `todo!()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14many code following this expression is unreachable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1383,"byte_end":1390,"line_start":44,"line_end":44,"column_start":24,"column_end":31,"is_primary":true,"text":[{"text":"        match (&$left, &$right) {","highlight_start":24,"highlight_end":31}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\18_iterators\\iterators1.rs","byte_start":914,"byte_end":961,"line_start":23,"line_end":23,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        assert_eq!(fav_fruits_iterator.next(), todo!()); // TODO: Replace `todo!()`","highlight_start":9,"highlight_end":56}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29820,"line_start":875,"line_end":875,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":56}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\18_iterators\\iterators1.rs","byte_start":953,"byte_end":960,"line_start":23,"line_end":23,"column_start":48,"column_end":55,"is_primary":false,"text":[{"text":"        assert_eq!(fav_fruits_iterator.next(), todo!()); // TODO: Replace `todo!()`","highlight_start":48,"highlight_end":55}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29733,"byte_end":29750,"line_start":873,"line_end":873,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators1.rs:23:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(fav_fruits_iterator.next(), todo!()); // TODO: Replace `todo!()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14many code following this expression is unreachable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"type annotations needed for `Vec<_>`","code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = Vec::new();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nIn the example above, type `Vec` has a type parameter `T`. When calling\n`Vec::new`, barring any other later usage of the variable `x` that allows the\ncompiler to infer what type `T` is, the compiler needs to be told what it is.\n\nThe type can be specified on the variable:\n\n```\nlet x: Vec<i32> = Vec::new();\n```\n\nThe type can also be specified in the path of the expression:\n\n```\nlet x = Vec::<i32>::new();\n```\n\nIn cases with more complex types, it is not necessary to annotate the full\ntype. Once the ambiguity is resolved, the compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","spans":[{"file_name":"exercises\\20_threads\\threads1.rs","byte_start":683,"byte_end":693,"line_start":23,"line_end":23,"column_start":23,"column_end":33,"is_primary":false,"text":[{"text":"    let mut results = Vec::new();","highlight_start":23,"highlight_end":33}],"label":"type must be known at this point","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\20_threads\\threads1.rs","byte_start":669,"byte_end":680,"line_start":23,"line_end":23,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let mut results = Vec::new();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider giving `results` an explicit type, where the type for type parameter `T` is specified","code":null,"level":"help","spans":[{"file_name":"exercises\\20_threads\\threads1.rs","byte_start":680,"byte_end":680,"line_start":23,"line_end":23,"column_start":20,"column_end":20,"is_primary":true,"text":[{"text":"    let mut results = Vec::new();","highlight_start":20,"highlight_end":20}],"label":null,"suggested_replacement":": Vec<T>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0282]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type annotations needed for `Vec<_>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\20_threads\\threads1.rs:23:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut results = Vec::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mtype must be known at this point\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider giving `results` an explicit type, where the type for type parameter `T` is specified\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut results\u001b[0m\u001b[0m\u001b[38;5;10m: Vec<T>\u001b[0m\u001b[0m = Vec::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0599`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0282`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0282`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0282`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0282`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\03_if\\if3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\12_options\\options1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liboptions1_sol-e6dbc10c80e9d433.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"intro2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\00_intro\\intro2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libintro2_sol-44a20cb9c7cd90d8.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\09_strings\\strings1.rs","byte_start":117,"byte_end":123,"line_start":3,"line_end":3,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    \"blue\"","highlight_start":5,"highlight_end":11}],"label":"expected `String`, found `&str`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\09_strings\\strings1.rs","byte_start":104,"byte_end":110,"line_start":2,"line_end":2,"column_start":32,"column_end":38,"is_primary":false,"text":[{"text":"fn current_favorite_color() -> String {","highlight_start":32,"highlight_end":38}],"label":"expected `String` because of return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"try using a conversion method","code":null,"level":"help","spans":[{"file_name":"exercises\\09_strings\\strings1.rs","byte_start":123,"byte_end":123,"line_start":3,"line_end":3,"column_start":11,"column_end":11,"is_primary":true,"text":[{"text":"    \"blue\"","highlight_start":11,"highlight_end":11}],"label":null,"suggested_replacement":".to_string()","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\09_strings\\strings1.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn current_favorite_color() -> String {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected `String` because of return type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    \"blue\"\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `String`, found `&str`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: try using a conversion method\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \"blue\"\u001b[0m\u001b[0m\u001b[38;5;10m.to_string()\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\quizzes\\quiz1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libquiz1_sol-88f343d6dc839d39.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\09_strings\\strings1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"from_into_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\23_conversions\\from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfrom_into_sol-4bee655928413be4.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\09_strings\\strings2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstrings2_sol-6b3759a1f0772454.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\04_primitive_types\\primitive_types5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types5_sol-c59c7ee370206f69.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"as_ref_mut","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\as_ref_mut.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `as_ref` found for type parameter `T` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":464,"byte_end":470,"line_start":9,"line_end":9,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    arg.as_ref().len()","highlight_start":9,"highlight_end":15}],"label":"method not found in `T`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":434,"byte_end":435,"line_start":8,"line_end":8,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"fn byte_counter<T>(arg: T) -> usize {","highlight_start":17,"highlight_end":18}],"label":"method `as_ref` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `as_ref`, perhaps you need to restrict type parameter `T` with it:","code":null,"level":"help","spans":[{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":435,"byte_end":435,"line_start":8,"line_end":8,"column_start":18,"column_end":18,"is_primary":true,"text":[{"text":"fn byte_counter<T>(arg: T) -> usize {","highlight_start":18,"highlight_end":18}],"label":null,"suggested_replacement":": AsRef</* T */>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `as_ref` found for type parameter `T` in the current scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\as_ref_mut.rs:9:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn byte_counter<T>(arg: T) -> usize {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `as_ref` not found for this type parameter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    arg.as_ref().len()\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `T`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `as_ref`, perhaps you need to restrict type parameter `T` with it:\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn byte_counter<T\u001b[0m\u001b[0m\u001b[38;5;10m: AsRef</* T */>\u001b[0m\u001b[0m>(arg: T) -> usize {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"as_ref_mut","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\as_ref_mut.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `as_ref` found for type parameter `T` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":661,"byte_end":667,"line_start":15,"line_end":15,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    arg.as_ref().chars().count()","highlight_start":9,"highlight_end":15}],"label":"method not found in `T`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":631,"byte_end":632,"line_start":14,"line_end":14,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"fn char_counter<T>(arg: T) -> usize {","highlight_start":17,"highlight_end":18}],"label":"method `as_ref` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `as_ref`, perhaps you need to restrict type parameter `T` with it:","code":null,"level":"help","spans":[{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":632,"byte_end":632,"line_start":14,"line_end":14,"column_start":18,"column_end":18,"is_primary":true,"text":[{"text":"fn char_counter<T>(arg: T) -> usize {","highlight_start":18,"highlight_end":18}],"label":null,"suggested_replacement":": AsRef</* T */>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `as_ref` found for type parameter `T` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\as_ref_mut.rs:15:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn char_counter<T>(arg: T) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `as_ref` not found for this type parameter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    arg.as_ref().chars().count()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `T`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `as_ref`, perhaps you need to restrict type parameter `T` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn char_counter<T\u001b[0m\u001b[0m\u001b[38;5;10m: AsRef</* T */>\u001b[0m\u001b[0m>(arg: T) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot borrow `vec` as mutable, as it is not declared as mutable","code":{"code":"E0596","explanation":"This error occurs because you tried to mutably borrow a non-mutable variable.\n\nErroneous code example:\n\n```compile_fail,E0596\nlet x = 1;\nlet y = &mut x; // error: cannot borrow mutably\n```\n\nIn here, `x` isn't mutable, so when we try to mutably borrow it in `y`, it\nfails. To fix this error, you need to make `x` mutable:\n\n```\nlet mut x = 1;\nlet y = &mut x; // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics3.rs","byte_start":122,"byte_end":125,"line_start":3,"line_end":3,"column_start":5,"column_end":8,"is_primary":true,"text":[{"text":"    vec.push(88);","highlight_start":5,"highlight_end":8}],"label":"cannot borrow as mutable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider changing this to be mutable","code":null,"level":"help","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics3.rs","byte_start":89,"byte_end":89,"line_start":2,"line_end":2,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"fn fill_vec(vec: Vec<i32>) -> Vec<i32> {","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"mut ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0596]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot borrow `vec` as mutable, as it is not declared as mutable\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics3.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    vec.push(88);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot borrow as mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider changing this to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn fill_vec(\u001b[0m\u001b[0m\u001b[38;5;10mmut \u001b[0m\u001b[0mvec: Vec<i32>) -> Vec<i32> {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0596`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0596`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"as_ref_mut","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\as_ref_mut.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `arg`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":782,"byte_end":785,"line_start":20,"line_end":20,"column_start":14,"column_end":17,"is_primary":true,"text":[{"text":"fn num_sq<T>(arg: &mut T) {","highlight_start":14,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":782,"byte_end":785,"line_start":20,"line_end":20,"column_start":14,"column_end":17,"is_primary":true,"text":[{"text":"fn num_sq<T>(arg: &mut T) {","highlight_start":14,"highlight_end":17}],"label":null,"suggested_replacement":"_arg","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `arg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\as_ref_mut.rs:20:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn num_sq<T>(arg: &mut T) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_arg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"as_ref_mut","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\as_ref_mut.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0599`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\quizzes\\quiz2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libquiz2_sol-ac7fb6a5fd83bc4b.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\21_macros\\macros3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmacros3_sol-54fbce82b60685f4.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\01_variables\\variables2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvariables2_sol-7e1f2289cb1e4689.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\16_lifetimes\\lifetimes3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liblifetimes3_sol-47072a3a0646a3ab.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors6","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors6-cf9c6a417bfd6108.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\05_vecs\\vecs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `v` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\05_vecs\\vecs1.rs","byte_start":243,"byte_end":244,"line_start":8,"line_end":8,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    (a, v)","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a local variable with a similar name exists","code":null,"level":"help","spans":[{"file_name":"exercises\\05_vecs\\vecs1.rs","byte_start":243,"byte_end":244,"line_start":8,"line_end":8,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    (a, v)","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `v` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\05_vecs\\vecs1.rs:8:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    (a, v)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a local variable with a similar name exists: `a`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\05_vecs\\vecs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\13_error_handling\\errors5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors5_sol-1f9adc3a6d38cf28.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\13_error_handling\\errors3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors3_sol-f1c766082f345581.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"type annotations needed for `Vec<_>`","code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = Vec::new();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nIn the example above, type `Vec` has a type parameter `T`. When calling\n`Vec::new`, barring any other later usage of the variable `x` that allows the\ncompiler to infer what type `T` is, the compiler needs to be told what it is.\n\nThe type can be specified on the variable:\n\n```\nlet x: Vec<i32> = Vec::new();\n```\n\nThe type can also be specified in the path of the expression:\n\n```\nlet x = Vec::<i32>::new();\n```\n\nIn cases with more complex types, it is not necessary to annotate the full\ntype. Once the ambiguity is resolved, the compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","spans":[{"file_name":"exercises\\20_threads\\threads1.rs","byte_start":683,"byte_end":693,"line_start":23,"line_end":23,"column_start":23,"column_end":33,"is_primary":false,"text":[{"text":"    let mut results = Vec::new();","highlight_start":23,"highlight_end":33}],"label":"type must be known at this point","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\20_threads\\threads1.rs","byte_start":669,"byte_end":680,"line_start":23,"line_end":23,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let mut results = Vec::new();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider giving `results` an explicit type, where the type for type parameter `T` is specified","code":null,"level":"help","spans":[{"file_name":"exercises\\20_threads\\threads1.rs","byte_start":680,"byte_end":680,"line_start":23,"line_end":23,"column_start":20,"column_end":20,"is_primary":true,"text":[{"text":"    let mut results = Vec::new();","highlight_start":20,"highlight_end":20}],"label":null,"suggested_replacement":": Vec<T>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0282]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type annotations needed for `Vec<_>`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\20_threads\\threads1.rs:23:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut results = Vec::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mtype must be known at this point\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider giving `results` an explicit type, where the type for type parameter `T` is specified\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut results\u001b[0m\u001b[0m\u001b[38;5;10m: Vec<T>\u001b[0m\u001b[0m = Vec::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0282`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0282`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `basket` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps1.rs","byte_start":543,"byte_end":549,"line_start":14,"line_end":14,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    basket.insert(String::from(\"banana\"), 2);","highlight_start":5,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `basket` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps1.rs:14:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    basket.insert(String::from(\"banana\"), 2);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `basket` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps1.rs","byte_start":636,"byte_end":642,"line_start":18,"line_end":18,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    basket","highlight_start":5,"highlight_end":11}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `basket` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps1.rs:18:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    basket\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables6","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"missing type for `const` item","code":null,"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables6.rs","byte_start":70,"byte_end":70,"line_start":2,"line_end":2,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"const NUMBER = 3;","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"provide a type for the constant","code":null,"level":"help","spans":[{"file_name":"exercises\\01_variables\\variables6.rs","byte_start":70,"byte_end":70,"line_start":2,"line_end":2,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"const NUMBER = 3;","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":": i32","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: missing type for `const` item\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables6.rs:2:13\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mconst NUMBER = 3;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: provide a type for the constant: `: i32`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `is_evening` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types1.rs","byte_start":328,"byte_end":338,"line_start":12,"line_end":12,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"    if is_evening {","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a local variable with a similar name exists","code":null,"level":"help","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types1.rs","byte_start":328,"byte_end":338,"line_start":12,"line_end":12,"column_start":8,"column_end":18,"is_primary":true,"text":[{"text":"    if is_evening {","highlight_start":8,"highlight_end":18}],"label":null,"suggested_replacement":"is_morning","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `is_evening` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types1.rs:12:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if is_evening {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a local variable with a similar name exists: `is_morning`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\21_macros\\macros2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmacros2_sol-5de03b59c1af4e7a.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"intro2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\00_intro\\intro2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find macro `printline` in this scope","code":null,"level":"error","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4285,"byte_end":4305,"line_start":138,"line_end":138,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! println {","highlight_start":1,"highlight_end":21}],"label":"similarly named macro `println` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\00_intro\\intro2.rs","byte_start":67,"byte_end":76,"line_start":3,"line_end":3,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    printline!(\"Hello world!\");","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"a macro with a similar name exists","code":null,"level":"help","spans":[{"file_name":"exercises\\00_intro\\intro2.rs","byte_start":67,"byte_end":76,"line_start":3,"line_end":3,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    printline!(\"Hello world!\");","highlight_start":5,"highlight_end":14}],"label":null,"suggested_replacement":"println","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find macro `printline` in this scope\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\00_intro\\intro2.rs:3:5\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    printline!(\"Hello world!\");\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mhelp: a macro with a similar name exists: `println`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m::: \u001b[0m\u001b[0mC:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs:138:1\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m138\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! println {\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14msimilarly named macro `println` defined here\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\18_iterators\\iterators2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libiterators2_sol-e01cdcd65edb7593.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\05_vecs\\vecs1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvecs1_sol-1ed8b3b2d5bcb2aa.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\18_iterators\\iterators4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libiterators4_sol-53e7840d85c8b373.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\15_traits\\traits1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtraits1_sol-1dfd1ecd9496c8cf.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1903,"byte_end":1904,"line_start":53,"line_end":53,"column_start":44,"column_end":45,"is_primary":true,"text":[{"text":"    let x: i64 = pretend_user_input.parse()?;","highlight_start":44,"highlight_end":45}],"label":"cannot use the `?` operator in a function that returns `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1903,"byte_end":1904,"line_start":53,"line_end":53,"column_start":44,"column_end":45,"is_primary":false,"text":[{"text":"    let x: i64 = pretend_user_input.parse()?;","highlight_start":44,"highlight_end":45}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of operator `?`","def_site_span":{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1813,"byte_end":1822,"line_start":51,"line_end":51,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"fn main() {","highlight_start":1,"highlight_end":10}],"label":"this function should return `Result` or `Option` to accept `?`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding return type","code":null,"level":"help","spans":[{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1822,"byte_end":1822,"line_start":51,"line_end":51,"column_start":10,"column_end":10,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":10,"highlight_end":10}],"label":null,"suggested_replacement":" -> Result<(), Box<dyn std::error::Error>>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\13_error_handling\\errors5.rs:53:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis function should return `Result` or `Option` to accept `?`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let pretend_user_input = \"42\";\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m53\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let x: i64 = pretend_user_input.parse()?;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot use the `?` operator in a function that returns `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding return type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn main()\u001b[0m\u001b[0m\u001b[38;5;10m -> Result<(), Box<dyn std::error::Error>>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1964,"byte_end":1965,"line_start":54,"line_end":54,"column_start":59,"column_end":60,"is_primary":true,"text":[{"text":"    println!(\"output={:?}\", PositiveNonzeroInteger::new(x)?);","highlight_start":59,"highlight_end":60}],"label":"cannot use the `?` operator in a function that returns `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1964,"byte_end":1965,"line_start":54,"line_end":54,"column_start":59,"column_end":60,"is_primary":false,"text":[{"text":"    println!(\"output={:?}\", PositiveNonzeroInteger::new(x)?);","highlight_start":59,"highlight_end":60}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of operator `?`","def_site_span":{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1813,"byte_end":1822,"line_start":51,"line_end":51,"column_start":1,"column_end":10,"is_primary":false,"text":[{"text":"fn main() {","highlight_start":1,"highlight_end":10}],"label":"this function should return `Result` or `Option` to accept `?`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider adding return type","code":null,"level":"help","spans":[{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1822,"byte_end":1822,"line_start":51,"line_end":51,"column_start":10,"column_end":10,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":10,"highlight_end":10}],"label":null,"suggested_replacement":" -> Result<(), Box<dyn std::error::Error>>","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: the `?` operator can only be used in a function that returns `Result` or `Option` (or another type that implements `FromResidual`)\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\13_error_handling\\errors5.rs:54:59\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis function should return `Result` or `Option` to accept `?`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"output={:?}\", PositiveNonzeroInteger::new(x)?);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot use the `?` operator in a function that returns `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider adding return type\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn main()\u001b[0m\u001b[0m\u001b[38;5;10m -> Result<(), Box<dyn std::error::Error>>\u001b[0m\u001b[0m {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++++++++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1972,"byte_end":1978,"line_start":55,"line_end":55,"column_start":5,"column_end":11,"is_primary":true,"text":[{"text":"    Ok(())","highlight_start":5,"highlight_end":11}],"label":"expected `()`, found `Result<(), _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\13_error_handling\\errors5.rs","byte_start":1822,"byte_end":1822,"line_start":51,"line_end":51,"column_start":10,"column_end":10,"is_primary":false,"text":[{"text":"fn main() {","highlight_start":10,"highlight_end":10}],"label":"expected `()` because of default return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected unit type `()`\n        found enum `Result<(), _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\13_error_handling\\errors5.rs:55:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn main() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected `()` because of default return type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    Ok(())\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `()`, found `Result<(), _>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                   found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<(), _>\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0277, E0308.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0277, E0308.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"as_ref_mut","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\as_ref_mut.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `as_ref` found for type parameter `T` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":464,"byte_end":470,"line_start":9,"line_end":9,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    arg.as_ref().len()","highlight_start":9,"highlight_end":15}],"label":"method not found in `T`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":434,"byte_end":435,"line_start":8,"line_end":8,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"fn byte_counter<T>(arg: T) -> usize {","highlight_start":17,"highlight_end":18}],"label":"method `as_ref` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `as_ref`, perhaps you need to restrict type parameter `T` with it:","code":null,"level":"help","spans":[{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":435,"byte_end":435,"line_start":8,"line_end":8,"column_start":18,"column_end":18,"is_primary":true,"text":[{"text":"fn byte_counter<T>(arg: T) -> usize {","highlight_start":18,"highlight_end":18}],"label":null,"suggested_replacement":": AsRef</* T */>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `as_ref` found for type parameter `T` in the current scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\as_ref_mut.rs:9:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn byte_counter<T>(arg: T) -> usize {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `as_ref` not found for this type parameter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    arg.as_ref().len()\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `T`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `as_ref`, perhaps you need to restrict type parameter `T` with it:\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn byte_counter<T\u001b[0m\u001b[0m\u001b[38;5;10m: AsRef</* T */>\u001b[0m\u001b[0m>(arg: T) -> usize {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"as_ref_mut","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\as_ref_mut.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `as_ref` found for type parameter `T` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":661,"byte_end":667,"line_start":15,"line_end":15,"column_start":9,"column_end":15,"is_primary":true,"text":[{"text":"    arg.as_ref().chars().count()","highlight_start":9,"highlight_end":15}],"label":"method not found in `T`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":631,"byte_end":632,"line_start":14,"line_end":14,"column_start":17,"column_end":18,"is_primary":false,"text":[{"text":"fn char_counter<T>(arg: T) -> usize {","highlight_start":17,"highlight_end":18}],"label":"method `as_ref` not found for this type parameter","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"items from traits can only be used if the type parameter is bounded by the trait","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following trait defines an item `as_ref`, perhaps you need to restrict type parameter `T` with it:","code":null,"level":"help","spans":[{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":632,"byte_end":632,"line_start":14,"line_end":14,"column_start":18,"column_end":18,"is_primary":true,"text":[{"text":"fn char_counter<T>(arg: T) -> usize {","highlight_start":18,"highlight_end":18}],"label":null,"suggested_replacement":": AsRef</* T */>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `as_ref` found for type parameter `T` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\as_ref_mut.rs:15:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn char_counter<T>(arg: T) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmethod `as_ref` not found for this type parameter\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    arg.as_ref().chars().count()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `T`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: items from traits can only be used if the type parameter is bounded by the trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: the following trait defines an item `as_ref`, perhaps you need to restrict type parameter `T` with it:\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn char_counter<T\u001b[0m\u001b[0m\u001b[38;5;10m: AsRef</* T */>\u001b[0m\u001b[0m>(arg: T) -> usize {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m++++++++++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"as_ref_mut","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\as_ref_mut.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `arg`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":782,"byte_end":785,"line_start":20,"line_end":20,"column_start":14,"column_end":17,"is_primary":true,"text":[{"text":"fn num_sq<T>(arg: &mut T) {","highlight_start":14,"highlight_end":17}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\23_conversions\\as_ref_mut.rs","byte_start":782,"byte_end":785,"line_start":20,"line_end":20,"column_start":14,"column_end":17,"is_primary":true,"text":[{"text":"fn num_sq<T>(arg: &mut T) {","highlight_start":14,"highlight_end":17}],"label":null,"suggested_replacement":"_arg","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `arg`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\as_ref_mut.rs:20:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn num_sq<T>(arg: &mut T) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_arg`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `licensing_info`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits3.rs","byte_start":432,"byte_end":462,"line_start":17,"line_end":17,"column_start":1,"column_end":31,"is_primary":true,"text":[{"text":"impl Licensed for SomeSoftware {} // Don't edit this line.","highlight_start":1,"highlight_end":31}],"label":"missing `licensing_info` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\15_traits\\traits3.rs","byte_start":289,"byte_end":324,"line_start":6,"line_end":6,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn licensing_info(&self) -> String;","highlight_start":5,"highlight_end":40}],"label":"`licensing_info` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn licensing_info(&self) -> String { todo!() }`","code":null,"level":"help","spans":[{"file_name":"exercises\\15_traits\\traits3.rs","byte_start":464,"byte_end":464,"line_start":17,"line_end":17,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"impl Licensed for SomeSoftware {} // Don't edit this line.","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":"fn licensing_info(&self) -> String { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: not all trait items implemented, missing: `licensing_info`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits3.rs:17:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn licensing_info(&self) -> String;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`licensing_info` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Licensed for SomeSoftware {} // Don't edit this line.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `licensing_info` in implementation\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1375,"byte_end":1381,"line_start":44,"line_end":44,"column_start":16,"column_end":22,"is_primary":true,"text":[{"text":"        match (&$left, &$right) {","highlight_start":16,"highlight_end":22}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\17_tests\\tests3.rs","byte_start":762,"byte_end":785,"line_start":32,"line_end":32,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        assert_eq!(todo!(), 10); // Check width","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29820,"line_start":875,"line_end":875,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":56}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\17_tests\\tests3.rs","byte_start":773,"byte_end":780,"line_start":32,"line_end":32,"column_start":20,"column_end":27,"is_primary":false,"text":[{"text":"        assert_eq!(todo!(), 10); // Check width","highlight_start":20,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29733,"byte_end":29750,"line_start":873,"line_end":873,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"`#[warn(unreachable_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\17_tests\\tests3.rs:32:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(todo!(), 10); // Check width\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14many code following this expression is unreachable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unreachable_code)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"as_ref_mut","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\as_ref_mut.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0599`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `licensing_info`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits3.rs","byte_start":491,"byte_end":522,"line_start":18,"line_end":18,"column_start":1,"column_end":32,"is_primary":true,"text":[{"text":"impl Licensed for OtherSoftware {} // Don't edit this line.","highlight_start":1,"highlight_end":32}],"label":"missing `licensing_info` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\15_traits\\traits3.rs","byte_start":289,"byte_end":324,"line_start":6,"line_end":6,"column_start":5,"column_end":40,"is_primary":false,"text":[{"text":"    fn licensing_info(&self) -> String;","highlight_start":5,"highlight_end":40}],"label":"`licensing_info` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn licensing_info(&self) -> String { todo!() }`","code":null,"level":"help","spans":[{"file_name":"exercises\\15_traits\\traits3.rs","byte_start":524,"byte_end":524,"line_start":18,"line_end":18,"column_start":34,"column_end":34,"is_primary":true,"text":[{"text":"impl Licensed for OtherSoftware {} // Don't edit this line.","highlight_start":34,"highlight_end":34}],"label":null,"suggested_replacement":"fn licensing_info(&self) -> String { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: not all trait items implemented, missing: `licensing_info`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits3.rs:18:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn licensing_info(&self) -> String;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`licensing_info` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl Licensed for OtherSoftware {} // Don't edit this line.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `licensing_info` in implementation\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1467,"byte_end":1477,"line_start":46,"line_end":46,"column_start":35,"column_end":45,"is_primary":true,"text":[{"text":"                if !(*left_val == *right_val) {","highlight_start":35,"highlight_end":45}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\17_tests\\tests3.rs","byte_start":762,"byte_end":785,"line_start":32,"line_end":32,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        assert_eq!(todo!(), 10); // Check width","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1454,"byte_end":1463,"line_start":46,"line_end":46,"column_start":22,"column_end":31,"is_primary":false,"text":[{"text":"                if !(*left_val == *right_val) {","highlight_start":22,"highlight_end":31}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\17_tests\\tests3.rs","byte_start":762,"byte_end":785,"line_start":32,"line_end":32,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        assert_eq!(todo!(), 10); // Check width","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\17_tests\\tests3.rs:32:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(todo!(), 10); // Check width\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11many code following this expression is unreachable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1375,"byte_end":1381,"line_start":44,"line_end":44,"column_start":16,"column_end":22,"is_primary":true,"text":[{"text":"        match (&$left, &$right) {","highlight_start":16,"highlight_end":22}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\17_tests\\tests3.rs","byte_start":810,"byte_end":833,"line_start":33,"line_end":33,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        assert_eq!(todo!(), 20); // Check height","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29773,"byte_end":29820,"line_start":875,"line_end":875,"column_start":9,"column_end":56,"is_primary":false,"text":[{"text":"        $crate::panicking::panic(\"not yet implemented\")","highlight_start":9,"highlight_end":56}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\17_tests\\tests3.rs","byte_start":821,"byte_end":828,"line_start":33,"line_end":33,"column_start":20,"column_end":27,"is_primary":false,"text":[{"text":"        assert_eq!(todo!(), 20); // Check height","highlight_start":20,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"todo!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":29733,"byte_end":29750,"line_start":873,"line_end":873,"column_start":1,"column_end":18,"is_primary":false,"text":[{"text":"macro_rules! todo {","highlight_start":1,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\17_tests\\tests3.rs:33:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(todo!(), 20); // Check height\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14many code following this expression is unreachable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unreachable expression","code":{"code":"unreachable_code","explanation":null},"level":"warning","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1467,"byte_end":1477,"line_start":46,"line_end":46,"column_start":35,"column_end":45,"is_primary":true,"text":[{"text":"                if !(*left_val == *right_val) {","highlight_start":35,"highlight_end":45}],"label":"unreachable expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\17_tests\\tests3.rs","byte_start":810,"byte_end":833,"line_start":33,"line_end":33,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        assert_eq!(todo!(), 20); // Check height","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1454,"byte_end":1463,"line_start":46,"line_end":46,"column_start":22,"column_end":31,"is_primary":false,"text":[{"text":"                if !(*left_val == *right_val) {","highlight_start":22,"highlight_end":31}],"label":"any code following this expression is unreachable","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\17_tests\\tests3.rs","byte_start":810,"byte_end":833,"line_start":33,"line_end":33,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        assert_eq!(todo!(), 20); // Check height","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unreachable expression\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\17_tests\\tests3.rs:33:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(todo!(), 20); // Check height\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11munreachable expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11many code following this expression is unreachable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this warning originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0046`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0046`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `your_character` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types2.rs","byte_start":738,"byte_end":752,"line_start":21,"line_end":21,"column_start":8,"column_end":22,"is_primary":true,"text":[{"text":"    if your_character.is_alphabetic() {","highlight_start":8,"highlight_end":22}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `your_character` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types2.rs:21:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    if your_character.is_alphabetic() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `your_character` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types2.rs","byte_start":820,"byte_end":834,"line_start":23,"line_end":23,"column_start":15,"column_end":29,"is_primary":true,"text":[{"text":"    } else if your_character.is_numeric() {","highlight_start":15,"highlight_end":29}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `your_character` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types2.rs:23:15\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    } else if your_character.is_numeric() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\16_lifetimes\\lifetimes1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liblifetimes1_sol-e89e81706d24b3bc.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"can't compare `!` with `i32`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1464,"byte_end":1466,"line_start":46,"line_end":46,"column_start":32,"column_end":34,"is_primary":true,"text":[{"text":"                if !(*left_val == *right_val) {","highlight_start":32,"highlight_end":34}],"label":"no implementation for `! == i32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\17_tests\\tests3.rs","byte_start":762,"byte_end":785,"line_start":32,"line_end":32,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        assert_eq!(todo!(), 10); // Check width","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `PartialEq<i32>` is not implemented for `!`\nbut trait `PartialEq<!>` is implemented for it","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `!`, found `i32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: can't compare `!` with `i32`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\17_tests\\tests3.rs:32:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(todo!(), 10); // Check width\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno implementation for `! == i32`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the trait `PartialEq<\u001b[0m\u001b[0m\u001b[1m\u001b[35mi32\u001b[0m\u001b[0m>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis not\u001b[0m\u001b[0m implemented for `!`\u001b[0m\n\u001b[0m           but trait `PartialEq<\u001b[0m\u001b[0m\u001b[1m\u001b[35m!\u001b[0m\u001b[0m>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for it\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `\u001b[0m\u001b[0m\u001b[1m\u001b[35m!\u001b[0m\u001b[0m`, found `\u001b[0m\u001b[0m\u001b[1m\u001b[35mi32\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"can't compare `!` with `i32`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1464,"byte_end":1466,"line_start":46,"line_end":46,"column_start":32,"column_end":34,"is_primary":true,"text":[{"text":"                if !(*left_val == *right_val) {","highlight_start":32,"highlight_end":34}],"label":"no implementation for `! == i32`","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\17_tests\\tests3.rs","byte_start":810,"byte_end":833,"line_start":33,"line_end":33,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        assert_eq!(todo!(), 20); // Check height","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"the trait `PartialEq<i32>` is not implemented for `!`\nbut trait `PartialEq<!>` is implemented for it","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `!`, found `i32`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: can't compare `!` with `i32`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\17_tests\\tests3.rs:33:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m33\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(todo!(), 20); // Check height\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno implementation for `! == i32`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the trait `PartialEq<\u001b[0m\u001b[0m\u001b[1m\u001b[35mi32\u001b[0m\u001b[0m>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis not\u001b[0m\u001b[0m implemented for `!`\u001b[0m\n\u001b[0m           but trait `PartialEq<\u001b[0m\u001b[0m\u001b[1m\u001b[35m!\u001b[0m\u001b[0m>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for it\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `\u001b[0m\u001b[0m\u001b[1m\u001b[35m!\u001b[0m\u001b[0m`, found `\u001b[0m\u001b[0m\u001b[1m\u001b[35mi32\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\13_error_handling\\errors3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors3_sol-5fbc0167f27af908.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\21_macros\\macros1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmacros1_sol-192fbba0120efc2c.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\17_tests\\tests3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"generics1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\14_generics\\generics1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"type annotations needed for `Vec<_>`","code":{"code":"E0282","explanation":"The compiler could not infer a type and asked for a type annotation.\n\nErroneous code example:\n\n```compile_fail,E0282\nlet x = Vec::new();\n```\n\nThis error indicates that type inference did not result in one unique possible\ntype, and extra information is required. In most cases this can be provided\nby adding a type annotation. Sometimes you need to specify a generic type\nparameter manually.\n\nIn the example above, type `Vec` has a type parameter `T`. When calling\n`Vec::new`, barring any other later usage of the variable `x` that allows the\ncompiler to infer what type `T` is, the compiler needs to be told what it is.\n\nThe type can be specified on the variable:\n\n```\nlet x: Vec<i32> = Vec::new();\n```\n\nThe type can also be specified in the path of the expression:\n\n```\nlet x = Vec::<i32>::new();\n```\n\nIn cases with more complex types, it is not necessary to annotate the full\ntype. Once the ambiguity is resolved, the compiler can infer the rest:\n\n```\nlet x: Vec<_> = \"hello\".chars().rev().collect();\n```\n\nAnother way to provide the compiler with enough information, is to specify the\ngeneric type parameter:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<char>>();\n```\n\nAgain, you need not specify the full type if the compiler can infer it:\n\n```\nlet x = \"hello\".chars().rev().collect::<Vec<_>>();\n```\n\nApart from a method or function with a generic type parameter, this error can\noccur when a type parameter of a struct or trait cannot be inferred. In that\ncase it is not always possible to use a type annotation, because all candidates\nhave the same return type. For instance:\n\n```compile_fail,E0282\nstruct Foo<T> {\n    num: T,\n}\n\nimpl<T> Foo<T> {\n    fn bar() -> i32 {\n        0\n    }\n\n    fn baz() {\n        let number = Foo::bar();\n    }\n}\n```\n\nThis will fail because the compiler does not know which instance of `Foo` to\ncall `bar` on. Change `Foo::bar()` to `Foo::<T>::bar()` to resolve the error.\n"},"level":"error","spans":[{"file_name":"exercises\\14_generics\\generics1.rs","byte_start":450,"byte_end":460,"line_start":9,"line_end":9,"column_start":23,"column_end":33,"is_primary":false,"text":[{"text":"    let mut numbers = Vec::new();","highlight_start":23,"highlight_end":33}],"label":"type must be known at this point","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\14_generics\\generics1.rs","byte_start":436,"byte_end":447,"line_start":9,"line_end":9,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let mut numbers = Vec::new();","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider giving `numbers` an explicit type, where the type for type parameter `T` is specified","code":null,"level":"help","spans":[{"file_name":"exercises\\14_generics\\generics1.rs","byte_start":447,"byte_end":447,"line_start":9,"line_end":9,"column_start":20,"column_end":20,"is_primary":true,"text":[{"text":"    let mut numbers = Vec::new();","highlight_start":20,"highlight_end":20}],"label":null,"suggested_replacement":": Vec<T>","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0282]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: type annotations needed for `Vec<_>`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\14_generics\\generics1.rs:9:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut numbers = Vec::new();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mtype must be known at this point\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider giving `numbers` an explicit type, where the type for type parameter `T` is specified\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut numbers\u001b[0m\u001b[0m\u001b[38;5;10m: Vec<T>\u001b[0m\u001b[0m = Vec::new();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\06_move_semantics\\move_semantics4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmove_semantics4_sol-12fe2274691b0632.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"intro1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\00_intro\\intro1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libintro1-aec6c96efbb91a2e.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"generics1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\14_generics\\generics1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0282`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0282`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find function `call_me` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\02_functions\\functions1.rs","byte_start":105,"byte_end":112,"line_start":4,"line_end":4,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"    call_me(); // Don't change this line","highlight_start":5,"highlight_end":12}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find function `call_me` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions1.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    call_me(); // Don't change this line\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\16_lifetimes\\lifetimes2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liblifetimes2_sol-b1a9a8bcd217748c.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\10_modules\\modules3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmodules3_sol-1e26b88123c6f1a0.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors6_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\13_error_handling\\errors6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors6_sol-1577cd7adec5b423.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libiterators3_sol-70eb232549f3dfe2.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\09_strings\\strings1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstrings1_sol-fb375c893e9e567f.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected identifier, found `,`","code":null,"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits4.rs","byte_start":339,"byte_end":340,"line_start":14,"line_end":14,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"fn compare_license_types(software1: ???, software2: ???) -> bool {","highlight_start":40,"highlight_end":41}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this comma","code":null,"level":"help","spans":[{"file_name":"exercises\\15_traits\\traits4.rs","byte_start":339,"byte_end":340,"line_start":14,"line_end":14,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"fn compare_license_types(software1: ???, software2: ???) -> bool {","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected identifier, found `,`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits4.rs:14:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn compare_license_types(software1: ???, software2: ???) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove this comma\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mfn compare_license_types(software1: ???\u001b[0m\u001b[0m\u001b[38;5;9m,\u001b[0m\u001b[0m software2: ???) -> bool {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mfn compare_license_types(software1: ??? software2: ???) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected a trait, found type","code":null,"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits4.rs","byte_start":338,"byte_end":350,"line_start":14,"line_end":14,"column_start":39,"column_end":51,"is_primary":true,"text":[{"text":"fn compare_license_types(software1: ???, software2: ???) -> bool {","highlight_start":39,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected a trait, found type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits4.rs:14:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn compare_license_types(software1: ???, software2: ???) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected identifier, found `)`","code":null,"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits4.rs","byte_start":355,"byte_end":356,"line_start":14,"line_end":14,"column_start":56,"column_end":57,"is_primary":true,"text":[{"text":"fn compare_license_types(software1: ???, software2: ???) -> bool {","highlight_start":56,"highlight_end":57}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected identifier, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits4.rs:14:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn compare_license_types(software1: ???, software2: ???) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `software1` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits4.rs","byte_start":371,"byte_end":380,"line_start":15,"line_end":15,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    software1.licensing_info() == software2.licensing_info()","highlight_start":5,"highlight_end":14}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `software1` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits4.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    software1.licensing_info() == software2.licensing_info()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `software2` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits4.rs","byte_start":401,"byte_end":410,"line_start":15,"line_end":15,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"    software1.licensing_info() == software2.licensing_info()","highlight_start":35,"highlight_end":44}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `software2` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits4.rs:15:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    software1.licensing_info() == software2.licensing_info()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Resize` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":136,"byte_end":142,"line_start":7,"line_end":7,"column_start":31,"column_end":37,"is_primary":true,"text":[{"text":"    println!(\"{:?}\", Message::Resize);","highlight_start":31,"highlight_end":37}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":17,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Resize` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Resize` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums1.rs:7:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Resize` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{:?}\", Message::Resize);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Move` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":175,"byte_end":179,"line_start":8,"line_end":8,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"    println!(\"{:?}\", Message::Move);","highlight_start":31,"highlight_end":35}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":17,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Move` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Move` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums1.rs:8:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Move` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{:?}\", Message::Move);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Echo` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":212,"byte_end":216,"line_start":9,"line_end":9,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"    println!(\"{:?}\", Message::Echo);","highlight_start":31,"highlight_end":35}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":17,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Echo` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Echo` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums1.rs:9:31\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Echo` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{:?}\", Message::Echo);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `ChangeColor` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":249,"byte_end":260,"line_start":10,"line_end":10,"column_start":31,"column_end":42,"is_primary":true,"text":[{"text":"    println!(\"{:?}\", Message::ChangeColor);","highlight_start":31,"highlight_end":42}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":17,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `ChangeColor` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `ChangeColor` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums1.rs:10:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `ChangeColor` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{:?}\", Message::ChangeColor);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no variant or associated item named `Quit` found for enum `Message` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":293,"byte_end":297,"line_start":11,"line_end":11,"column_start":31,"column_end":35,"is_primary":true,"text":[{"text":"    println!(\"{:?}\", Message::Quit);","highlight_start":31,"highlight_end":35}],"label":"variant or associated item not found in `Message`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\08_enums\\enums1.rs","byte_start":17,"byte_end":29,"line_start":2,"line_end":2,"column_start":1,"column_end":13,"is_primary":false,"text":[{"text":"enum Message {","highlight_start":1,"highlight_end":13}],"label":"variant or associated item `Quit` not found for this enum","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no variant or associated item named `Quit` found for enum `Message` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\08_enums\\enums1.rs:11:31\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0menum Message {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariant or associated item `Quit` not found for this enum\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{:?}\", Message::Quit);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvariant or associated item not found in `Message`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0599`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0599`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"borrow of moved value: `vec0`","code":{"code":"E0382","explanation":"A variable was used after its contents have been moved elsewhere.\n\nErroneous code example:\n\n```compile_fail,E0382\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = MyStruct{ s: 5u32 };\n    let y = x;\n    x.s = 6;\n    println!(\"{}\", x.s);\n}\n```\n\nSince `MyStruct` is a type that is not marked `Copy`, the data gets moved out\nof `x` when we set `y`. This is fundamental to Rust's ownership system: outside\nof workarounds like `Rc`, a value cannot be owned by more than one variable.\n\nSometimes we don't need to move the value. Using a reference, we can let another\nfunction borrow the value without changing its ownership. In the example below,\nwe don't actually have to move our string to `calculate_length`, we can give it\na reference to it with `&` instead.\n\n```\nfn main() {\n    let s1 = String::from(\"hello\");\n\n    let len = calculate_length(&s1);\n\n    println!(\"The length of '{}' is {}.\", s1, len);\n}\n\nfn calculate_length(s: &String) -> usize {\n    s.len()\n}\n```\n\nA mutable reference can be created with `&mut`.\n\nSometimes we don't want a reference, but a duplicate. All types marked `Clone`\ncan be duplicated by calling `.clone()`. Subsequent changes to a clone do not\naffect the original variable.\n\nMost types in the standard library are marked `Clone`. The example below\ndemonstrates using `clone()` on a string. `s1` is first set to \"many\", and then\ncopied to `s2`. Then the first character of `s1` is removed, without affecting\n`s2`. \"any many\" is printed to the console.\n\n```\nfn main() {\n    let mut s1 = String::from(\"many\");\n    let s2 = s1.clone();\n    s1.remove(0);\n    println!(\"{} {}\", s1, s2);\n}\n```\n\nIf we control the definition of a type, we can implement `Clone` on it ourselves\nwith `#[derive(Clone)]`.\n\nSome types have no ownership semantics at all and are trivial to duplicate. An\nexample is `i32` and the other number types. We don't have to call `.clone()` to\nclone them, because they are marked `Copy` in addition to `Clone`. Implicit\ncloning is more convenient in this case. We can mark our own types `Copy` if\nall their members also are marked `Copy`.\n\nIn the example below, we implement a `Point` type. Because it only stores two\nintegers, we opt-out of ownership semantics with `Copy`. Then we can\n`let p2 = p1` without `p1` being moved.\n\n```\n#[derive(Copy, Clone)]\nstruct Point { x: i32, y: i32 }\n\nfn main() {\n    let mut p1 = Point{ x: -1, y: 2 };\n    let p2 = p1;\n    p1.x = 1;\n    println!(\"p1: {}, {}\", p1.x, p1.y);\n    println!(\"p2: {}, {}\", p2.x, p2.y);\n}\n```\n\nAlternatively, if we don't control the struct's definition, or mutable shared\nownership is truly required, we can use `Rc` and `RefCell`:\n\n```\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = Rc::new(RefCell::new(MyStruct{ s: 5u32 }));\n    let y = x.clone();\n    x.borrow_mut().s = 6;\n    println!(\"{}\", x.borrow().s);\n}\n```\n\nWith this approach, x and y share ownership of the data via the `Rc` (reference\ncount type). `RefCell` essentially performs runtime borrow checking: ensuring\nthat at most one writer or multiple readers can access the data at any one time.\n\nIf you wish to learn more about ownership in Rust, start with the\n[Understanding Ownership][understanding-ownership] chapter in the Book.\n\n[understanding-ownership]: https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\n"},"level":"error","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics2.rs","byte_start":425,"byte_end":429,"line_start":23,"line_end":23,"column_start":29,"column_end":33,"is_primary":false,"text":[{"text":"        let vec1 = fill_vec(vec0);","highlight_start":29,"highlight_end":33}],"label":"value moved here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1375,"byte_end":1381,"line_start":44,"line_end":44,"column_start":16,"column_end":22,"is_primary":true,"text":[{"text":"        match (&$left, &$right) {","highlight_start":16,"highlight_end":22}],"label":"value borrowed here after move","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\06_move_semantics\\move_semantics2.rs","byte_start":441,"byte_end":471,"line_start":25,"line_end":25,"column_start":9,"column_end":39,"is_primary":false,"text":[{"text":"        assert_eq!(vec0, [22, 44, 66]);","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"assert_eq!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":1294,"byte_end":1316,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":false,"text":[{"text":"macro_rules! assert_eq {","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\06_move_semantics\\move_semantics2.rs","byte_start":371,"byte_end":375,"line_start":21,"line_end":21,"column_start":13,"column_end":17,"is_primary":false,"text":[{"text":"        let vec0 = vec![22, 44, 66];","highlight_start":13,"highlight_end":17}],"label":"move occurs because `vec0` has type `Vec<i32>`, which does not implement the `Copy` trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider changing this parameter type in function `fill_vec` to borrow instead if owning the value isn't necessary","code":null,"level":"note","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics2.rs","byte_start":17,"byte_end":25,"line_start":1,"line_end":1,"column_start":18,"column_end":26,"is_primary":true,"text":[{"text":"fn fill_vec(vec: Vec<i32>) -> Vec<i32> {","highlight_start":18,"highlight_end":26}],"label":"this parameter takes ownership of the value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics2.rs","byte_start":3,"byte_end":11,"line_start":1,"line_end":1,"column_start":4,"column_end":12,"is_primary":false,"text":[{"text":"fn fill_vec(vec: Vec<i32>) -> Vec<i32> {","highlight_start":4,"highlight_end":12}],"label":"in this function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider cloning the value if the performance cost is acceptable","code":null,"level":"help","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics2.rs","byte_start":429,"byte_end":429,"line_start":23,"line_end":23,"column_start":33,"column_end":33,"is_primary":true,"text":[{"text":"        let vec1 = fill_vec(vec0);","highlight_start":33,"highlight_end":33}],"label":null,"suggested_replacement":".clone()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0382]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: borrow of moved value: `vec0`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics2.rs:25:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let vec0 = vec![22, 44, 66];\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmove occurs because `vec0` has type `Vec<i32>`, which does not implement the `Copy` trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let vec1 = fill_vec(vec0);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvalue moved here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(vec0, [22, 44, 66]);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvalue borrowed here after move\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: consider changing this parameter type in function `fill_vec` to borrow instead if owning the value isn't necessary\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics2.rs:1:18\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn fill_vec(vec: Vec<i32>) -> Vec<i32> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis parameter takes ownership of the value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this function\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `assert_eq` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider cloning the value if the performance cost is acceptable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let vec1 = fill_vec(vec0\u001b[0m\u001b[0m\u001b[38;5;10m.clone()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                 \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0382`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0382`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\quizzes\\quiz2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libquiz2_sol-640a236a32ff008d.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"arc1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\19_smart_pointers\\arc1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libarc1_sol-e020de1b4af11ac9.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\04_primitive_types\\primitive_types1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types1_sol-34465ae1cfbb02af.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\13_error_handling\\errors5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors5_sol-28aea4b6bc76e07f.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\20_threads\\threads3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libthreads3_sol-02529034bb6008f7.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmove_semantics4-d207c159d8bbdcb9.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"generics1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\14_generics\\generics1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libgenerics1_sol-e0b40c89568b4e23.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\06_move_semantics\\move_semantics3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmove_semantics3_sol-fe1c019d00212c9d.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\07_structs\\structs3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstructs3_sol-cbfbdfa1ae959a83.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\22_clippy\\clippy2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"for loop over an `Option`. This is more readably written as an `if let` statement","code":{"code":"for_loops_over_fallibles","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":108,"byte_end":114,"line_start":5,"line_end":5,"column_start":14,"column_end":20,"is_primary":true,"text":[{"text":"    for x in option {","highlight_start":14,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(for_loops_over_fallibles)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"to check pattern in a loop use `while let`","code":null,"level":"help","spans":[{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":99,"byte_end":103,"line_start":5,"line_end":5,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    for x in option {","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"while let Some(","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":99,"byte_end":140,"line_start":5,"line_end":7,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    for x in option {","highlight_start":5,"highlight_end":22},{"text":"        res += x;","highlight_start":1,"highlight_end":18},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":104,"byte_end":108,"line_start":5,"line_end":5,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    for x in option {","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":") = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider using `if let` to clear intent","code":null,"level":"help","spans":[{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":99,"byte_end":103,"line_start":5,"line_end":5,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    for x in option {","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":"if let Some(","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":99,"byte_end":140,"line_start":5,"line_end":7,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    for x in option {","highlight_start":5,"highlight_end":22},{"text":"        res += x;","highlight_start":1,"highlight_end":18},{"text":"    }","highlight_start":1,"highlight_end":6}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\22_clippy\\clippy2.rs","byte_start":104,"byte_end":108,"line_start":5,"line_end":5,"column_start":10,"column_end":14,"is_primary":true,"text":[{"text":"    for x in option {","highlight_start":10,"highlight_end":14}],"label":null,"suggested_replacement":") = ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: for loop over an `Option`. This is more readably written as an `if let` statement\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\22_clippy\\clippy2.rs:5:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for x in option {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(for_loops_over_fallibles)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: to check pattern in a loop use `while let`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;9mfor \u001b[0m\u001b[0mx\u001b[0m\u001b[0m\u001b[38;5;9m in \u001b[0m\u001b[0moption {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mwhile let Some(\u001b[0m\u001b[0mx\u001b[0m\u001b[0m\u001b[38;5;10m) = \u001b[0m\u001b[0moption {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider using `if let` to clear intent\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;9mfor \u001b[0m\u001b[0mx\u001b[0m\u001b[0m\u001b[38;5;9m in \u001b[0m\u001b[0moption {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mif let Some(\u001b[0m\u001b[0mx\u001b[0m\u001b[0m\u001b[38;5;10m) = \u001b[0m\u001b[0moption {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected identifier, found `)`","code":null,"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits5.rs","byte_start":438,"byte_end":439,"line_start":22,"line_end":22,"column_start":23,"column_end":24,"is_primary":true,"text":[{"text":"fn some_func(item: ???) -> bool {","highlight_start":23,"highlight_end":24}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected identifier, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits5.rs:22:23\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn some_func(item: ???) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"use of moved value: `tx`","code":{"code":"E0382","explanation":"A variable was used after its contents have been moved elsewhere.\n\nErroneous code example:\n\n```compile_fail,E0382\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = MyStruct{ s: 5u32 };\n    let y = x;\n    x.s = 6;\n    println!(\"{}\", x.s);\n}\n```\n\nSince `MyStruct` is a type that is not marked `Copy`, the data gets moved out\nof `x` when we set `y`. This is fundamental to Rust's ownership system: outside\nof workarounds like `Rc`, a value cannot be owned by more than one variable.\n\nSometimes we don't need to move the value. Using a reference, we can let another\nfunction borrow the value without changing its ownership. In the example below,\nwe don't actually have to move our string to `calculate_length`, we can give it\na reference to it with `&` instead.\n\n```\nfn main() {\n    let s1 = String::from(\"hello\");\n\n    let len = calculate_length(&s1);\n\n    println!(\"The length of '{}' is {}.\", s1, len);\n}\n\nfn calculate_length(s: &String) -> usize {\n    s.len()\n}\n```\n\nA mutable reference can be created with `&mut`.\n\nSometimes we don't want a reference, but a duplicate. All types marked `Clone`\ncan be duplicated by calling `.clone()`. Subsequent changes to a clone do not\naffect the original variable.\n\nMost types in the standard library are marked `Clone`. The example below\ndemonstrates using `clone()` on a string. `s1` is first set to \"many\", and then\ncopied to `s2`. Then the first character of `s1` is removed, without affecting\n`s2`. \"any many\" is printed to the console.\n\n```\nfn main() {\n    let mut s1 = String::from(\"many\");\n    let s2 = s1.clone();\n    s1.remove(0);\n    println!(\"{} {}\", s1, s2);\n}\n```\n\nIf we control the definition of a type, we can implement `Clone` on it ourselves\nwith `#[derive(Clone)]`.\n\nSome types have no ownership semantics at all and are trivial to duplicate. An\nexample is `i32` and the other number types. We don't have to call `.clone()` to\nclone them, because they are marked `Copy` in addition to `Clone`. Implicit\ncloning is more convenient in this case. We can mark our own types `Copy` if\nall their members also are marked `Copy`.\n\nIn the example below, we implement a `Point` type. Because it only stores two\nintegers, we opt-out of ownership semantics with `Copy`. Then we can\n`let p2 = p1` without `p1` being moved.\n\n```\n#[derive(Copy, Clone)]\nstruct Point { x: i32, y: i32 }\n\nfn main() {\n    let mut p1 = Point{ x: -1, y: 2 };\n    let p2 = p1;\n    p1.x = 1;\n    println!(\"p1: {}, {}\", p1.x, p1.y);\n    println!(\"p2: {}, {}\", p2.x, p2.y);\n}\n```\n\nAlternatively, if we don't control the struct's definition, or mutable shared\nownership is truly required, we can use `Rc` and `RefCell`:\n\n```\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = Rc::new(RefCell::new(MyStruct{ s: 5u32 }));\n    let y = x.clone();\n    x.borrow_mut().s = 6;\n    println!(\"{}\", x.borrow().s);\n}\n```\n\nWith this approach, x and y share ownership of the data via the `Rc` (reference\ncount type). `RefCell` essentially performs runtime borrow checking: ensuring\nthat at most one writer or multiple readers can access the data at any one time.\n\nIf you wish to learn more about ownership in Rust, start with the\n[Understanding Ownership][understanding-ownership] chapter in the Book.\n\n[understanding-ownership]: https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\n"},"level":"error","spans":[{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":505,"byte_end":528,"line_start":21,"line_end":21,"column_start":9,"column_end":32,"is_primary":false,"text":[{"text":"        for val in q.first_half {","highlight_start":9,"highlight_end":32}],"label":"inside of this loop","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":505,"byte_end":671,"line_start":21,"line_end":25,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        for val in q.first_half {","highlight_start":9,"highlight_end":34},{"text":"            println!(\"Sending {val:?}\");","highlight_start":1,"highlight_end":41},{"text":"            tx.send(val).unwrap();","highlight_start":1,"highlight_end":35},{"text":"            thread::sleep(Duration::from_millis(250));","highlight_start":1,"highlight_end":55},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":487,"byte_end":494,"line_start":20,"line_end":20,"column_start":19,"column_end":26,"is_primary":false,"text":[{"text":"    thread::spawn(move || {","highlight_start":19,"highlight_end":26}],"label":"value moved into closure here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":584,"byte_end":586,"line_start":23,"line_end":23,"column_start":13,"column_end":15,"is_primary":false,"text":[{"text":"            tx.send(val).unwrap();","highlight_start":13,"highlight_end":15}],"label":"variable moved due to use in closure","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":797,"byte_end":799,"line_start":31,"line_end":31,"column_start":13,"column_end":15,"is_primary":false,"text":[{"text":"            tx.send(val).unwrap();","highlight_start":13,"highlight_end":15}],"label":"use occurs due to use in closure","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":699,"byte_end":706,"line_start":28,"line_end":28,"column_start":19,"column_end":26,"is_primary":true,"text":[{"text":"    thread::spawn(move || {","highlight_start":19,"highlight_end":26}],"label":"value used here after move","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":302,"byte_end":304,"line_start":17,"line_end":17,"column_start":22,"column_end":24,"is_primary":false,"text":[{"text":"fn send_tx(q: Queue, tx: mpsc::Sender<u32>) {","highlight_start":22,"highlight_end":24}],"label":"move occurs because `tx` has type `std::sync::mpsc::Sender<u32>`, which does not implement the `Copy` trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider moving the expression out of the loop so it is only moved once","code":null,"level":"help","spans":[{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":505,"byte_end":505,"line_start":21,"line_end":21,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        for val in q.first_half {","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let mut value = tx.send(val);\n        ","suggestion_applicability":"MaybeIncorrect","expansion":{"span":{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":505,"byte_end":671,"line_start":21,"line_end":25,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"        for val in q.first_half {","highlight_start":9,"highlight_end":34},{"text":"            println!(\"Sending {val:?}\");","highlight_start":1,"highlight_end":41},{"text":"            tx.send(val).unwrap();","highlight_start":1,"highlight_end":35},{"text":"            thread::sleep(Duration::from_millis(250));","highlight_start":1,"highlight_end":55},{"text":"        }","highlight_start":1,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"desugaring of `for` loop","def_site_span":{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":584,"byte_end":596,"line_start":23,"line_end":23,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"            tx.send(val).unwrap();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"value","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null},{"message":"consider cloning the value before moving it into the closure","code":null,"level":"help","spans":[{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":473,"byte_end":473,"line_start":20,"line_end":20,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    thread::spawn(move || {","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"let value = tx.clone();\n    ","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"exercises\\20_threads\\threads3.rs","byte_start":584,"byte_end":586,"line_start":23,"line_end":23,"column_start":13,"column_end":15,"is_primary":true,"text":[{"text":"            tx.send(val).unwrap();","highlight_start":13,"highlight_end":15}],"label":null,"suggested_replacement":"value","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0382]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: use of moved value: `tx`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\20_threads\\threads3.rs:28:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn send_tx(q: Queue, tx: mpsc::Sender<u32>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmove occurs because `tx` has type `std::sync::mpsc::Sender<u32>`, which does not implement the `Copy` trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    thread::spawn(move || {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvalue moved into closure here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        for val in q.first_half {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14minside of this loop\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            println!(\"Sending {val:?}\");\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tx.send(val).unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvariable moved due to use in closure\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    thread::spawn(move || {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvalue used here after move\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            tx.send(val).unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14muse occurs due to use in closure\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider moving the expression out of the loop so it is only moved once\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mlet mut value = tx.send(val);\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~         \u001b[0m\u001b[0mfor val in q.first_half {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             println!(\"Sending {val:?}\");\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10mvalue\u001b[0m\u001b[0m.unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider cloning the value before moving it into the closure\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10mlet value = tx.clone();\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~     \u001b[0m\u001b[0mthread::spawn(move || {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         for val in q.first_half {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             println!(\"Sending {val:?}\");\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[38;5;10mvalue\u001b[0m\u001b[0m.send(val).unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\06_move_semantics\\move_semantics4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmove_semantics4_sol-500322fd1f4e2988.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"arc1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\arc1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `child_numbers` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\19_smart_pointers\\arc1.rs","byte_start":1259,"byte_end":1272,"line_start":35,"line_end":35,"column_start":28,"column_end":41,"is_primary":true,"text":[{"text":"            let sum: u32 = child_numbers.iter().filter(|&&n| n % 8 == offset).sum();","highlight_start":28,"highlight_end":41}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `child_numbers` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\arc1.rs:35:28\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            let sum: u32 = child_numbers.iter().filter(|&&n| n % 8 == offset).sum();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\20_threads\\threads3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0382`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0382`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"arc1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\arc1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused import: `sync::Arc`","code":{"code":"unused_imports","explanation":null},"level":"error","spans":[{"file_name":"exercises\\19_smart_pointers\\arc1.rs","byte_start":851,"byte_end":860,"line_start":20,"line_end":20,"column_start":11,"column_end":20,"is_primary":true,"text":[{"text":"use std::{sync::Arc, thread};","highlight_start":11,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the lint level is defined here","code":null,"level":"note","spans":[{"file_name":"exercises\\19_smart_pointers\\arc1.rs","byte_start":824,"byte_end":838,"line_start":19,"line_end":19,"column_start":11,"column_end":25,"is_primary":true,"text":[{"text":"#![forbid(unused_imports)]","highlight_start":11,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"exercises\\19_smart_pointers\\arc1.rs","byte_start":851,"byte_end":862,"line_start":20,"line_end":20,"column_start":11,"column_end":22,"is_primary":true,"text":[{"text":"use std::{sync::Arc, thread};","highlight_start":11,"highlight_end":22}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"exercises\\19_smart_pointers\\arc1.rs","byte_start":850,"byte_end":851,"line_start":20,"line_end":20,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"use std::{sync::Arc, thread};","highlight_start":10,"highlight_end":11}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"exercises\\19_smart_pointers\\arc1.rs","byte_start":868,"byte_end":869,"line_start":20,"line_end":20,"column_start":28,"column_end":29,"is_primary":true,"text":[{"text":"use std::{sync::Arc, thread};","highlight_start":28,"highlight_end":29}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `sync::Arc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\arc1.rs:20:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0muse std::{sync::Arc, thread};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the lint level is defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\19_smart_pointers\\arc1.rs:19:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m#![forbid(unused_imports)]\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"try_from_into","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\try_from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\try_from_into.rs","byte_start":952,"byte_end":977,"line_start":31,"line_end":31,"column_start":44,"column_end":69,"is_primary":true,"text":[{"text":"    fn try_from(tuple: (i16, i16, i16)) -> Result<Self, Self::Error> {}","highlight_start":44,"highlight_end":69}],"label":"expected `Result<Color, IntoColorError>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\try_from_into.rs","byte_start":916,"byte_end":924,"line_start":31,"line_end":31,"column_start":8,"column_end":16,"is_primary":false,"text":[{"text":"    fn try_from(tuple: (i16, i16, i16)) -> Result<Self, Self::Error> {}","highlight_start":8,"highlight_end":16}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Result<Color, IntoColorError>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\try_from_into.rs:31:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from(tuple: (i16, i16, i16)) -> Result<Self, Self::Error> {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<Color, IntoColorError>`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<Color, IntoColorError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"try_from_into","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\try_from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\try_from_into.rs","byte_start":1118,"byte_end":1143,"line_start":38,"line_end":38,"column_start":35,"column_end":60,"is_primary":true,"text":[{"text":"    fn try_from(arr: [i16; 3]) -> Result<Self, Self::Error> {}","highlight_start":35,"highlight_end":60}],"label":"expected `Result<Color, IntoColorError>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\try_from_into.rs","byte_start":1091,"byte_end":1099,"line_start":38,"line_end":38,"column_start":8,"column_end":16,"is_primary":false,"text":[{"text":"    fn try_from(arr: [i16; 3]) -> Result<Self, Self::Error> {}","highlight_start":8,"highlight_end":16}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Result<Color, IntoColorError>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\try_from_into.rs:38:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m38\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from(arr: [i16; 3]) -> Result<Self, Self::Error> {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<Color, IntoColorError>`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<Color, IntoColorError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"try_from_into","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\try_from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\try_from_into.rs","byte_start":1338,"byte_end":1363,"line_start":46,"line_end":46,"column_start":35,"column_end":60,"is_primary":true,"text":[{"text":"    fn try_from(slice: &[i16]) -> Result<Self, Self::Error> {}","highlight_start":35,"highlight_end":60}],"label":"expected `Result<Color, IntoColorError>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\try_from_into.rs","byte_start":1311,"byte_end":1319,"line_start":46,"line_end":46,"column_start":8,"column_end":16,"is_primary":false,"text":[{"text":"    fn try_from(slice: &[i16]) -> Result<Self, Self::Error> {}","highlight_start":8,"highlight_end":16}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"  expected enum `Result<Color, IntoColorError>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\try_from_into.rs:46:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn try_from(slice: &[i16]) -> Result<Self, Self::Error> {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Result<Color, IntoColorError>`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m:   expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<Color, IntoColorError>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"from_into","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\from_into.rs","byte_start":1326,"byte_end":1330,"line_start":37,"line_end":37,"column_start":25,"column_end":29,"is_primary":true,"text":[{"text":"    fn from(s: &str) -> Self {}","highlight_start":25,"highlight_end":29}],"label":"expected `Person`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\23_conversions\\from_into.rs","byte_start":1309,"byte_end":1313,"line_start":37,"line_end":37,"column_start":8,"column_end":12,"is_primary":false,"text":[{"text":"    fn from(s: &str) -> Self {}","highlight_start":8,"highlight_end":12}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\from_into.rs:37:25\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn from(s: &str) -> Self {}\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Person`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"not all trait items implemented, missing: `append_bar`","code":{"code":"E0046","explanation":"Items are missing in a trait implementation.\n\nErroneous code example:\n\n```compile_fail,E0046\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {}\n// error: not all trait items implemented, missing: `foo`\n```\n\nWhen trying to make some type implement a trait `Foo`, you must, at minimum,\nprovide implementations for all of `Foo`'s required methods (meaning the\nmethods that do not have default implementations), as well as any required\ntrait items like associated types or constants. Example:\n\n```\ntrait Foo {\n    fn foo();\n}\n\nstruct Bar;\n\nimpl Foo for Bar {\n    fn foo() {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits1.rs","byte_start":163,"byte_end":188,"line_start":7,"line_end":7,"column_start":1,"column_end":26,"is_primary":true,"text":[{"text":"impl AppendBar for String {","highlight_start":1,"highlight_end":26}],"label":"missing `append_bar` in implementation","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\15_traits\\traits1.rs","byte_start":131,"byte_end":159,"line_start":4,"line_end":4,"column_start":5,"column_end":33,"is_primary":false,"text":[{"text":"    fn append_bar(self) -> Self;","highlight_start":5,"highlight_end":33}],"label":"`append_bar` from trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"implement the missing item: `fn append_bar(self) -> Self { todo!() }`","code":null,"level":"help","spans":[{"file_name":"exercises\\15_traits\\traits1.rs","byte_start":249,"byte_end":249,"line_start":9,"line_end":9,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"}","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"fn append_bar(self) -> Self { todo!() }\n","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0046]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: not all trait items implemented, missing: `append_bar`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits1.rs:7:1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn append_bar(self) -> Self;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`append_bar` from trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mimpl AppendBar for String {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmissing `append_bar` in implementation\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"arc1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\arc1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"from_into","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `item` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits5.rs","byte_start":454,"byte_end":458,"line_start":23,"line_end":23,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    item.some_function() && item.other_function()","highlight_start":5,"highlight_end":9}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `item` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits5.rs:23:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    item.some_function() && item.other_function()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `item` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits5.rs","byte_start":478,"byte_end":482,"line_start":23,"line_end":23,"column_start":29,"column_end":33,"is_primary":true,"text":[{"text":"    item.some_function() && item.other_function()","highlight_start":29,"highlight_end":33}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `item` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits5.rs:23:29\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    item.some_function() && item.other_function()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0046`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0046`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"as_ref_mut_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\23_conversions\\as_ref_mut.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libas_ref_mut_sol-a3e61d848fe5d5c9.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\17_tests\\tests2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtests2_sol-279ee92d5a8301e5.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"tests1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\17_tests\\tests1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtests1_sol-026bb660760e61fc.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"box1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\19_smart_pointers\\box1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libbox1_sol-d4b31603f0f77a99.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\22_clippy\\clippy2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libclippy2-2a58b15ec4a684bc.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"try_from_into","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\try_from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\03_if\\if3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libif3_sol-a567b17a6a168318.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected one of `,`, `:`, or `}`, found `!`","code":null,"level":"error","spans":[{"file_name":"exercises\\12_options\\options2.rs","byte_start":323,"byte_end":324,"line_start":14,"line_end":14,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"            assert_eq!(word, target);","highlight_start":22,"highlight_end":23}],"label":"expected one of `,`, `:`, or `}`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\12_options\\options2.rs","byte_start":314,"byte_end":323,"line_start":14,"line_end":14,"column_start":13,"column_end":22,"is_primary":false,"text":[{"text":"            assert_eq!(word, target);","highlight_start":13,"highlight_end":22}],"label":"while parsing this struct field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\12_options\\options2.rs","byte_start":284,"byte_end":299,"line_start":13,"line_end":13,"column_start":16,"column_end":31,"is_primary":false,"text":[{"text":"        word = optional_target {","highlight_start":16,"highlight_end":31}],"label":"while parsing this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected one of `,`, `:`, or `}`, found `!`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options2.rs:14:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        word = optional_target {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwhile parsing this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            assert_eq!(word, target);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `,`, `:`, or `}`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwhile parsing this struct field\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected one of `,`, `:`, or `}`, found `)`","code":null,"level":"error","spans":[{"file_name":"exercises\\12_options\\options2.rs","byte_start":337,"byte_end":338,"line_start":14,"line_end":14,"column_start":36,"column_end":37,"is_primary":true,"text":[{"text":"            assert_eq!(word, target);","highlight_start":36,"highlight_end":37}],"label":"expected one of `,`, `:`, or `}`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\12_options\\options2.rs","byte_start":284,"byte_end":299,"line_start":13,"line_end":13,"column_start":16,"column_end":31,"is_primary":false,"text":[{"text":"        word = optional_target {","highlight_start":16,"highlight_end":31}],"label":"while parsing this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected one of `,`, `:`, or `}`, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options2.rs:14:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        word = optional_target {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwhile parsing this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            assert_eq!(word, target);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `,`, `:`, or `}`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected one of `.`, `;`, `?`, `}`, or an operator, found `{`","code":null,"level":"error","spans":[{"file_name":"exercises\\12_options\\options2.rs","byte_start":847,"byte_end":848,"line_start":32,"line_end":32,"column_start":43,"column_end":44,"is_primary":true,"text":[{"text":"        integer = optional_integers.pop() {","highlight_start":43,"highlight_end":44}],"label":"expected one of `.`, `;`, `?`, `}`, or an operator","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected one of `.`, `;`, `?`, `}`, or an operator, found `{`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options2.rs:32:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        integer = optional_integers.pop() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `.`, `;`, `?`, `}`, or an operator\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `team_1_name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":945,"byte_end":956,"line_start":25,"line_end":25,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let team_1_name = split_iterator.next().unwrap();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":945,"byte_end":956,"line_start":25,"line_end":25,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let team_1_name = split_iterator.next().unwrap();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"_team_1_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `team_1_name`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps3.rs:25:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let team_1_name = split_iterator.next().unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_team_1_name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `team_2_name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":1003,"byte_end":1014,"line_start":26,"line_end":26,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let team_2_name = split_iterator.next().unwrap();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":1003,"byte_end":1014,"line_start":26,"line_end":26,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let team_2_name = split_iterator.next().unwrap();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"_team_2_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `team_2_name`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps3.rs:26:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let team_2_name = split_iterator.next().unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_team_2_name`\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\12_options\\options3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liboptions3_sol-986b00cd149b4941.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\13_error_handling\\errors1.rs","byte_start":883,"byte_end":912,"line_start":28,"line_end":28,"column_start":13,"column_end":41,"is_primary":true,"text":[{"text":"            Ok(\"Hi! My name is Beyoncé\"),","highlight_start":13,"highlight_end":41}],"label":"expected `Option<&str>`, found `Result<&str, _>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected enum `Option<&str>`\n   found enum `Result<&str, _>`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\13_error_handling\\errors1.rs:28:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            Ok(\"Hi! My name is Beyoncé\"),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Option<&str>`, found `Result<&str, _>`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mOption<&str>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m              found enum `\u001b[0m\u001b[0m\u001b[1m\u001b[35mResult<&str, _>\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\04_primitive_types\\primitive_types4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types4_sol-dfd1a1d7d4ccee9f.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\12_options\\options1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liboptions1_sol-ac9639b9edea3a79.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `team_1_score`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":1061,"byte_end":1073,"line_start":27,"line_end":27,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let team_1_score: u8 = split_iterator.next().unwrap().parse().unwrap();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":1061,"byte_end":1073,"line_start":27,"line_end":27,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let team_1_score: u8 = split_iterator.next().unwrap().parse().unwrap();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"_team_1_score","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `team_1_score`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps3.rs:27:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let team_1_score: u8 = split_iterator.next().unwrap().parse().unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_team_1_score`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `team_2_score`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":1141,"byte_end":1153,"line_start":28,"line_end":28,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let team_2_score: u8 = split_iterator.next().unwrap().parse().unwrap();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":1141,"byte_end":1153,"line_start":28,"line_end":28,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let team_2_score: u8 = split_iterator.next().unwrap().parse().unwrap();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"_team_2_score","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `team_2_score`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps3.rs:28:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let team_2_score: u8 = split_iterator.next().unwrap().parse().unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_team_2_score`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `map_err` found for enum `Option` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\13_error_handling\\errors1.rs","byte_start":1030,"byte_end":1110,"line_start":35,"line_end":37,"column_start":13,"column_end":18,"is_primary":false,"text":[{"text":"            generate_nametag_text(String::new())","highlight_start":13,"highlight_end":49},{"text":"                .as_ref()","highlight_start":1,"highlight_end":26},{"text":"                .map_err(|e| e.as_str()),","highlight_start":1,"highlight_end":18}],"label":"","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\13_error_handling\\errors1.rs","byte_start":1110,"byte_end":1117,"line_start":37,"line_end":37,"column_start":18,"column_end":25,"is_primary":true,"text":[{"text":"                .map_err(|e| e.as_str()),","highlight_start":18,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"there is a method `map_or` with a similar name, but with different arguments","code":null,"level":"help","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\option.rs","byte_start":45834,"byte_end":45978,"line_start":1217,"line_end":1220,"column_start":5,"column_end":28,"is_primary":true,"text":[{"text":"    pub const fn map_or<U, F>(self, default: U, f: F) -> U","highlight_start":5,"highlight_end":1},{"text":"    where","highlight_start":1,"highlight_end":1},{"text":"        F: ~const FnOnce(T) -> U + ~const Destruct,","highlight_start":1,"highlight_end":1},{"text":"        U: ~const Destruct,","highlight_start":1,"highlight_end":28}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `map_err` found for enum `Option` in the current scope\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\13_error_handling\\errors1.rs:37:18\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m35\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m            generate_nametag_text(String::new())\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                .as_ref()\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m37\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m                .map_err(|e| e.as_str()),\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|_________________-\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: there is a method `map_or` with a similar name, but with different arguments\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\option.rs:1217:5\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1217\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m/\u001b[0m\u001b[0m \u001b[0m\u001b[0m    pub const fn map_or<U, F>(self, default: U, f: F) -> U\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1218\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    where\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1219\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        F: ~const FnOnce(T) -> U + ~const Destruct,\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1220\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        U: ~const Destruct,\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|___________________________^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":718,"byte_end":728,"line_start":20,"line_end":20,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let mut scores = HashMap::<&str, TeamScores>::new();","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":718,"byte_end":722,"line_start":20,"line_end":20,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut scores = HashMap::<&str, TeamScores>::new();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps3.rs:20:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut scores = HashMap::<&str, TeamScores>::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0308, E0599.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"`string2` does not live long enough","code":{"code":"E0597","explanation":"This error occurs because a value was dropped while it was still borrowed.\n\nErroneous code example:\n\n```compile_fail,E0597\nstruct Foo<'a> {\n    x: Option<&'a u32>,\n}\n\nlet mut x = Foo { x: None };\n{\n    let y = 0;\n    x.x = Some(&y); // error: `y` does not live long enough\n}\nprintln!(\"{:?}\", x.x);\n```\n\nHere, `y` is dropped at the end of the inner scope, but it is borrowed by\n`x` until the `println`. To fix the previous example, just remove the scope\nso that `y` isn't dropped until after the println\n\n```\nstruct Foo<'a> {\n    x: Option<&'a u32>,\n}\n\nlet mut x = Foo { x: None };\n\nlet y = 0;\nx.x = Some(&y);\n\nprintln!(\"{:?}\", x.x);\n```\n"},"level":"error","spans":[{"file_name":"exercises\\16_lifetimes\\lifetimes2.rs","byte_start":376,"byte_end":384,"line_start":17,"line_end":17,"column_start":36,"column_end":44,"is_primary":true,"text":[{"text":"        result = longest(&string1, &string2);","highlight_start":36,"highlight_end":44}],"label":"borrowed value does not live long enough","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes2.rs","byte_start":391,"byte_end":392,"line_start":18,"line_end":18,"column_start":5,"column_end":6,"is_primary":false,"text":[{"text":"    }","highlight_start":5,"highlight_end":6}],"label":"`string2` dropped here while still borrowed","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes2.rs","byte_start":310,"byte_end":317,"line_start":16,"line_end":16,"column_start":13,"column_end":20,"is_primary":false,"text":[{"text":"        let string2 = String::from(\"xyz\");","highlight_start":13,"highlight_end":20}],"label":"binding `string2` declared here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\16_lifetimes\\lifetimes2.rs","byte_start":431,"byte_end":437,"line_start":19,"line_end":19,"column_start":39,"column_end":45,"is_primary":false,"text":[{"text":"    println!(\"The longest string is '{result}'\");","highlight_start":39,"highlight_end":45}],"label":"borrow later used here","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\16_lifetimes\\lifetimes2.rs","byte_start":397,"byte_end":441,"line_start":19,"line_end":19,"column_start":5,"column_end":49,"is_primary":false,"text":[{"text":"    println!(\"The longest string is '{result}'\");","highlight_start":5,"highlight_end":49}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"println!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4285,"byte_end":4305,"line_start":138,"line_end":138,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! println {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::format_args_nl!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":35657,"byte_end":35684,"line_start":1017,"line_end":1017,"column_start":5,"column_end":32,"is_primary":false,"text":[{"text":"    macro_rules! format_args_nl {","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"desugaring of format string literal","def_site_span":{"file_name":"exercises\\16_lifetimes\\lifetimes2.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0597]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: `string2` does not live long enough\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\16_lifetimes\\lifetimes2.rs:17:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let string2 = String::from(\"xyz\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mbinding `string2` declared here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        result = longest(&string1, &string2);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mborrowed value does not live long enough\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    }\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`string2` dropped here while still borrowed\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"The longest string is '{result}'\");\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mborrow later used here\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libhashmaps3_sol-1cffdc1806159bc7.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\16_lifetimes\\lifetimes2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0597`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0597`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators2.rs","byte_start":541,"byte_end":552,"line_start":17,"line_end":17,"column_start":47,"column_end":58,"is_primary":true,"text":[{"text":"fn capitalize_words_vector(words: &[&str]) -> Vec<String> {","highlight_start":47,"highlight_end":58}],"label":"expected `Vec<String>`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\18_iterators\\iterators2.rs","byte_start":498,"byte_end":521,"line_start":17,"line_end":17,"column_start":4,"column_end":27,"is_primary":false,"text":[{"text":"fn capitalize_words_vector(words: &[&str]) -> Vec<String> {","highlight_start":4,"highlight_end":27}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected struct `Vec<String>`\nfound unit type `()`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators2.rs:17:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn capitalize_words_vector(words: &[&str]) -> Vec<String> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `Vec<String>`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected struct `\u001b[0m\u001b[0m\u001b[1m\u001b[35mVec<String>\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m           found unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators2.rs","byte_start":768,"byte_end":774,"line_start":24,"line_end":24,"column_start":47,"column_end":53,"is_primary":true,"text":[{"text":"fn capitalize_words_string(words: &[&str]) -> String {","highlight_start":47,"highlight_end":53}],"label":"expected `String`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\18_iterators\\iterators2.rs","byte_start":725,"byte_end":748,"line_start":24,"line_end":24,"column_start":4,"column_end":27,"is_primary":false,"text":[{"text":"fn capitalize_words_string(words: &[&str]) -> String {","highlight_start":4,"highlight_end":27}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators2.rs:24:47\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn capitalize_words_string(words: &[&str]) -> String {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------------------\u001b[0m\u001b[0m                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `String`, found `()`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `first`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\18_iterators\\iterators2.rs","byte_start":316,"byte_end":321,"line_start":10,"line_end":10,"column_start":14,"column_end":19,"is_primary":true,"text":[{"text":"        Some(first) => todo!(),","highlight_start":14,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators2.rs","byte_start":316,"byte_end":321,"line_start":10,"line_end":10,"column_start":14,"column_end":19,"is_primary":true,"text":[{"text":"        Some(first) => todo!(),","highlight_start":14,"highlight_end":19}],"label":null,"suggested_replacement":"_first","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `first`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators2.rs:10:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Some(first) => todo!(),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_first`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libhashmaps3-56d0db1fe5cc327f.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\12_options\\options2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liboptions2_sol-c507a4f8c6f64828.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\02_functions\\functions5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfunctions5_sol-fee8f56ecce206c0.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"generics2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\14_generics\\generics2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libgenerics2_sol-27b39cdb43a357be.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\11_hashmaps\\hashmaps2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libhashmaps2_sol-9eef91d05780f856.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `fruit`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps2.rs","byte_start":1002,"byte_end":1007,"line_start":31,"line_end":31,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    for fruit in fruit_kinds {","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps2.rs","byte_start":1002,"byte_end":1007,"line_start":31,"line_end":31,"column_start":9,"column_end":14,"is_primary":true,"text":[{"text":"    for fruit in fruit_kinds {","highlight_start":9,"highlight_end":14}],"label":null,"suggested_replacement":"_fruit","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `fruit`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps2.rs:31:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for fruit in fruit_kinds {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_fruit`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot assign twice to immutable variable `x`","code":{"code":"E0384","explanation":"An immutable variable was reassigned.\n\nErroneous code example:\n\n```compile_fail,E0384\nfn main() {\n    let x = 3;\n    x = 5; // error, reassignment of immutable variable\n}\n```\n\nBy default, variables in Rust are immutable. To fix this error, add the keyword\n`mut` after the keyword `let` when declaring the variable. For example:\n\n```\nfn main() {\n    let mut x = 3;\n    x = 5;\n}\n```\n\nAlternatively, you might consider initializing a new variable: either with a new\nbound name or (by [shadowing]) with the bound name of your existing variable.\nFor example:\n\n[shadowing]: https://doc.rust-lang.org/book/ch03-01-variables-and-mutability.html#shadowing\n\n```\nfn main() {\n    let x = 3;\n    let x = 5;\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables4.rs","byte_start":53,"byte_end":54,"line_start":3,"line_end":3,"column_start":9,"column_end":10,"is_primary":false,"text":[{"text":"    let x = 3;","highlight_start":9,"highlight_end":10}],"label":"first assignment to `x`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\01_variables\\variables4.rs","byte_start":93,"byte_end":98,"line_start":6,"line_end":6,"column_start":5,"column_end":10,"is_primary":true,"text":[{"text":"    x = 5; // Don't change this line","highlight_start":5,"highlight_end":10}],"label":"cannot assign twice to immutable variable","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider making this binding mutable","code":null,"level":"help","spans":[{"file_name":"exercises\\01_variables\\variables4.rs","byte_start":53,"byte_end":53,"line_start":3,"line_end":3,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"    let x = 3;","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"mut ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0384]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot assign twice to immutable variable `x`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables4.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let x = 3;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mfirst assignment to `x`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    x = 5; // Don't change this line\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mcannot assign twice to immutable variable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider making this binding mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let \u001b[0m\u001b[0m\u001b[38;5;10mmut \u001b[0m\u001b[0mx = 3;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `basket`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps2.rs","byte_start":810,"byte_end":816,"line_start":22,"line_end":22,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"fn fruit_basket(basket: &mut HashMap<Fruit, u32>) {","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps2.rs","byte_start":810,"byte_end":816,"line_start":22,"line_end":22,"column_start":17,"column_end":23,"is_primary":true,"text":[{"text":"fn fruit_basket(basket: &mut HashMap<Fruit, u32>) {","highlight_start":17,"highlight_end":23}],"label":null,"suggested_replacement":"_basket","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `basket`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps2.rs:22:17\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn fruit_basket(basket: &mut HashMap<Fruit, u32>) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_basket`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0384`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0384`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\15_traits\\traits3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtraits3_sol-421bc90a537a1993.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\06_move_semantics\\move_semantics2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmove_semantics2_sol-c036552914c6710b.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\02_functions\\functions5.rs","byte_start":86,"byte_end":89,"line_start":2,"line_end":2,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"fn square(num: i32) -> i32 {","highlight_start":24,"highlight_end":27}],"label":"expected `i32`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\02_functions\\functions5.rs","byte_start":66,"byte_end":72,"line_start":2,"line_end":2,"column_start":4,"column_end":10,"is_primary":false,"text":[{"text":"fn square(num: i32) -> i32 {","highlight_start":4,"highlight_end":10}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this semicolon to return this value","code":null,"level":"help","spans":[{"file_name":"exercises\\02_functions\\functions5.rs","byte_start":105,"byte_end":106,"line_start":3,"line_end":3,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"    num * num;","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions5.rs:2:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn square(num: i32) -> i32 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `i32`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    num * num;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this semicolon to return this value\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\15_traits\\traits2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtraits2_sol-5f6be40afe50fe3b.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected type, found `{`","code":null,"level":"error","spans":[{"file_name":"exercises\\02_functions\\functions4.rs","byte_start":371,"byte_end":372,"line_start":11,"line_end":11,"column_start":30,"column_end":31,"is_primary":true,"text":[{"text":"fn sale_price(price: i64) -> {","highlight_start":30,"highlight_end":31}],"label":"expected type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected type, found `{`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions4.rs:11:30\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn sale_price(price: i64) -> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected type\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libhashmaps2-5f7f89285a25fde9.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\10_modules\\modules2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmodules2_sol-80bb0c0192dcea10.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables6_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\01_variables\\variables6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvariables6_sol-2b015b199bb2ec60.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"failed to resolve: use of undeclared type `SystemTime`","code":{"code":"E0433","explanation":"An undeclared crate, module, or type was used.\n\nErroneous code example:\n\n```compile_fail,E0433\nlet map = HashMap::new();\n// error: failed to resolve: use of undeclared type `HashMap`\n```\n\nPlease verify you didn't misspell the type/module's name or that you didn't\nforget to import it:\n\n```\nuse std::collections::HashMap; // HashMap has been imported.\nlet map: HashMap<u32, u32> = HashMap::new(); // So it can be used!\n```\n\nIf you've expected to use a crate name:\n\n```compile_fail\nuse ferris_wheel::BigO;\n// error: failed to resolve: use of undeclared module or unlinked crate\n```\n\nMake sure the crate has been added as a dependency in `Cargo.toml`.\n\nTo use a module from your current crate, add the `crate::` prefix to the path.\n"},"level":"error","spans":[{"file_name":"exercises\\10_modules\\modules3.rs","byte_start":323,"byte_end":333,"line_start":9,"line_end":9,"column_start":11,"column_end":21,"is_primary":true,"text":[{"text":"    match SystemTime::now().duration_since(UNIX_EPOCH) {","highlight_start":11,"highlight_end":21}],"label":"use of undeclared type `SystemTime`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this struct","code":null,"level":"help","spans":[{"file_name":"exercises\\10_modules\\modules3.rs","byte_start":301,"byte_end":301,"line_start":8,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::time::SystemTime;\n\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0433]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: failed to resolve: use of undeclared type `SystemTime`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\10_modules\\modules3.rs:9:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match SystemTime::now().duration_since(UNIX_EPOCH) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9muse of undeclared type `SystemTime`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this struct\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::time::SystemTime;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `UNIX_EPOCH` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\10_modules\\modules3.rs","byte_start":356,"byte_end":366,"line_start":9,"line_end":9,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"    match SystemTime::now().duration_since(UNIX_EPOCH) {","highlight_start":44,"highlight_end":54}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider importing this constant","code":null,"level":"help","spans":[{"file_name":"exercises\\10_modules\\modules3.rs","byte_start":301,"byte_end":301,"line_start":8,"line_end":8,"column_start":1,"column_end":1,"is_primary":true,"text":[{"text":"fn main() {","highlight_start":1,"highlight_end":1}],"label":null,"suggested_replacement":"use std::time::UNIX_EPOCH;\n\n","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `UNIX_EPOCH` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\10_modules\\modules3.rs:9:44\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    match SystemTime::now().duration_since(UNIX_EPOCH) {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider importing this constant\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ use std::time::UNIX_EPOCH;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\02_functions\\functions5.rs","byte_start":86,"byte_end":89,"line_start":2,"line_end":2,"column_start":24,"column_end":27,"is_primary":true,"text":[{"text":"fn square(num: i32) -> i32 {","highlight_start":24,"highlight_end":27}],"label":"expected `i32`, found `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\02_functions\\functions5.rs","byte_start":66,"byte_end":72,"line_start":2,"line_end":2,"column_start":4,"column_end":10,"is_primary":false,"text":[{"text":"fn square(num: i32) -> i32 {","highlight_start":4,"highlight_end":10}],"label":"implicitly returns `()` as its body has no tail or `return` expression","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this semicolon to return this value","code":null,"level":"help","spans":[{"file_name":"exercises\\02_functions\\functions5.rs","byte_start":105,"byte_end":106,"line_start":3,"line_end":3,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"    num * num;","highlight_start":14,"highlight_end":15}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\02_functions\\functions5.rs:2:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn square(num: i32) -> i32 {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `i32`, found `()`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mimplicitly returns `()` as its body has no tail or `return` expression\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    num * num;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this semicolon to return this value\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0425, E0433.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0425, E0433.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"functions5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\02_functions\\functions5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"from_into_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\23_conversions\\from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libfrom_into_sol-dd75271cc63a6df2.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtraits4_sol-7b78492208e62917.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"quiz3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\quizzes\\quiz3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libquiz3_sol-a922fbd76c3d5426.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":326,"byte_end":345,"line_start":13,"line_end":13,"column_start":12,"column_end":31,"is_primary":true,"text":[{"text":"    data = data.to_uppercase();","highlight_start":12,"highlight_end":31}],"label":"expected `&String`, found `String`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":304,"byte_end":311,"line_start":12,"line_end":12,"column_start":31,"column_end":38,"is_primary":false,"text":[{"text":"fn string_uppercase(mut data: &String) {","highlight_start":31,"highlight_end":38}],"label":"expected due to this parameter type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might have meant to mutate the pointed at value being passed in, instead of changing the reference in the local binding","code":null,"level":"help","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":305,"byte_end":305,"line_start":12,"line_end":12,"column_start":32,"column_end":32,"is_primary":true,"text":[{"text":"fn string_uppercase(mut data: &String) {","highlight_start":32,"highlight_end":32}],"label":null,"suggested_replacement":"mut ","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":294,"byte_end":298,"line_start":12,"line_end":12,"column_start":21,"column_end":25,"is_primary":true,"text":[{"text":"fn string_uppercase(mut data: &String) {","highlight_start":21,"highlight_end":25}],"label":null,"suggested_replacement":"","suggestion_applicability":"MaybeIncorrect","expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":319,"byte_end":319,"line_start":13,"line_end":13,"column_start":5,"column_end":5,"is_primary":true,"text":[{"text":"    data = data.to_uppercase();","highlight_start":5,"highlight_end":5}],"label":null,"suggested_replacement":"*","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics5.rs:13:12\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn string_uppercase(mut data: &String) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected due to this parameter type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    data = data.to_uppercase();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&String`, found `String`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might have meant to mutate the pointed at value being passed in, instead of changing the reference in the local binding\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0mfn string_uppercase(data: &\u001b[0m\u001b[0m\u001b[38;5;10mmut \u001b[0m\u001b[0mString) {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m~ \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[38;5;10m*\u001b[0m\u001b[0mdata = data.to_uppercase();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"borrow of moved value: `data`","code":{"code":"E0382","explanation":"A variable was used after its contents have been moved elsewhere.\n\nErroneous code example:\n\n```compile_fail,E0382\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = MyStruct{ s: 5u32 };\n    let y = x;\n    x.s = 6;\n    println!(\"{}\", x.s);\n}\n```\n\nSince `MyStruct` is a type that is not marked `Copy`, the data gets moved out\nof `x` when we set `y`. This is fundamental to Rust's ownership system: outside\nof workarounds like `Rc`, a value cannot be owned by more than one variable.\n\nSometimes we don't need to move the value. Using a reference, we can let another\nfunction borrow the value without changing its ownership. In the example below,\nwe don't actually have to move our string to `calculate_length`, we can give it\na reference to it with `&` instead.\n\n```\nfn main() {\n    let s1 = String::from(\"hello\");\n\n    let len = calculate_length(&s1);\n\n    println!(\"The length of '{}' is {}.\", s1, len);\n}\n\nfn calculate_length(s: &String) -> usize {\n    s.len()\n}\n```\n\nA mutable reference can be created with `&mut`.\n\nSometimes we don't want a reference, but a duplicate. All types marked `Clone`\ncan be duplicated by calling `.clone()`. Subsequent changes to a clone do not\naffect the original variable.\n\nMost types in the standard library are marked `Clone`. The example below\ndemonstrates using `clone()` on a string. `s1` is first set to \"many\", and then\ncopied to `s2`. Then the first character of `s1` is removed, without affecting\n`s2`. \"any many\" is printed to the console.\n\n```\nfn main() {\n    let mut s1 = String::from(\"many\");\n    let s2 = s1.clone();\n    s1.remove(0);\n    println!(\"{} {}\", s1, s2);\n}\n```\n\nIf we control the definition of a type, we can implement `Clone` on it ourselves\nwith `#[derive(Clone)]`.\n\nSome types have no ownership semantics at all and are trivial to duplicate. An\nexample is `i32` and the other number types. We don't have to call `.clone()` to\nclone them, because they are marked `Copy` in addition to `Clone`. Implicit\ncloning is more convenient in this case. We can mark our own types `Copy` if\nall their members also are marked `Copy`.\n\nIn the example below, we implement a `Point` type. Because it only stores two\nintegers, we opt-out of ownership semantics with `Copy`. Then we can\n`let p2 = p1` without `p1` being moved.\n\n```\n#[derive(Copy, Clone)]\nstruct Point { x: i32, y: i32 }\n\nfn main() {\n    let mut p1 = Point{ x: -1, y: 2 };\n    let p2 = p1;\n    p1.x = 1;\n    println!(\"p1: {}, {}\", p1.x, p1.y);\n    println!(\"p2: {}, {}\", p2.x, p2.y);\n}\n```\n\nAlternatively, if we don't control the struct's definition, or mutable shared\nownership is truly required, we can use `Rc` and `RefCell`:\n\n```\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = Rc::new(RefCell::new(MyStruct{ s: 5u32 }));\n    let y = x.clone();\n    x.borrow_mut().s = 6;\n    println!(\"{}\", x.borrow().s);\n}\n```\n\nWith this approach, x and y share ownership of the data via the `Rc` (reference\ncount type). `RefCell` essentially performs runtime borrow checking: ensuring\nthat at most one writer or multiple readers can access the data at any one time.\n\nIf you wish to learn more about ownership in Rust, start with the\n[Understanding Ownership][understanding-ownership] chapter in the Book.\n\n[understanding-ownership]: https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\n"},"level":"error","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":446,"byte_end":450,"line_start":21,"line_end":21,"column_start":14,"column_end":18,"is_primary":false,"text":[{"text":"    get_char(data);","highlight_start":14,"highlight_end":18}],"label":"value moved here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":475,"byte_end":480,"line_start":23,"line_end":23,"column_start":22,"column_end":27,"is_primary":true,"text":[{"text":"    string_uppercase(&data);","highlight_start":22,"highlight_end":27}],"label":"value borrowed here after move","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":395,"byte_end":399,"line_start":19,"line_end":19,"column_start":9,"column_end":13,"is_primary":false,"text":[{"text":"    let data = \"Rust is great!\".to_string();","highlight_start":9,"highlight_end":13}],"label":"move occurs because `data` has type `String`, which does not implement the `Copy` trait","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"consider changing this parameter type in function `get_char` to borrow instead if owning the value isn't necessary","code":null,"level":"note","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":195,"byte_end":201,"line_start":7,"line_end":7,"column_start":19,"column_end":25,"is_primary":true,"text":[{"text":"fn get_char(data: String) -> char {","highlight_start":19,"highlight_end":25}],"label":"this parameter takes ownership of the value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":180,"byte_end":188,"line_start":7,"line_end":7,"column_start":4,"column_end":12,"is_primary":false,"text":[{"text":"fn get_char(data: String) -> char {","highlight_start":4,"highlight_end":12}],"label":"in this function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"consider cloning the value if the performance cost is acceptable","code":null,"level":"help","spans":[{"file_name":"exercises\\06_move_semantics\\move_semantics5.rs","byte_start":450,"byte_end":450,"line_start":21,"line_end":21,"column_start":18,"column_end":18,"is_primary":true,"text":[{"text":"    get_char(data);","highlight_start":18,"highlight_end":18}],"label":null,"suggested_replacement":".clone()","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0382]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: borrow of moved value: `data`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics5.rs:23:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let data = \"Rust is great!\".to_string();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mmove occurs because `data` has type `String`, which does not implement the `Copy` trait\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    get_char(data);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvalue moved here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    string_uppercase(&data);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvalue borrowed here after move\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: consider changing this parameter type in function `get_char` to borrow instead if owning the value isn't necessary\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\06_move_semantics\\move_semantics5.rs:7:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn get_char(data: String) -> char {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--------\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mthis parameter takes ownership of the value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14min this function\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: consider cloning the value if the performance cost is acceptable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    get_char(data\u001b[0m\u001b[0m\u001b[38;5;10m.clone()\u001b[0m\u001b[0m);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[38;5;10m++++++++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0382.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0308, E0382.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\06_move_semantics\\move_semantics5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\05_vecs\\vecs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"a value of type `Vec<i32>` cannot be built from an iterator over elements of type `()`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":896,"byte_end":903,"line_start":29,"line_end":29,"column_start":10,"column_end":17,"is_primary":true,"text":[{"text":"        .collect()","highlight_start":10,"highlight_end":17}],"label":"value of type `Vec<i32>` cannot be built from `std::iter::Iterator<Item=()>`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `FromIterator<()>` is not implemented for `Vec<i32>`\nbut trait `FromIterator<i32>` is implemented for it","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"for that trait implementation, expected `i32`, found `()`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the method call chain might not have had the expected associated types","code":null,"level":"note","spans":[{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":810,"byte_end":815,"line_start":24,"line_end":24,"column_start":5,"column_end":10,"is_primary":false,"text":[{"text":"    input","highlight_start":5,"highlight_end":10}],"label":"this expression has type `&[i32]`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":841,"byte_end":886,"line_start":26,"line_end":28,"column_start":10,"column_end":11,"is_primary":true,"text":[{"text":"        .map(|element| {","highlight_start":10,"highlight_end":25},{"text":"            // ???","highlight_start":1,"highlight_end":19},{"text":"        })","highlight_start":1,"highlight_end":11}],"label":"`Iterator::Item` changed to `()` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":825,"byte_end":831,"line_start":25,"line_end":25,"column_start":10,"column_end":16,"is_primary":false,"text":[{"text":"        .iter()","highlight_start":10,"highlight_end":16}],"label":"`Iterator::Item` is `&i32` here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"required by a bound in `collect`","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\iter\\traits\\iterator.rs","byte_start":67934,"byte_end":67958,"line_start":2014,"line_end":2014,"column_start":19,"column_end":43,"is_primary":true,"text":[{"text":"    fn collect<B: FromIterator<Self::Item>>(self) -> B","highlight_start":19,"highlight_end":43}],"label":"required by this bound in `Iterator::collect`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: a value of type `Vec<i32>` cannot be built from an iterator over elements of type `()`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\05_vecs\\vecs2.rs:29:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m29\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        .collect()\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvalue of type `Vec<i32>` cannot be built from `std::iter::Iterator<Item=()>`\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the trait `FromIterator<\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis not\u001b[0m\u001b[0m implemented for `Vec<i32>`\u001b[0m\n\u001b[0m             but trait `FromIterator<\u001b[0m\u001b[0m\u001b[1m\u001b[35mi32\u001b[0m\u001b[0m>` \u001b[0m\u001b[0m\u001b[1m\u001b[35mis\u001b[0m\u001b[0m implemented for it\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: for that trait implementation, expected `\u001b[0m\u001b[0m\u001b[1m\u001b[35mi32\u001b[0m\u001b[0m`, found `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: the method call chain might not have had the expected associated types\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\05_vecs\\vecs2.rs:26:10\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m    input\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mthis expression has type `&[i32]`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        .iter()\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m`Iterator::Item` is `&i32` here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m   \u001b[0m\u001b[0m        .map(|element| {\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m __________^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            // ???\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        })\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m|__________^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m`Iterator::Item` changed to `()` here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: required by a bound in `collect`\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\iter\\traits\\iterator.rs:2014:19\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2014\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    fn collect<B: FromIterator<Self::Item>>(self) -> B\u001b[0m\n\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10mrequired by this bound in `Iterator::collect`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"borrow of partially moved value: `optional_point`","code":{"code":"E0382","explanation":"A variable was used after its contents have been moved elsewhere.\n\nErroneous code example:\n\n```compile_fail,E0382\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = MyStruct{ s: 5u32 };\n    let y = x;\n    x.s = 6;\n    println!(\"{}\", x.s);\n}\n```\n\nSince `MyStruct` is a type that is not marked `Copy`, the data gets moved out\nof `x` when we set `y`. This is fundamental to Rust's ownership system: outside\nof workarounds like `Rc`, a value cannot be owned by more than one variable.\n\nSometimes we don't need to move the value. Using a reference, we can let another\nfunction borrow the value without changing its ownership. In the example below,\nwe don't actually have to move our string to `calculate_length`, we can give it\na reference to it with `&` instead.\n\n```\nfn main() {\n    let s1 = String::from(\"hello\");\n\n    let len = calculate_length(&s1);\n\n    println!(\"The length of '{}' is {}.\", s1, len);\n}\n\nfn calculate_length(s: &String) -> usize {\n    s.len()\n}\n```\n\nA mutable reference can be created with `&mut`.\n\nSometimes we don't want a reference, but a duplicate. All types marked `Clone`\ncan be duplicated by calling `.clone()`. Subsequent changes to a clone do not\naffect the original variable.\n\nMost types in the standard library are marked `Clone`. The example below\ndemonstrates using `clone()` on a string. `s1` is first set to \"many\", and then\ncopied to `s2`. Then the first character of `s1` is removed, without affecting\n`s2`. \"any many\" is printed to the console.\n\n```\nfn main() {\n    let mut s1 = String::from(\"many\");\n    let s2 = s1.clone();\n    s1.remove(0);\n    println!(\"{} {}\", s1, s2);\n}\n```\n\nIf we control the definition of a type, we can implement `Clone` on it ourselves\nwith `#[derive(Clone)]`.\n\nSome types have no ownership semantics at all and are trivial to duplicate. An\nexample is `i32` and the other number types. We don't have to call `.clone()` to\nclone them, because they are marked `Copy` in addition to `Clone`. Implicit\ncloning is more convenient in this case. We can mark our own types `Copy` if\nall their members also are marked `Copy`.\n\nIn the example below, we implement a `Point` type. Because it only stores two\nintegers, we opt-out of ownership semantics with `Copy`. Then we can\n`let p2 = p1` without `p1` being moved.\n\n```\n#[derive(Copy, Clone)]\nstruct Point { x: i32, y: i32 }\n\nfn main() {\n    let mut p1 = Point{ x: -1, y: 2 };\n    let p2 = p1;\n    p1.x = 1;\n    println!(\"p1: {}, {}\", p1.x, p1.y);\n    println!(\"p2: {}, {}\", p2.x, p2.y);\n}\n```\n\nAlternatively, if we don't control the struct's definition, or mutable shared\nownership is truly required, we can use `Rc` and `RefCell`:\n\n```\nuse std::cell::RefCell;\nuse std::rc::Rc;\n\nstruct MyStruct { s: u32 }\n\nfn main() {\n    let mut x = Rc::new(RefCell::new(MyStruct{ s: 5u32 }));\n    let y = x.clone();\n    x.borrow_mut().s = 6;\n    println!(\"{}\", x.borrow().s);\n}\n```\n\nWith this approach, x and y share ownership of the data via the `Rc` (reference\ncount type). `RefCell` essentially performs runtime borrow checking: ensuring\nthat at most one writer or multiple readers can access the data at any one time.\n\nIf you wish to learn more about ownership in Rust, start with the\n[Understanding Ownership][understanding-ownership] chapter in the Book.\n\n[understanding-ownership]: https://doc.rust-lang.org/book/ch04-00-understanding-ownership.html\n"},"level":"error","spans":[{"file_name":"exercises\\12_options\\options3.rs","byte_start":250,"byte_end":251,"line_start":12,"line_end":12,"column_start":14,"column_end":15,"is_primary":false,"text":[{"text":"        Some(p) => println!(\"Coordinates are {},{}\", p.x, p.y),","highlight_start":14,"highlight_end":15}],"label":"value partially moved here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\12_options\\options3.rs","byte_start":357,"byte_end":371,"line_start":16,"line_end":16,"column_start":16,"column_end":30,"is_primary":true,"text":[{"text":"    println!(\"{optional_point:?}\"); // Don't change this line.","highlight_start":16,"highlight_end":30}],"label":"value borrowed here after partial move","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4407,"byte_end":4440,"line_start":143,"line_end":143,"column_start":28,"column_end":61,"is_primary":false,"text":[{"text":"        $crate::io::_print($crate::format_args_nl!($($arg)*));","highlight_start":28,"highlight_end":61}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"exercises\\12_options\\options3.rs","byte_start":346,"byte_end":376,"line_start":16,"line_end":16,"column_start":5,"column_end":35,"is_primary":false,"text":[{"text":"    println!(\"{optional_point:?}\"); // Don't change this line.","highlight_start":5,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"println!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\std\\src\\macros.rs","byte_start":4285,"byte_end":4305,"line_start":138,"line_end":138,"column_start":1,"column_end":21,"is_primary":false,"text":[{"text":"macro_rules! println {","highlight_start":1,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::format_args_nl!","def_site_span":{"file_name":"C:\\Users\\stask\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib/rustlib/src/rust\\library\\core\\src\\macros\\mod.rs","byte_start":35657,"byte_end":35684,"line_start":1017,"line_end":1017,"column_start":5,"column_end":32,"is_primary":false,"text":[{"text":"    macro_rules! format_args_nl {","highlight_start":5,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"desugaring of format string literal","def_site_span":{"file_name":"exercises\\12_options\\options3.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1,"is_primary":false,"text":[],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[{"message":"partial move occurs because value has type `Point`, which does not implement the `Copy` trait","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"borrow this binding in the pattern to avoid moving the value","code":null,"level":"help","spans":[{"file_name":"exercises\\12_options\\options3.rs","byte_start":250,"byte_end":250,"line_start":12,"line_end":12,"column_start":14,"column_end":14,"is_primary":true,"text":[{"text":"        Some(p) => println!(\"Coordinates are {},{}\", p.x, p.y),","highlight_start":14,"highlight_end":14}],"label":null,"suggested_replacement":"ref ","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0382]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: borrow of partially moved value: `optional_point`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options3.rs:16:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        Some(p) => println!(\"Coordinates are {},{}\", p.x, p.y),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mvalue partially moved here\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m16\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{optional_point:?}\"); // Don't change this line.\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mvalue borrowed here after partial move\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: partial move occurs because value has type `Point`, which does not implement the `Copy` trait\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::format_args_nl` which comes from the expansion of the macro `println` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: borrow this binding in the pattern to avoid moving the value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        Some(\u001b[0m\u001b[0m\u001b[38;5;10mref \u001b[0m\u001b[0mp) => println!(\"Coordinates are {},{}\", p.x, p.y),\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\05_vecs\\vecs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `element`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":83,"byte_end":90,"line_start":4,"line_end":4,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    for element in input {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":83,"byte_end":90,"line_start":4,"line_end":4,"column_start":9,"column_end":16,"is_primary":true,"text":[{"text":"    for element in input {","highlight_start":9,"highlight_end":16}],"label":null,"suggested_replacement":"_element","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `element`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\05_vecs\\vecs2.rs:4:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    for element in input {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_element`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected identifier, found `,`","code":null,"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits4.rs","byte_start":339,"byte_end":340,"line_start":14,"line_end":14,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"fn compare_license_types(software1: ???, software2: ???) -> bool {","highlight_start":40,"highlight_end":41}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this comma","code":null,"level":"help","spans":[{"file_name":"exercises\\15_traits\\traits4.rs","byte_start":339,"byte_end":340,"line_start":14,"line_end":14,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"fn compare_license_types(software1: ???, software2: ???) -> bool {","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected identifier, found `,`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits4.rs:14:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn compare_license_types(software1: ???, software2: ???) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove this comma\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0mfn compare_license_types(software1: ???\u001b[0m\u001b[0m\u001b[38;5;9m,\u001b[0m\u001b[0m software2: ???) -> bool {\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0mfn compare_license_types(software1: ??? software2: ???) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected a trait, found type","code":null,"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits4.rs","byte_start":338,"byte_end":350,"line_start":14,"line_end":14,"column_start":39,"column_end":51,"is_primary":true,"text":[{"text":"fn compare_license_types(software1: ???, software2: ???) -> bool {","highlight_start":39,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected a trait, found type\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits4.rs:14:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn compare_license_types(software1: ???, software2: ???) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected identifier, found `)`","code":null,"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits4.rs","byte_start":355,"byte_end":356,"line_start":14,"line_end":14,"column_start":56,"column_end":57,"is_primary":true,"text":[{"text":"fn compare_license_types(software1: ???, software2: ???) -> bool {","highlight_start":56,"highlight_end":57}],"label":"expected identifier","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected identifier, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits4.rs:14:56\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn compare_license_types(software1: ???, software2: ???) -> bool {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected identifier\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0382`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0382`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\05_vecs\\vecs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":49,"byte_end":59,"line_start":2,"line_end":2,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let mut output = Vec::new();","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"exercises\\05_vecs\\vecs2.rs","byte_start":49,"byte_end":53,"line_start":2,"line_end":2,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut output = Vec::new();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\05_vecs\\vecs2.rs:2:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut output = Vec::new();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"vecs2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\05_vecs\\vecs2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"using_as_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\23_conversions\\using_as.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libusing_as_sol-829da716b91fdace.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"threads3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\20_threads\\threads3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libthreads3_sol-f2f2eeb4d63d7d42.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\12_options\\options2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liboptions2_sol-6b3452a8b293d9eb.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `software1` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits4.rs","byte_start":371,"byte_end":380,"line_start":15,"line_end":15,"column_start":5,"column_end":14,"is_primary":true,"text":[{"text":"    software1.licensing_info() == software2.licensing_info()","highlight_start":5,"highlight_end":14}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `software1` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits4.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    software1.licensing_info() == software2.licensing_info()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `software2` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\15_traits\\traits4.rs","byte_start":401,"byte_end":410,"line_start":15,"line_end":15,"column_start":35,"column_end":44,"is_primary":true,"text":[{"text":"    software1.licensing_info() == software2.licensing_info()","highlight_start":35,"highlight_end":44}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `software2` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\15_traits\\traits4.rs:15:35\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    software1.licensing_info() == software2.licensing_info()\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\15_traits\\traits4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\22_clippy\\clippy1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libclippy1_sol-885b5f5f47e16258.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"clippy1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\22_clippy\\clippy1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libclippy1_sol-02bdaa8171af0ed6.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\01_variables\\variables1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvariables1_sol-96940af9867aa6c9.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"using_as_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\23_conversions\\using_as.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libusing_as_sol-802df7f6d0b9d7db.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"no method named `unwrap` found for unit type `()` in the current scope","code":{"code":"E0599","explanation":"This error occurs when a method is used on a type which doesn't implement it:\n\nErroneous code example:\n\n```compile_fail,E0599\nstruct Mouth;\n\nlet x = Mouth;\nx.chocolate(); // error: no method named `chocolate` found for type `Mouth`\n               //        in the current scope\n```\n\nIn this case, you need to implement the `chocolate` method to fix the error:\n\n```\nstruct Mouth;\n\nimpl Mouth {\n    fn chocolate(&self) { // We implement the `chocolate` method here.\n        println!(\"Hmmm! I love chocolate!\");\n    }\n}\n\nlet x = Mouth;\nx.chocolate(); // ok!\n```\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":1774,"byte_end":1780,"line_start":68,"line_end":68,"column_start":39,"column_end":45,"is_primary":true,"text":[{"text":"        assert_eq!(result_with_list().unwrap(), [1, 11, 1426, 3]);","highlight_start":39,"highlight_end":45}],"label":"method not found in `()`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0599]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: no method named `unwrap` found for unit type `()` in the current scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators3.rs:68:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m68\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(result_with_list().unwrap(), [1, 11, 1426, 3]);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mmethod not found in `()`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected one of `,`, `:`, or `}`, found `!`","code":null,"level":"error","spans":[{"file_name":"exercises\\12_options\\options2.rs","byte_start":323,"byte_end":324,"line_start":14,"line_end":14,"column_start":22,"column_end":23,"is_primary":true,"text":[{"text":"            assert_eq!(word, target);","highlight_start":22,"highlight_end":23}],"label":"expected one of `,`, `:`, or `}`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\12_options\\options2.rs","byte_start":314,"byte_end":323,"line_start":14,"line_end":14,"column_start":13,"column_end":22,"is_primary":false,"text":[{"text":"            assert_eq!(word, target);","highlight_start":13,"highlight_end":22}],"label":"while parsing this struct field","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\12_options\\options2.rs","byte_start":284,"byte_end":299,"line_start":13,"line_end":13,"column_start":16,"column_end":31,"is_primary":false,"text":[{"text":"        word = optional_target {","highlight_start":16,"highlight_end":31}],"label":"while parsing this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected one of `,`, `:`, or `}`, found `!`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options2.rs:14:22\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        word = optional_target {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwhile parsing this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            assert_eq!(word, target);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `,`, `:`, or `}`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwhile parsing this struct field\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected one of `,`, `:`, or `}`, found `)`","code":null,"level":"error","spans":[{"file_name":"exercises\\12_options\\options2.rs","byte_start":337,"byte_end":338,"line_start":14,"line_end":14,"column_start":36,"column_end":37,"is_primary":true,"text":[{"text":"            assert_eq!(word, target);","highlight_start":36,"highlight_end":37}],"label":"expected one of `,`, `:`, or `}`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\12_options\\options2.rs","byte_start":284,"byte_end":299,"line_start":13,"line_end":13,"column_start":16,"column_end":31,"is_primary":false,"text":[{"text":"        word = optional_target {","highlight_start":16,"highlight_end":31}],"label":"while parsing this struct","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected one of `,`, `:`, or `}`, found `)`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options2.rs:14:36\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        word = optional_target {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m---------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mwhile parsing this struct\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m            assert_eq!(word, target);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `,`, `:`, or `}`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected one of `.`, `;`, `?`, `}`, or an operator, found `{`","code":null,"level":"error","spans":[{"file_name":"exercises\\12_options\\options2.rs","byte_start":847,"byte_end":848,"line_start":32,"line_end":32,"column_start":43,"column_end":44,"is_primary":true,"text":[{"text":"        integer = optional_integers.pop() {","highlight_start":43,"highlight_end":44}],"label":"expected one of `.`, `;`, `?`, `}`, or an operator","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected one of `.`, `;`, `?`, `}`, or an operator, found `{`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options2.rs:32:43\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m32\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        integer = optional_integers.pop() {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected one of `.`, `;`, `?`, `}`, or an operator\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":1892,"byte_end":1924,"line_start":73,"line_end":73,"column_start":39,"column_end":71,"is_primary":true,"text":[{"text":"        assert_eq!(list_of_results(), [Ok(1), Ok(11), Ok(1426), Ok(3)]);","highlight_start":39,"highlight_end":71}],"label":"expected `()`, found `[Result<{integer}, _>; 4]`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected unit type `()`\n       found array `[Result<{integer}, _>; 4]`","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators3.rs:73:39\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m73\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        assert_eq!(list_of_results(), [Ok(1), Ok(11), Ok(1426), Ok(3)]);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `()`, found `[Result<{integer}, _>; 4]`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected unit type `\u001b[0m\u001b[0m\u001b[1m\u001b[35m()\u001b[0m\u001b[0m`\u001b[0m\n\u001b[0m                  found array `\u001b[0m\u001b[0m\u001b[1m\u001b[35m[Result<{integer}, _>; 4]\u001b[0m\u001b[0m`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `a`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":367,"byte_end":368,"line_start":13,"line_end":13,"column_start":11,"column_end":12,"is_primary":true,"text":[{"text":"fn divide(a: i64, b: i64) -> Result<i64, DivisionError> {","highlight_start":11,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":367,"byte_end":368,"line_start":13,"line_end":13,"column_start":11,"column_end":12,"is_primary":true,"text":[{"text":"fn divide(a: i64, b: i64) -> Result<i64, DivisionError> {","highlight_start":11,"highlight_end":12}],"label":null,"suggested_replacement":"_a","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `a`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators3.rs:13:11\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn divide(a: i64, b: i64) -> Result<i64, DivisionError> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_a`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `b`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":375,"byte_end":376,"line_start":13,"line_end":13,"column_start":19,"column_end":20,"is_primary":true,"text":[{"text":"fn divide(a: i64, b: i64) -> Result<i64, DivisionError> {","highlight_start":19,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":375,"byte_end":376,"line_start":13,"line_end":13,"column_start":19,"column_end":20,"is_primary":true,"text":[{"text":"fn divide(a: i64, b: i64) -> Result<i64, DivisionError> {","highlight_start":19,"highlight_end":20}],"label":null,"suggested_replacement":"_b","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `b`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators3.rs:13:19\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn divide(a: i64, b: i64) -> Result<i64, DivisionError> {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_b`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `division_results`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":614,"byte_end":630,"line_start":21,"line_end":21,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let division_results = numbers.into_iter().map(|n| divide(n, 27));","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":614,"byte_end":630,"line_start":21,"line_end":21,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let division_results = numbers.into_iter().map(|n| divide(n, 27));","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"_division_results","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `division_results`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators3.rs:21:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m21\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let division_results = numbers.into_iter().map(|n| divide(n, 27));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_division_results`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `division_results`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":874,"byte_end":890,"line_start":28,"line_end":28,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let division_results = numbers.into_iter().map(|n| divide(n, 27));","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\18_iterators\\iterators3.rs","byte_start":874,"byte_end":890,"line_start":28,"line_end":28,"column_start":9,"column_end":25,"is_primary":true,"text":[{"text":"    let division_results = numbers.into_iter().map(|n| divide(n, 27));","highlight_start":9,"highlight_end":25}],"label":null,"suggested_replacement":"_division_results","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `division_results`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\18_iterators\\iterators3.rs:28:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let division_results = numbers.into_iter().map(|n| divide(n, 27));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_division_results`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0599.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0308, E0599.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `name` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types5.rs","byte_start":195,"byte_end":199,"line_start":7,"line_end":7,"column_start":16,"column_end":20,"is_primary":true,"text":[{"text":"    println!(\"{name} is {age} years old\");","highlight_start":16,"highlight_end":20}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `name` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types5.rs:7:16\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{name} is {age} years old\");\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `age` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\04_primitive_types\\primitive_types5.rs","byte_start":205,"byte_end":208,"line_start":7,"line_end":7,"column_start":26,"column_end":29,"is_primary":true,"text":[{"text":"    println!(\"{name} is {age} years old\");","highlight_start":26,"highlight_end":29}],"label":"not found in this scope","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `age` in this scope\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\04_primitive_types\\primitive_types5.rs:7:26\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"{name} is {age} years old\");\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in this scope\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `word` in this scope","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\12_options\\options2.rs","byte_start":277,"byte_end":281,"line_start":13,"line_end":13,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"        word = optional_target {","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"you might have meant to introduce a new binding","code":null,"level":"help","spans":[{"file_name":"exercises\\12_options\\options2.rs","byte_start":277,"byte_end":277,"line_start":13,"line_end":13,"column_start":9,"column_end":9,"is_primary":true,"text":[{"text":"        word = optional_target {","highlight_start":9,"highlight_end":9}],"label":null,"suggested_replacement":"let ","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `word` in this scope\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options2.rs:13:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        word = optional_target {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: you might have meant to introduce a new binding\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[38;5;10mlet \u001b[0m\u001b[0mword = optional_target {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m+++\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected struct, variant or union type, found local variable `optional_target`","code":{"code":"E0574","explanation":"Something other than a struct, variant or union has been used when one was\nexpected.\n\nErroneous code example:\n\n```compile_fail,E0574\nmod mordor {}\n\nlet sauron = mordor { x: () }; // error!\n\nenum Jak {\n    Daxter { i: isize },\n}\n\nlet eco = Jak::Daxter { i: 1 };\nmatch eco {\n    Jak { i } => {} // error!\n}\n```\n\nIn all these errors, a type was expected. For example, in the first error,\nwe tried to instantiate the `mordor` module, which is impossible. If you want\nto instantiate a type inside a module, you can do it as follow:\n\n```\nmod mordor {\n    pub struct TheRing {\n        pub x: usize,\n    }\n}\n\nlet sauron = mordor::TheRing { x: 1 }; // ok!\n```\n\nIn the second error, we tried to bind the `Jak` enum directly, which is not\npossible: you can only bind one of its variants. To do so:\n\n```\nenum Jak {\n    Daxter { i: isize },\n}\n\nlet eco = Jak::Daxter { i: 1 };\nmatch eco {\n    Jak::Daxter { i } => {} // ok!\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\12_options\\options2.rs","byte_start":284,"byte_end":299,"line_start":13,"line_end":13,"column_start":16,"column_end":31,"is_primary":true,"text":[{"text":"        word = optional_target {","highlight_start":16,"highlight_end":31}],"label":"not a struct, variant or union type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0574]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected struct, variant or union type, found local variable `optional_target`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\12_options\\options2.rs:13:16\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        word = optional_target {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a struct, variant or union type\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `fruit` in module `delicious_snacks`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\10_modules\\modules2.rs","byte_start":598,"byte_end":603,"line_start":23,"line_end":23,"column_start":27,"column_end":32,"is_primary":true,"text":[{"text":"        delicious_snacks::fruit,","highlight_start":27,"highlight_end":32}],"label":"not found in `delicious_snacks`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `fruit` in module `delicious_snacks`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\10_modules\\modules2.rs:23:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        delicious_snacks::fruit,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `delicious_snacks`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot find value `veggie` in module `delicious_snacks`","code":{"code":"E0425","explanation":"An unresolved name was used.\n\nErroneous code examples:\n\n```compile_fail,E0425\nsomething_that_doesnt_exist::foo;\n// error: unresolved name `something_that_doesnt_exist::foo`\n\n// or:\n\ntrait Foo {\n    fn bar() {\n        Self; // error: unresolved name `Self`\n    }\n}\n\n// or:\n\nlet x = unknown_variable;  // error: unresolved name `unknown_variable`\n```\n\nPlease verify that the name wasn't misspelled and ensure that the\nidentifier being referred to is valid for the given situation. Example:\n\n```\nenum something_that_does_exist {\n    Foo,\n}\n```\n\nOr:\n\n```\nmod something_that_does_exist {\n    pub static foo : i32 = 0i32;\n}\n\nsomething_that_does_exist::foo; // ok!\n```\n\nOr:\n\n```\nlet unknown_variable = 12u32;\nlet x = unknown_variable; // ok!\n```\n\nIf the item is not defined in the current module, it must be imported using a\n`use` statement, like so:\n\n```\n# mod foo { pub fn bar() {} }\n# fn main() {\nuse foo::bar;\nbar();\n# }\n```\n\nIf the item you are importing is not defined in some super-module of the\ncurrent module, then it must also be declared as public (e.g., `pub fn`).\n"},"level":"error","spans":[{"file_name":"exercises\\10_modules\\modules2.rs","byte_start":631,"byte_end":637,"line_start":24,"line_end":24,"column_start":27,"column_end":33,"is_primary":true,"text":[{"text":"        delicious_snacks::veggie,","highlight_start":27,"highlight_end":33}],"label":"not found in `delicious_snacks`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0425]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot find value `veggie` in module `delicious_snacks`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\10_modules\\modules2.rs:24:27\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        delicious_snacks::veggie,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot found in `delicious_snacks`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\10_modules\\modules2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0425, E0574.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0425, E0574.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"options2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\12_options\\options2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0425`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0425`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused macro definition: `my_macro`","code":{"code":"unused_macros","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\21_macros\\macros1.rs","byte_start":13,"byte_end":21,"line_start":1,"line_end":1,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"macro_rules! my_macro {","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_macros)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused macro definition: `my_macro`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros1.rs:1:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m1\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mmacro_rules! my_macro {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_macros)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\09_strings\\strings4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstrings4_sol-efb8e36b56013abf.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"arc1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\19_smart_pointers\\arc1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libarc1_sol-06a6e41e47cf5b9c.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"expected function, found macro `my_macro`","code":{"code":"E0423","explanation":"An identifier was used like a function name or a value was expected and the\nidentifier exists but it belongs to a different namespace.\n\nErroneous code example:\n\n```compile_fail,E0423\nstruct Foo { a: bool };\n\nlet f = Foo();\n// error: expected function, tuple struct or tuple variant, found `Foo`\n// `Foo` is a struct name, but this expression uses it like a function name\n```\n\nPlease verify you didn't misspell the name of what you actually wanted to use\nhere. Example:\n\n```\nfn Foo() -> u32 { 0 }\n\nlet f = Foo(); // ok!\n```\n\nIt is common to forget the trailing `!` on macro invocations, which would also\nyield this error:\n\n```compile_fail,E0423\nprintln(\"\");\n// error: expected function, tuple struct or tuple variant,\n// found macro `println`\n// did you mean `println!(...)`? (notice the trailing `!`)\n```\n\nAnother case where this error is emitted is when a value is expected, but\nsomething else is found:\n\n```compile_fail,E0423\npub mod a {\n    pub const I: i32 = 1;\n}\n\nfn h1() -> i32 {\n    a.I\n    //~^ ERROR expected value, found module `a`\n    // did you mean `a::I`?\n}\n```\n"},"level":"error","spans":[{"file_name":"exercises\\21_macros\\macros1.rs","byte_start":136,"byte_end":144,"line_start":9,"line_end":9,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"    my_macro();","highlight_start":5,"highlight_end":13}],"label":"not a function","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"use `!` to invoke the macro","code":null,"level":"help","spans":[{"file_name":"exercises\\21_macros\\macros1.rs","byte_start":144,"byte_end":144,"line_start":9,"line_end":9,"column_start":13,"column_end":13,"is_primary":true,"text":[{"text":"    my_macro();","highlight_start":13,"highlight_end":13}],"label":null,"suggested_replacement":"!","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0423]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: expected function, found macro `my_macro`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\21_macros\\macros1.rs:9:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    my_macro();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mnot a function\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use `!` to invoke the macro\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m9\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    my_macro\u001b[0m\u001b[0m\u001b[38;5;10m!\u001b[0m\u001b[0m();\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[38;5;10m+\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"macros1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\21_macros\\macros1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0423`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0423`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\09_strings\\strings1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstrings1_sol-6ebd0d43e4627b01.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"lifetimes2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\16_lifetimes\\lifetimes2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liblifetimes2_sol-1c1bb94ee9d094ef.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"try_from_into_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\23_conversions\\try_from_into.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtry_from_into_sol-53f1e0feabc7f809.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"primitive_types6","src_path":"C:\\Users\\stask\\rustlings\\exercises\\04_primitive_types\\primitive_types6.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libprimitive_types6-dcaf441f7f742536.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"move_semantics5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\06_move_semantics\\move_semantics5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmove_semantics5_sol-96345b5c0f213018.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `team_1_name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":945,"byte_end":956,"line_start":25,"line_end":25,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let team_1_name = split_iterator.next().unwrap();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":945,"byte_end":956,"line_start":25,"line_end":25,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let team_1_name = split_iterator.next().unwrap();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"_team_1_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `team_1_name`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps3.rs:25:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let team_1_name = split_iterator.next().unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_team_1_name`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `team_2_name`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":1003,"byte_end":1014,"line_start":26,"line_end":26,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let team_2_name = split_iterator.next().unwrap();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":1003,"byte_end":1014,"line_start":26,"line_end":26,"column_start":13,"column_end":24,"is_primary":true,"text":[{"text":"        let team_2_name = split_iterator.next().unwrap();","highlight_start":13,"highlight_end":24}],"label":null,"suggested_replacement":"_team_2_name","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `team_2_name`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps3.rs:26:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m26\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let team_2_name = split_iterator.next().unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_team_2_name`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `team_1_score`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":1061,"byte_end":1073,"line_start":27,"line_end":27,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let team_1_score: u8 = split_iterator.next().unwrap().parse().unwrap();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":1061,"byte_end":1073,"line_start":27,"line_end":27,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let team_1_score: u8 = split_iterator.next().unwrap().parse().unwrap();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"_team_1_score","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `team_1_score`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps3.rs:27:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m27\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let team_1_score: u8 = split_iterator.next().unwrap().parse().unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_team_1_score`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"unused variable: `team_2_score`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":1141,"byte_end":1153,"line_start":28,"line_end":28,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let team_2_score: u8 = split_iterator.next().unwrap().parse().unwrap();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":1141,"byte_end":1153,"line_start":28,"line_end":28,"column_start":13,"column_end":25,"is_primary":true,"text":[{"text":"        let team_2_score: u8 = split_iterator.next().unwrap().parse().unwrap();","highlight_start":13,"highlight_end":25}],"label":null,"suggested_replacement":"_team_2_score","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `team_2_score`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps3.rs:28:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        let team_2_score: u8 = split_iterator.next().unwrap().parse().unwrap();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_team_2_score`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"using_as","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\using_as.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot divide `f64` by `usize`","code":{"code":"E0277","explanation":"You tried to use a type which doesn't implement some trait in a place which\nexpected that trait.\n\nErroneous code example:\n\n```compile_fail,E0277\n// here we declare the Foo trait with a bar method\ntrait Foo {\n    fn bar(&self);\n}\n\n// we now declare a function which takes an object implementing the Foo trait\nfn some_func<T: Foo>(foo: T) {\n    foo.bar();\n}\n\nfn main() {\n    // we now call the method with the i32 type, which doesn't implement\n    // the Foo trait\n    some_func(5i32); // error: the trait bound `i32 : Foo` is not satisfied\n}\n```\n\nIn order to fix this error, verify that the type you're using does implement\nthe trait. Example:\n\n```\ntrait Foo {\n    fn bar(&self);\n}\n\n// we implement the trait on the i32 type\nimpl Foo for i32 {\n    fn bar(&self) {}\n}\n\nfn some_func<T: Foo>(foo: T) {\n    foo.bar(); // we can now use this method since i32 implements the\n               // Foo trait\n}\n\nfn main() {\n    some_func(5i32); // ok!\n}\n```\n\nOr in a generic context, an erroneous code example would look like:\n\n```compile_fail,E0277\nfn some_func<T>(foo: T) {\n    println!(\"{:?}\", foo); // error: the trait `core::fmt::Debug` is not\n                           //        implemented for the type `T`\n}\n\nfn main() {\n    // We now call the method with the i32 type,\n    // which *does* implement the Debug trait.\n    some_func(5i32);\n}\n```\n\nNote that the error here is in the definition of the generic function. Although\nwe only call it with a parameter that does implement `Debug`, the compiler\nstill rejects the function. It must work with all possible input types. In\norder to make this example compile, we need to restrict the generic type we're\naccepting:\n\n```\nuse std::fmt;\n\n// Restrict the input type to types that implement Debug.\nfn some_func<T: fmt::Debug>(foo: T) {\n    println!(\"{:?}\", foo);\n}\n\nfn main() {\n    // Calling the method is still fine, as i32 implements Debug.\n    some_func(5i32);\n\n    // This would fail to compile now:\n    // struct WithoutDebug;\n    // some_func(WithoutDebug);\n}\n```\n\nRust only looks at the signature of the called function, as such it must\nalready specify all requirements that will be used for every type parameter.\n"},"level":"error","spans":[{"file_name":"exercises\\23_conversions\\using_as.rs","byte_start":314,"byte_end":315,"line_start":8,"line_end":8,"column_start":11,"column_end":12,"is_primary":true,"text":[{"text":"    total / values.len()","highlight_start":11,"highlight_end":12}],"label":"no implementation for `f64 / usize`","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"the trait `Div<usize>` is not implemented for `f64`","code":null,"level":"help","spans":[],"children":[],"rendered":null},{"message":"the following other types implement trait `Div<Rhs>`:\n  `&f64` implements `Div<f64>`\n  `&f64` implements `Div`\n  `f64` implements `Div<&f64>`\n  `f64` implements `Div`","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0277]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot divide `f64` by `usize`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\23_conversions\\using_as.rs:8:11\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m8\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    total / values.len()\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mno implementation for `f64 / usize`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the trait `Div<usize>` is not implemented for `f64`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: the following other types implement trait `Div<Rhs>`:\u001b[0m\n\u001b[0m            `&f64` implements `Div<f64>`\u001b[0m\n\u001b[0m            `&f64` implements `Div`\u001b[0m\n\u001b[0m            `f64` implements `Div<&f64>`\u001b[0m\n\u001b[0m            `f64` implements `Div`\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":718,"byte_end":728,"line_start":20,"line_end":20,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let mut scores = HashMap::<&str, TeamScores>::new();","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"exercises\\11_hashmaps\\hashmaps3.rs","byte_start":718,"byte_end":722,"line_start":20,"line_end":20,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut scores = HashMap::<&str, TeamScores>::new();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\11_hashmaps\\hashmaps3.rs:20:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let mut scores = HashMap::<&str, TeamScores>::new();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables5.rs","byte_start":218,"byte_end":219,"line_start":6,"line_end":6,"column_start":14,"column_end":15,"is_primary":true,"text":[{"text":"    number = 3;","highlight_start":14,"highlight_end":15}],"label":"expected `&str`, found integer","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\01_variables\\variables5.rs","byte_start":29,"byte_end":40,"line_start":2,"line_end":2,"column_start":18,"column_end":29,"is_primary":false,"text":[{"text":"    let number = \"T-H-R-E-E\"; // Don't change this line","highlight_start":18,"highlight_end":29}],"label":"expected due to this value","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables5.rs:6:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    let number = \"T-H-R-E-E\"; // Don't change this line\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-----------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected due to this value\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    number = 3;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&str`, found integer\u001b[0m\n\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"using_as","src_path":"C:\\Users\\stask\\rustlings\\exercises\\23_conversions\\using_as.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0277`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0277`.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"cannot add `{integer}` to `&str`","code":{"code":"E0369","explanation":"A binary operation was attempted on a type which doesn't support it.\n\nErroneous code example:\n\n```compile_fail,E0369\nlet x = 12f32; // error: binary operation `<<` cannot be applied to\n               //        type `f32`\n\nx << 2;\n```\n\nTo fix this error, please check that this type implements this binary\noperation. Example:\n\n```\nlet x = 12u32; // the `u32` type does implement it:\n               // https://doc.rust-lang.org/stable/std/ops/trait.Shl.html\n\nx << 2; // ok!\n```\n\nIt is also possible to overload most operators for your own type by\nimplementing traits from `std::ops`.\n\nString concatenation appends the string on the right to the string on the\nleft and may require reallocation. This requires ownership of the string\non the left. If something should be added to a string literal, move the\nliteral to the heap by allocating it with `to_owned()` like in\n`\"Your text\".to_owned()`.\n"},"level":"error","spans":[{"file_name":"exercises\\01_variables\\variables5.rs","byte_start":260,"byte_end":266,"line_start":7,"line_end":7,"column_start":40,"column_end":46,"is_primary":false,"text":[{"text":"    println!(\"Number plus two is: {}\", number + 2);","highlight_start":40,"highlight_end":46}],"label":"&str","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\01_variables\\variables5.rs","byte_start":269,"byte_end":270,"line_start":7,"line_end":7,"column_start":49,"column_end":50,"is_primary":false,"text":[{"text":"    println!(\"Number plus two is: {}\", number + 2);","highlight_start":49,"highlight_end":50}],"label":"{integer}","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\01_variables\\variables5.rs","byte_start":267,"byte_end":268,"line_start":7,"line_end":7,"column_start":47,"column_end":48,"is_primary":true,"text":[{"text":"    println!(\"Number plus two is: {}\", number + 2);","highlight_start":47,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0369]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: cannot add `{integer}` to `&str`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\01_variables\\variables5.rs:7:47\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    println!(\"Number plus two is: {}\", number + 2);\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m-\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m{integer}\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m&str\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits5_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\15_traits\\traits5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtraits5_sol-419161613ddbc58b.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"strings2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\09_strings\\strings2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstrings2_sol-ac2664a481aa23bc.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rc1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\rc1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\librc1-ab4d05c74c1f69f3.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"Some errors have detailed explanations: E0308, E0369.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0308, E0369.\u001b[0m\n"}}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables5","src_path":"C:\\Users\\stask\\rustlings\\exercises\\01_variables\\variables5.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about an error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"structs3_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\07_structs\\structs3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libstructs3_sol-67c44d08d1c2dacf.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\08_enums\\enums1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libenums1_sol-9fbf3043ef79a645.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"hashmaps3","src_path":"C:\\Users\\stask\\rustlings\\exercises\\11_hashmaps\\hashmaps3.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libhashmaps3-f1d769e73d32b757.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"enums2_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\08_enums\\enums2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libenums2_sol-a68cbf660766768e.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\13_error_handling\\errors4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors4_sol-9fe3a14ee6a51459.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors4-2bb4c792d6730807.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"errors4","src_path":"C:\\Users\\stask\\rustlings\\exercises\\13_error_handling\\errors4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\liberrors4-e8692e7111f1be65.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\03_if\\if2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"exercises\\03_if\\if2.rs","byte_start":155,"byte_end":156,"line_start":6,"line_end":6,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"        1","highlight_start":9,"highlight_end":10}],"label":"expected `&str`, found integer","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"exercises\\03_if\\if2.rs","byte_start":80,"byte_end":84,"line_start":2,"line_end":2,"column_start":31,"column_end":35,"is_primary":false,"text":[{"text":"fn picky_eater(food: &str) -> &str {","highlight_start":31,"highlight_end":35}],"label":"expected `&str` because of return type","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mexercises\\03_if\\if2.rs:6:9\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn picky_eater(food: &str) -> &str {\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                               \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mexpected `&str` because of return type\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m        1\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected `&str`, found integer\u001b[0m\n\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"traits1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\15_traits\\traits1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libtraits1_sol-e446862f771c1025.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"modules1_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\10_modules\\modules1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libmodules1_sol-5d2f48ae9d60d932.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-message","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"if2","src_path":"C:\\Users\\stask\\rustlings\\exercises\\03_if\\if2.rs","edition":"2024","doc":true,"doctest":false,"test":true},"message":{"$message_type":"diagnostic","message":"For more information about this error, try `rustc --explain E0308`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about this error, try `rustc --explain E0308`.\u001b[0m\n"}}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"rc1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\19_smart_pointers\\rc1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\librc1-06c4d30e3bd4e709.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"variables4_sol","src_path":"C:\\Users\\stask\\rustlings\\solutions\\01_variables\\variables4.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":true},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libvariables4_sol-e6fc6f6e522d45c6.rmeta"],"executable":null,"fresh":false}
{"reason":"compiler-artifact","package_id":"path+file:///C:/Users/stask/rustlings#exercises@0.0.0","manifest_path":"C:\\Users\\stask\\rustlings\\Cargo.toml","target":{"kind":["bin"],"crate_types":["bin"],"name":"iterators1","src_path":"C:\\Users\\stask\\rustlings\\exercises\\18_iterators\\iterators1.rs","edition":"2024","doc":true,"doctest":false,"test":true},"profile":{"opt_level":"0","debuginfo":2,"debug_assertions":true,"overflow_checks":true,"test":false},"features":[],"filenames":["C:\\Users\\stask\\rustlings\\target\\debug\\deps\\libiterators1-c6d9c01a5fde858e.rmeta"],"executable":null,"fresh":false}
{"reason":"build-finished","success":false}
